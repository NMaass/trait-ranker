{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/RankingTrait.js","utils/FadeTextSeries.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","components/NavBar/HomeButton.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","components/Selection/SelectionPage.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","Artistry","_jsx","GiPalette","BsMusicNoteBeamed","Leadership","GiFlyingFlag","Excellence","MdLeaderboard","MdPsychology","GiClothes","Independence","GiBreakingChain","Flexibility","GiSplitArrows","MdSocialDistance","Rest","GiNightSleep","Kindness","RiUserHeartFill","Recreation","MdSportsSoccer","Strength","MdFitnessCenter","Wisdom","MdMenuBook","Empathy","MdConnectWithoutContact","Trust","SiHandshake","Spontaneity","BiAlarmOff","Adventure","GiMountainRoad","Integrity","MdOutlineVerifiedUser","Generosity","MdVolunteerActivism","Patience","MdAccessTime","Perseverance","GiMountainClimbing","Mercy","GiGlowingHands","Romance","GiHeartInside","Athleticism","GiMedallist","MdOutlineThumbsUpDown","Productivity","GiGearHammer","Nature","BsFillTreeFill","Peace","BsPeace","Determination","FaFistRaised","Resourcefulness","HiPuzzle","Authority","RiGovernmentLine","Hope","GiHeartKey","Challenge","GiCrossedSwords","Decisiveness","GiChoice","Comfort","GiPillow","Joy","BiHappyBeaming","Fairness","HiOutlineScale","Affection","FaRegKissWinkHeart","Confidence","BsFillShieldLockFill","Respect","FaHandshake","Discipline","BsFillStopwatchFill","Frugality","FaPiggyBank","Suffering","RiEmotionSadLine","FaChild","Optimism","GrLineChart","Ambition","FiTarget","Craftsmanship","FaTools","Vulnerability","BsFillUnlockFill","Family","MdFamilyRestroom","Boldness","GiLion","Caution","RiErrorWarningFill","Confrontation","Charisma","FaGrinStars","Ingenuity","Teachability","FaUserGraduate","Pessimism","FaThumbsDown","Loyality","GiSittingDog","GiMeditation","Creativity","FaShapes","Realism","BiGlasses","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","_ref","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","_useState","useState","_useState2","_slicedToArray","showTooltip","setShowTooltip","_useState3","_useState4","showLink","setShowLink","_jsxs","Grid","container","direction","alignItems","justifyContent","spacing","children","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","_x2","_x3","_setDBTraits","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","hash","traitArray","wrap","_context2","prev","next","setDoc","doc","e","stop","getDBTraits","_x4","_getDBTraits","_callee3","docRef","docSnap","_context3","getDoc","sent","exists","data","abrupt","SmallTraitList","List","slice","map","trait","ListItem","ListItemAvatar","IconContext","Provider","value","size","ListItemText","ResultsPage","topTraits","userID","useEffect","steps","trackResultsPage","_callee","_context","style","transform","reverse","RankingTrait","isMobile","useMediaQuery","rippleRef","React","useRef","className","onMouseDown","current","start","onMouseUp","TouchRipple","ref","center","FadeTextSeries","stringArray","currentText","setCurrentText","checked","setChecked","fadeTime","count","setInterval","Fade","in","timeout","enter","exit","Typography","sx","minHeight","marginTop","position","width","align","RankingPage","setTopTraits","history","_React$useState","finalList","_React$useState2","displayedPairs","setDisplayedPairs","initialPairs","sortedPairs","sortingPair","joinStack","mergeStack","leftGuess","rightGuess","finishedList","unevenList","pop","push","handlePick","pick","listLen","doJoinRound","doMergeRound","doInitialRound","some","any","buildMerge","shift","concat","clearStacks","splice","list","buildJoinStack","buildMergeStack","leftMergeStack","rightMergeStack","trackRankingPage","HelpDialogBox","setOpen","IconButton","HelpOutlineIcon","Dialog","maxWidth","borderRadius","DialogContentText","paragraph","margin","HomeButton","color","NavBar","Box","flexGrow","AppBar","Toolbar","marginLeft","SelectionTrait","provided","_objectSpread","dragHandleProps","draggable","Container","styled","div","_templateObject","_taggedTemplateLiteral","getStyle","snapshot","axisLockX","split","draggingCustomStyle","isDropAnimating","_snapshot$dropAnimati","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","index","Draggable","draggableId","draggableProps","innerRef","isDragging","TraitList","_templateObject2","props","isDraggingOver","hoverColor","isStarter","SelectionDroppable","column","_ref$isStarter","_ref$hoverColor","Droppable","droppableId","classname","droppableProps","indexOf","placeholder","SelectionPage","columnData","swipeHandlers","selectionIntro","FreeDragTrait","isDraggable","isDragDisabled","Card","backgroundColor","DragColumn","ReorderableColumn","colors","TryItButton","source","Source","trackShareConversion","replace","ReorderGuess","onDone","showTryIt","showLockIn","padding","GuessPage","setColumnData","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","_useState5","_useState6","currentTraits","setCurrentTraits","_useState7","_useState8","showPicks","setShowPicks","_useState9","_useState10","showColumn","setShowColumn","_useState11","_useState12","setShowIt","_useState13","_useState14","setShowLockIn","includes","loadNextTraits","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","sensorAPIRef","ReactGA","initialize","swipe","api","warn","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","DragDropContext","onDragEnd","_objectSpread3","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","_defineProperty","newTraitIds","newColumn","sensors","Route","exact","path","AppWrapper","HashRouter","basename","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a4231e4a.chunk.js","sourcesContent":["import {\r\n  BiAlarmOff,\r\n  BiHappyBeaming,\r\n  BsFillShieldLockFill,\r\n  BsFillStopwatchFill,\r\n  BsFillTreeFill,\r\n  BsFillUnlockFill,\r\n  BsMusicNoteBeamed,\r\n  BsPeace,\r\n  FaChild,\r\n  FaFistRaised,\r\n  FaHandshake,\r\n  FaPiggyBank,\r\n  FaRegKissWinkHeart,\r\n  FaTools,\r\n  FiTarget,\r\n  GiBreakingChain,\r\n  GiChoice,\r\n  GiClothes,\r\n  GiCrossedSwords,\r\n  GiFlyingFlag,\r\n  GiGearHammer,\r\n  GiGlowingHands,\r\n  GiHeartInside,\r\n  GiHeartKey,\r\n  GiMedallist,\r\n  GiMountainClimbing,\r\n  GiMountainRoad,\r\n  GiNightSleep,\r\n  GiPalette,\r\n  GiPillow,\r\n  GiSplitArrows,\r\n  GrLineChart,\r\n  HiOutlineScale,\r\n  HiPuzzle,\r\n  MdAccessTime,\r\n  MdConnectWithoutContact,\r\n  MdFamilyRestroom,\r\n  MdFitnessCenter,\r\n  MdLeaderboard,\r\n  MdMenuBook,\r\n  MdOutlineThumbsUpDown,\r\n  MdOutlineVerifiedUser,\r\n  MdPsychology,\r\n  MdSocialDistance,\r\n  MdSportsSoccer,\r\n  MdVolunteerActivism,\r\n  RiEmotionSadLine,\r\n  RiGovernmentLine,\r\n  RiUserHeartFill,\r\n  SiHandshake,\r\n  GiLion,\r\n  RiErrorWarningFill,\r\n  FaGrinStars,\r\n  GiTeacher,\r\n  FaThumbsDown,\r\n  GiSittingDog,\r\n  FaUserGraduate,\r\n  GiMeditation,\r\n  FaShapes,\r\n  BiGlasses,\r\n} from \"react-icons/all\";\r\n\r\nconst allTraits = [\r\n  'Adventure',\r\n  'Ambition',\r\n  'Athleticism',\r\n  'Boldness',\r\n  'Caution',\r\n  'Charisma',\r\n  'Confrontation',\r\n  'Craftsmanship',\r\n  'Creativity',\r\n  'Decisiveness',\r\n  'Discipline',\r\n  'Empathy',\r\n  'Flexibility',\r\n  'Frugality',\r\n  'Independence',\r\n  'Ingenuity',\r\n  'Musical Skill',\r\n    'Loyality',\r\n  'Optimism',\r\n  'Patience',\r\n  'Peace',\r\n  'Perseverance',\r\n  'Personal Space',\r\n  'Realism',\r\n  'Physical Appearance',\r\n  'Romance',\r\n  'Self-Improvement',\r\n  'Teachability',\r\n  'Vulnerability',\r\n];\r\n\r\nexport const traitIcons = {\r\n  Artistry: <GiPalette />,\r\n  \"Musical Skill\": <BsMusicNoteBeamed />,\r\n  Leadership: <GiFlyingFlag />,\r\n  Excellence: <MdLeaderboard />,\r\n  \"Self Control\": <MdPsychology />,\r\n  \"Physical Appearance\": <GiClothes />,\r\n  Independence: <GiBreakingChain />,\r\n  Flexibility: <GiSplitArrows />,\r\n  \"Personal Space\": <MdSocialDistance />,\r\n  Rest: <GiNightSleep />,\r\n  Kindness: <RiUserHeartFill />,\r\n  Recreation: <MdSportsSoccer />,\r\n  Strength: <MdFitnessCenter />,\r\n  Wisdom: <MdMenuBook />,\r\n  Empathy: <MdConnectWithoutContact />,\r\n  Trust: <SiHandshake />,\r\n  Spontaneity: <BiAlarmOff />,\r\n  Adventure: <GiMountainRoad />,\r\n  Integrity: <MdOutlineVerifiedUser />,\r\n  Generosity: <MdVolunteerActivism />,\r\n  Patience: <MdAccessTime />,\r\n  Perseverance: <GiMountainClimbing />,\r\n  Mercy: <GiGlowingHands />,\r\n  Romance: <GiHeartInside />,\r\n  Athleticism: <GiMedallist />,\r\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\r\n  Productivity: <GiGearHammer />,\r\n  Nature: <BsFillTreeFill />,\r\n  Peace: <BsPeace />,\r\n  Determination: <FaFistRaised />,\r\n  Resourcefulness: <HiPuzzle />,\r\n  Authority: <RiGovernmentLine />,\r\n  Hope: <GiHeartKey />,\r\n  Challenge: <GiCrossedSwords />,\r\n  Decisiveness: <GiChoice />,\r\n  Comfort: <GiPillow />,\r\n  Joy: <BiHappyBeaming />,\r\n  Fairness: <HiOutlineScale />,\r\n  Affection: <FaRegKissWinkHeart />,\r\n  Confidence: <BsFillShieldLockFill />,\r\n  Respect: <FaHandshake />,\r\n  Discipline: <BsFillStopwatchFill />,\r\n  Frugality: <FaPiggyBank />,\r\n  Suffering: <RiEmotionSadLine />,\r\n  \"Child-likeness\": <FaChild />,\r\n  Optimism: <GrLineChart />,\r\n  Ambition: <FiTarget />,\r\n  Craftsmanship: <FaTools />,\r\n  Vulnerability: <BsFillUnlockFill />,\r\n  Family: <MdFamilyRestroom />,\r\n  Boldness: <GiLion/>,\r\n  Caution: <RiErrorWarningFill/>,\r\n  Confrontation: <GiCrossedSwords/>,\r\n  Charisma: <FaGrinStars/>,\r\n  Ingenuity: <HiPuzzle/>,\r\n  Teachability: <FaUserGraduate/>,\r\n  Pessimism: <FaThumbsDown/>,\r\n  Loyality: <GiSittingDog/>,\r\n  'Self-Improvement': <GiMeditation/>,\r\n  Creativity: <FaShapes/>,\r\n  Realism: <BiGlasses/>,\r\n};\r\nexport default allTraits;\r\n","export default function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import traits from \"../../utils/listOfAllTraits\";\r\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\n\r\nconst initialTraits = {\r\n  traits,\r\n  columns: {\r\n    column1: {\r\n      id: \"column1\",\r\n      title: \"Not Valued\",\r\n      traitIds: [],\r\n    },\r\n    column2: {\r\n      id: \"column2\",\r\n      title: \"Traits\",\r\n      traitIds: shuffle(listOfAllTraits),\r\n    },\r\n    column3: {\r\n      id: \"column3\",\r\n      title: \"Valued\",\r\n      traitIds: [],\r\n    },\r\n    guessing: {\r\n      id: \"guessing\",\r\n      title: \"guessing\",\r\n      traitIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\r\n};\r\nexport default initialTraits;\r\n","export default function makeId(length) {\r\n  let result = \"\";\r\n  const characters = \"0123456789\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import mixpanel from \"mixpanel-browser\";\r\nimport LogRocket from \"logrocket\";\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\r\nLogRocket.init(\"zwugvl/trait-ranker\");\r\n\r\nLogRocket.getSessionURL(function (sessionURL) {\r\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\r\n});\r\n\r\nexport function makeAndTrackId(len) {\r\n  let Id = makeId(len);\r\n  mixpanel.track(\"Session Start\", { steps: 1 });\r\n  mixpanel.people.increment(\"sessions\", 1);\r\n  return Id;\r\n}\r\n\r\nexport function trackRankingPage(topTraits) {\r\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\r\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\r\n}\r\nexport function trackResultsPage(topTraits) {\r\n  mixpanel.track(\"Results Step\", { steps: 3 });\r\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\r\n}\r\nexport function trackShare() {\r\n  mixpanel.track(\"Shared\");\r\n}\r\nexport function trackShowTraits() {\r\n  mixpanel.track(\"Show Traits\");\r\n}\r\nexport function trackGuessTraits() {\r\n  mixpanel.track(\"Guess Traits\");\r\n}\r\nexport function trackGuessed(guesses) {\r\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\r\n}\r\nexport function trackShareConversion(source) {\r\n  mixpanel.track(\"Share Conversion\", { Source: source });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport {trackShare} from \"../utils/mixpanel\"\r\n\r\nconst CopyableLink = ({ text }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const onCopy = () => {\r\n    trackShare();\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          text: \"Take a look at my most valued traits\",\r\n          url: text,\r\n        })\r\n        .then(() => console.log(\"successful share\"))\r\n        .catch((error) => console.log(\"error sharing\", error));\r\n    } else {\r\n      navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => console.log(\"Copied!\"))\r\n        .catch(() => console.log(\"Copy failed\"));\r\n      setShowTooltip(true);\r\n      setShowLink(true);\r\n    }\r\n  };\r\n  const onTipClose = () => {\r\n    setShowTooltip(false);\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Tooltip\r\n          title={\"Copied to clipboard!\"}\r\n          open={showTooltip}\r\n          leaveDelay={1000}\r\n          onClose={onTipClose}\r\n        >\r\n          <Button variant=\"contained\" onClick={onCopy}>\r\n            Share\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      {showLink && (\r\n        <Grid item>\r\n          <InputLabel>{text}</InputLabel>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default CopyableLink;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\r\n  authDomain: \"trait-ranker.firebaseapp.com\",\r\n  projectId: \"trait-ranker\",\r\n  storageBucket: \"trait-ranker.appspot.com\",\r\n  messagingSenderId: \"387696334301\",\r\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\r\n  measurementId: \"G-K0FPHGRC6R\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function getHash(len) {\r\n  let timeout = false;\r\n  while (timeout === false) {\r\n    const hash = makeId(len);\r\n    const docRef = doc(db, hash);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      console.log(\"repeat hash\");\r\n    } else {\r\n      console.log(\"hash \" + hash);\r\n      return hash;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDBTraits(hash, traitArray) {\r\n  await setDoc(doc(db, \"Traits\", hash), {\r\n    traits: traitArray,\r\n  }).catch((e) => {\r\n    console.log(e);\r\n  });\r\n  console.log(doc(db, \"Traits\", hash),traitArray);\r\n}\r\n\r\nexport async function getDBTraits(hash) {\r\n  const docRef = doc(db, \"Traits\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    const traits = docSnap.data().traits;\r\n    console.log(traits);\r\n    return traits;\r\n  } else {\r\n    console.log(\"no doc\");\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { traitIcons } from \"../utils/listOfAllTraits\";\r\n\r\nconst SmallTraitList = ({ traits }) => {\r\n  return (\r\n    <List>\r\n      {traits.slice(0, 7).map((trait) => {\r\n        return (\r\n          <ListItem key={trait}>\r\n            <ListItemAvatar>\r\n              <IconContext.Provider value={{ size: \"5vh\" }}>\r\n                {traitIcons[trait]}\r\n              </IconContext.Provider>\r\n            </ListItemAvatar>\r\n            <ListItemText>{trait}</ListItemText>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\nexport default SmallTraitList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport makeId from \"../utils/makeIdUtil\";\r\nimport CopyableLink from \"./CopyableLink\";\r\nimport { setDBTraits } from \"../utils/Firebase\";\r\nimport SmallTraitList from \"./SmallTraitList\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { trackResultsPage } from \"../utils/mixpanel\";\r\n\r\nconst ResultsPage = ({ topTraits, userID }) => {\r\n  useEffect(() => {\r\n    trackResultsPage(topTraits);\r\n    (async () => {\r\n      console.log(\"setting traits\", topTraits);\r\n      await setDBTraits(userID, topTraits);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ transform: \"Scale(1.25)\" }}\r\n    >\r\n      <Grid item>\r\n        <h3>Top Traits</h3>\r\n      </Grid>\r\n      <Grid item>\r\n        <SmallTraitList traits={topTraits.reverse()} />\r\n      </Grid>\r\n      <Grid item>\r\n        <CopyableLink\r\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\r\n\r\nconst RankingTrait = ({ trait, onClick }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  const rippleRef = React.useRef(null);\r\n  const onRippleStart = (e) => {\r\n    rippleRef.current.start(e);\r\n  };\r\n  const onRippleStop = (e) => {\r\n    rippleRef.current.stop(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card rankCard\"\r\n      onClick={onClick}\r\n      onMouseDown={onRippleStart}\r\n      onMouseUp={onRippleStop}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n      <h1>{trait}</h1>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"20vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n        </Grid>\r\n      </Grid>\r\n      <TouchRipple ref={rippleRef} center={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTrait;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Fade, Typography } from \"@mui/material\";\r\n\r\nconst FadeTextSeries = ({ stringArray, variant }) => {\r\n  const [currentText, setCurrentText] = useState(stringArray[0]);\r\n  const [checked, setChecked] = useState(true);\r\n  const fadeTime = 3000;\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n\r\n    setInterval(() => {\r\n      setChecked((prev) => !prev);\r\n    }, fadeTime);\r\n\r\n    setInterval(() => {\r\n      if (count !== stringArray.length - 1) {\r\n        count++;\r\n        setCurrentText(stringArray[count]);\r\n      } else {\r\n        setCurrentText(\"\");\r\n      }\r\n    }, fadeTime * 2);\r\n  }, []);\r\n\r\n  return (\r\n    <Fade\r\n      in={checked}\r\n      timeout={{\r\n        enter: fadeTime * 1.9,\r\n        exit: fadeTime * 1.9,\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          minHeight: \"1.9rem\",\r\n          marginTop: \"8vh\",\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n        }}\r\n        align=\"center\"\r\n        variant={variant}\r\n      >\r\n        {currentText}\r\n      </Typography>\r\n    </Fade>\r\n  );\r\n};\r\nexport default FadeTextSeries;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport RankingTrait from \"./TraitCards/RankingTrait\";\r\nimport { Grid, useMediaQuery, Box } from \"@mui/material\";\r\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\r\nimport { trackRankingPage } from \"../utils/mixpanel\";\r\n\r\nconst RankingPage = ({ topTraits, setTopTraits, history, finalList }) => {\r\n  const [displayedPairs, setDisplayedPairs] = React.useState(\r\n    topTraits.slice(0, 2)\r\n  );\r\n\r\n  let initialPairs = useRef([]);\r\n  let sortedPairs = useRef([]);\r\n  let sortingPair = useRef([]);\r\n\r\n  let joinStack = useRef([]);\r\n  let mergeStack = useRef([]);\r\n\r\n  let leftGuess = useRef(0);\r\n  let rightGuess = useRef(0);\r\n\r\n  let finishedList = useRef([]);\r\n  let unevenList = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let initialTraits = topTraits;\r\n    setDisplayedPairs(initialTraits.slice(0, 2));\r\n\r\n    if (initialTraits.length % 2) {\r\n      //initialize finished list with first element if uneven\r\n      unevenList.current = initialTraits.pop();\r\n    }\r\n    for (let i = 0; i < initialTraits.length; i += 2) {\r\n      //generate pairs for the user to sort\r\n      initialPairs.current.push([initialTraits[i], initialTraits[i + 1]]);\r\n    }\r\n  }, []);\r\n\r\n  const handlePick = (pick) => {\r\n    //looks at which arrays are empty to determine what stage the sort is in\r\n    console.log(\"pick: \" + pick);\r\n    const listLen = finishedList.current.length;\r\n    if (listLen > 6) {\r\n      console.log(\"the list length:\", listLen);\r\n      finishedList.current = finishedList.current.slice(listLen - 7);\r\n    }\r\n\r\n    if (joinStack.current.length !== 0) {\r\n      //checking for 'easy' joins\r\n      doJoinRound(pick);\r\n    } else if (mergeStack.current.length !== 0) {\r\n      doMergeRound(pick);\r\n    }\r\n\r\n    if (initialPairs.current.length !== 0) {\r\n      //sorting pairs\r\n      doInitialRound(pick);\r\n    }\r\n\r\n    let mergeStackHasValues = mergeStack.current.some(function (any) {\r\n      return any.length;\r\n    }); //check if all arrays are empty\r\n    if (!mergeStackHasValues && initialPairs.current.length === 0) {\r\n      if (sortedPairs.current.length === 0) {\r\n        setTopTraits(finishedList.current);\r\n        console.log(\"finished the list\" + finishedList.current);\r\n        history.push(\"/Results\");\r\n      } else {\r\n        buildMerge(sortedPairs.current[0]);\r\n      }\r\n    }\r\n\r\n    console.log(\"initialPairs: \", initialPairs.current);\r\n    console.log(\"sortedPairs: \", sortedPairs.current);\r\n    console.log(\"finished list: \", finishedList.current);\r\n    console.log(\"Join stack: \", joinStack.current);\r\n    console.log(\"mergeStack\", mergeStack.current);\r\n  };\r\n\r\n  const doInitialRound = (pick) => {\r\n    if (pick === initialPairs.current[0][0]) {\r\n      initialPairs.current[0].reverse();\r\n      console.log(\"reversed \", initialPairs.current[0]);\r\n    }\r\n\r\n    sortedPairs.current.push(initialPairs.current.shift());\r\n\r\n    setDisplayedPairs(initialPairs.current[0]);\r\n    if (initialPairs.current.length === 2) {\r\n      //set up the merges one render ahead\r\n      if (unevenList.current !== null) {\r\n        //populate finished list with uneven element\r\n        finishedList.current.push(unevenList.current);\r\n        console.log(\"Prepping for round uneven\");\r\n      } else {\r\n        finishedList.current = sortedPairs.current.shift(); //populate list with first sorted pair\r\n        console.log(\"Prepping for round 2\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const doJoinRound = (pick) => {\r\n    if (joinStack.current.length === 2) {\r\n      //check if left or right join\r\n      if (pick === sortingPair.current[0]) {\r\n        finishedList.current = finishedList.current.concat(sortingPair.current); //a 'successful' join\r\n        clearStacks();\r\n      } else {\r\n        joinStack.current.shift();\r\n        setDisplayedPairs(joinStack.current[0]);\r\n      }\r\n    } else {\r\n      if (pick === sortingPair.current[1]) {\r\n        joinStack.current = [];\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      } else {\r\n        finishedList.current = sortingPair.current.concat(finishedList.current);\r\n        clearStacks();\r\n      }\r\n    }\r\n  };\r\n\r\n  const doMergeRound = (pick) => {\r\n    if (displayedPairs[0] === sortingPair.current[0]) {\r\n      if (pick !== displayedPairs[0]) {\r\n        //found what is liked more and placing it in the sorted list\r\n        finishedList.current.splice(\r\n          leftGuess.current,\r\n          0,\r\n          sortingPair.current[0]\r\n        );\r\n        mergeStack.current[0] = [];\r\n      } else {\r\n        //tries next item in current sorted list\r\n        mergeStack.current[0].shift();\r\n        leftGuess.current++;\r\n        console.log(\"leftGuess \", leftGuess.current);\r\n        //tries to shift back and forth between items to reduce fatigue\r\n        if (mergeStack.current[0].length === 0) {\r\n          finishedList.current.splice(\r\n            leftGuess.current,\r\n            0,\r\n            sortingPair.current[0]\r\n          );\r\n          mergeStack.current[0].shift();\r\n        }\r\n      }\r\n      if (mergeStack.current[1].length !== 0) {\r\n        setDisplayedPairs(mergeStack.current[1][0]);\r\n      } else {\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      }\r\n    } else {\r\n      // higher\r\n      if (pick === displayedPairs[0]) {\r\n        finishedList.current.splice(\r\n          rightGuess.current + 1,\r\n          0,\r\n          sortingPair.current[1]\r\n        );\r\n        mergeStack.current[1] = [];\r\n      } else {\r\n        mergeStack.current[1].shift();\r\n        rightGuess.current--;\r\n        console.log(\"rightGuess \", rightGuess.current);\r\n        if (mergeStack.current[1].length === 0) {\r\n          finishedList.current.splice(\r\n            rightGuess.current + 1,\r\n            0,\r\n            sortingPair.current[1]\r\n          );\r\n          mergeStack.current[1].shift();\r\n        }\r\n      }\r\n      if (mergeStack.current[0].length !== 0) {\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      } else {\r\n        setDisplayedPairs(mergeStack.current[1][0]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const buildMerge = (list) => {\r\n    console.log(\"building round 2\");\r\n    buildJoinStack(list);\r\n    buildMergeStack(list);\r\n    sortingPair.current = sortedPairs.current.shift();\r\n    leftGuess.current = 0;\r\n    rightGuess.current = finishedList.current.length;\r\n  };\r\n\r\n  const buildJoinStack = (list) => {\r\n    joinStack.current.push([\r\n      list[0],\r\n      finishedList.current[finishedList.current.length - 1],\r\n    ]);\r\n    joinStack.current.push([list[1], finishedList.current[0]]);\r\n    setDisplayedPairs(joinStack.current[0]);\r\n    console.log(\"Initial Join stack: \", joinStack.current);\r\n  };\r\n\r\n  const buildMergeStack = (list) => {\r\n    let leftMergeStack = [];\r\n    let rightMergeStack = [];\r\n\r\n    for (let i = 0; i < finishedList.current.length; i++) {\r\n      leftMergeStack.push([list[0], finishedList.current[i]]);\r\n    }\r\n    for (let i = finishedList.current.length - 1; i >= 0; i--) {\r\n      rightMergeStack.push([list[1], finishedList.current[i]]);\r\n    }\r\n    mergeStack.current = [leftMergeStack, rightMergeStack];\r\n    console.log(\"initial mergeStack\", mergeStack.current);\r\n  };\r\n  const clearStacks = () => {\r\n    joinStack.current = [];\r\n    mergeStack.current = [];\r\n    sortingPair.current = [];\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  useEffect(() => {\r\n    trackRankingPage(topTraits);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"rankingFade\">\r\n        <FadeTextSeries\r\n          stringArray={[\r\n            `${isMobile ? \"Tap\" : \"Click\"} on the trait you value more`,\r\n          ]}\r\n          variant={isMobile ? \"h3\" : \"h5\"}\r\n        />\r\n      </div>\r\n      <Grid\r\n        container\r\n        spacing={isMobile ? 60 : 1}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        direction={isMobile ? \"row\" : \"column\"}\r\n      >\r\n        <Grid item>\r\n          <RankingTrait\r\n            onClick={() => handlePick(displayedPairs[0])}\r\n            trait={displayedPairs[0]}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <RankingTrait\r\n            onClick={() => handlePick(displayedPairs[1])}\r\n            trait={displayedPairs[1]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst HelpDialogBox = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton size=\"large\" onClick={handleOpen}>\r\n        <HelpOutlineIcon />\r\n      </IconButton>\r\n\r\n      <Dialog\r\n        onClose={handleClose}\r\n        open={open}\r\n        maxWidth={\"xl\"}\r\n        style={{ borderRadius: 0 }}\r\n      >\r\n        <DialogContentText paragraph={false} style={{ margin: \"24px\" }}>\r\n          <br />\r\n          1. Drag traits to the left or right depending on whether you value\r\n          them.\r\n          <br />\r\n          <br />\r\n          2. Click on the traits you value more.\r\n          <br />\r\n          <br />\r\n          3. Click the share buttons to show your friends!\r\n          <br />\r\n        </DialogContentText>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialogBox;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst HomeButton = ({ history }) => {\r\n  const handleHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Button color=\"inherit\" onClick={handleHome}>\r\n      Trait Ranker\r\n    </Button>\r\n  );\r\n};\r\nexport default HomeButton;\r\n\r\n\r\n","import React from \"react\";\r\nimport { AppBar, Box, Toolbar } from \"@mui/material\";\r\n\r\nimport HelpDialogBox from \"./HelpDialogBox\";\r\nimport HomeButton from \"./HomeButton\";\r\n\r\nconst NavBar = ({ history }) => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <HomeButton history={history} />\r\n          <div style={{ marginLeft: \"auto\" }}>\r\n            <HelpDialogBox />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\n\r\nconst SelectionTrait = ({ trait, provided }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  return (\r\n    <div\r\n      className=\"card selection\"\r\n      {...provided.dragHandleProps}\r\n      draggable={true}\r\n      id={trait}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n          <h1>{trait}</h1>\r\n        </Grid>\r\n      <Grid item>\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"60vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n      </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectionTrait;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport SelectionTrait from \"./SelectionTrait\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\r\n  if (style?.transform) {\r\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\r\n    return {\r\n      ...style,\r\n      transform: axisLockX,\r\n    };\r\n  }\r\n  return style;\r\n};\r\n\r\nfunction getStyle(style, snapshot) {\r\n  style = draggingCustomStyle(style);\r\n  if (!snapshot.isDropAnimating) {\r\n    return style;\r\n  }\r\n  const { moveTo, duration } = snapshot.dropAnimation;\r\n  const draggingOver = snapshot.draggingOver;\r\n  console.log(draggingOver);\r\n  let offset = 0;\r\n  if (draggingOver === \"column1\") {\r\n    offset = -100;\r\n  } else if (draggingOver === \"column3\") {\r\n    offset = 100;\r\n  }\r\n  // move to the right spot\r\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\r\n\r\n  // patching the existing style\r\n  return {\r\n    ...style,\r\n    transform: translate,\r\n    // slowing down the drop\r\n    transition: `all  ${duration + 0.2}s`,\r\n  };\r\n}\r\n\r\nconst TraitDraggable = ({ trait, index }) => {\r\n  return (\r\n    <Draggable draggableId={trait} key={trait} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n          style={getStyle(provided.draggableProps.style, snapshot)}\r\n        >\r\n          <SelectionTrait trait={trait} provided={provided} />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default TraitDraggable\r\n","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TraitList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? props.hoverColor : \"white\"};\r\n  display: flex;\r\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\r\n  min-height: 100vh;\r\n  max-width: ${(props) => props.isStarter && \"1px\"};\r\n`;\r\n\r\nconst SelectionDroppable = ({\r\n  column,\r\n  isStarter = false,\r\n  hoverColor = \"lightBlue\",\r\n}) => {\r\n  return (\r\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\r\n      {(provided, snapshot) => (\r\n        <TraitList\r\n          classname=\"cards stack\"\r\n          ref={provided.innerRef}\r\n          isStarter={isStarter}\r\n          hoverColor={hoverColor}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n          {...provided.droppableProps}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item margin=\"auto\">\r\n              {isStarter && (\r\n                <TraitDraggable\r\n                  key={column?.traitIds[0]}\r\n                  trait={column?.traitIds[0]}\r\n                  index={column?.traitIds.indexOf(column?.traitIds[0])}\r\n                />\r\n              )}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </Grid>\r\n        </TraitList>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default SelectionDroppable\r\n","// @flow\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport SelectionDroppable from \"./SelectionDroppable\";\r\nimport { Box, Grid, useMediaQuery } from \"@mui/material\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst SelectionPage = ({\r\n  columnData,\r\n  setTopTraits,\r\n  history,\r\n  swipeHandlers,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"currentTraits: \", columnData.columns.column2.traitIds);\r\n    console.log(\"top traits: \", columnData.columns.column3.traitIds);\r\n    if (columnData.columns.column2.traitIds.length === 0) {\r\n      console.log(columnData.columns.column3.traitIds);\r\n      setTopTraits(columnData.columns.column3.traitIds);\r\n      console.log(\"setting traits from selection\");\r\n      history.push(\"/Rank\");\r\n    }\r\n  }, [columnData, history, setTopTraits]);\r\n\r\n  const selectionIntro = [\r\n    `${isMobile ? \"Swipe \" : \"Drag\"} left to pass, right to like`,\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <FadeTextSeries stringArray={selectionIntro} variant={\"h5\"} />\r\n      <div {...swipeHandlers}>\r\n        <Grid container spacing={0} wrap=\"nowrap\">\r\n          <SelectionDroppable\r\n            key={columnData.columns.column1.id}\r\n            column={columnData.columns.column1}\r\n            hoverColor={\"LightPink\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column2.id}\r\n            column={columnData.columns.column2}\r\n            isStarter={true}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column3.id}\r\n            column={columnData.columns.column3}\r\n            hoverColor={\"LightGreen\"}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default SelectionPage;\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport ReorderTrait from \"./ReorderTrait\";\r\nimport { Card, Grid } from \"@mui/material\";\r\n\r\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\r\n  return (\r\n    <Draggable draggableId={trait} index={index} isDragDisabled={!isDraggable}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Card className=\"wideCard\" sx={{ backgroundColor: color }}>\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <h3>{trait}</h3>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default FreeDragTrait;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DragColumn = styled.div``;\r\n\r\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\r\n  return (\r\n    <div>\r\n      <Droppable key={column.id} droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <DragColumn\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {column.traitIds.map((trait, index) => {\r\n                return (\r\n                  <Grid item key={trait}>\r\n                    <FreeDragTrait\r\n                      trait={trait}\r\n                      index={column.traitIds.indexOf(trait)}\r\n                      color={colors[index]}\r\n                      isDraggable={isDraggable}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n            {provided.placeholder}\r\n          </DragColumn>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default ReorderableColumn;\r\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.replace('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport TryItButton from \"./TryItButton\";\r\n\r\nconst ReorderGuess = ({\r\n  column,\r\n  onDone,\r\n  colors,\r\n  showTryIt,\r\n  history,\r\n  isDraggable,\r\n  showLockIn,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Grid item sx={{ padding: \"5vh\" }}></Grid>\r\n      <Grid item>\r\n        <ReorderableColumn\r\n          column={column}\r\n          colors={colors}\r\n          isDraggable={isDraggable}\r\n        />\r\n      </Grid>\r\n      {showLockIn && (\r\n        <Grid item sx={{ padding: \"5vh\" }}>\r\n          <Button onClick={onDone} variant=\"contained\">\r\n            Lock in\r\n          </Button>\r\n        </Grid>\r\n      )}\r\n      <Grid item>{showTryIt && <TryItButton history={history} />}</Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ReorderGuess;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport initialTraits from \"../Selection/initialTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport ReorderGuess from \"./ReorderGuess\";\r\nimport { trackGuessed } from \"../../utils/mixpanel\";\r\n\r\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\r\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\r\n  let wrongTraits = useRef([]);\r\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\r\n  let finalList = useRef([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n  const [currentTraits, setCurrentTraits] = useState([]);\r\n  const [showPicks, setShowPicks] = useState(true);\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [showTryIt, setShowIt] = useState(false);\r\n  const [showLockIn, setShowLockIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    while (wrongTraits.current.length < 7) {\r\n      //get eligible red herrings\r\n      if (!traitsLeft.current.includes(traitPool[0])) {\r\n        wrongTraits.current.push(traitPool[0]);\r\n      }\r\n      traitPool = traitPool.splice(1, traitPool.length);\r\n    }\r\n    loadNextTraits();\r\n  }, [traitPool]);\r\n\r\n  const handlePick = (pick) => {\r\n    finalList.current.push(pick);\r\n    if (traitsLeft.current.length === 0) {\r\n      const newTraits = {\r\n        ...columnData.columns.guessing,\r\n        traitIds: finalList.current,\r\n      };\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          guessing: newTraits,\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      trackGuessed(newColumnData.columns.guessing);\r\n      setShowColumn(true);\r\n      setShowPicks(false);\r\n    }\r\n    loadNextTraits();\r\n  };\r\n  const loadNextTraits = () => {\r\n    setCurrentTraits(\r\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\r\n    );\r\n    console.log(\"TraitsLeft: \", traitsLeft.current);\r\n    console.log(\"WrongTaits: \", wrongTraits.current);\r\n    console.log(finalList.current);\r\n  };\r\n  const onDone = () => {\r\n    console.log(\"done!\");\r\n    let guessColors = [];\r\n    const correctTraits = traits.slice(0, 7);\r\n    const guess = columnData.columns.guessing.traitIds;\r\n    for (let i = 0; i < correctTraits.length; i++) {\r\n      if (correctTraits[i] === guess[i]) {\r\n        guessColors.push(\"green\");\r\n        console.log(\"correct\", correctTraits[i], guess[i]);\r\n      } else if (correctTraits.includes(guess[i])) {\r\n        guessColors.push(\"gold\");\r\n        console.log(\"in there\", correctTraits[i], guess[i]);\r\n      } else {\r\n        guessColors.push(\"\");\r\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\r\n      }\r\n    }\r\n    setColors(guessColors);\r\n    setShowIt(true);\r\n    setShowLockIn(false);\r\n    setIsDraggable(false);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  return (\r\n    <div>\r\n      {showPicks && (\r\n        <Grid\r\n          container\r\n          spacing={isMobile ? 60 : 1}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          direction={isMobile ? \"row\" : \"column\"}\r\n        >\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[0])}\r\n              trait={currentTraits[0]}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[1])}\r\n              trait={currentTraits[1]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showColumn && (\r\n        <ReorderGuess\r\n          column={columnData.columns.guessing}\r\n          onDone={onDone}\r\n          colors={colors}\r\n          showTryIt={showTryIt}\r\n          showLockIn={showLockIn}\r\n          history={history}\r\n          isDraggable={isDraggable}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GuessPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDBTraits } from \"../../utils/Firebase\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport SmallTraitList from \"../SmallTraitList\";\r\nimport GuessPage from \"./GuessPage\";\r\nimport TryItButton from \"./TryItButton\";\r\nimport {trackShowTraits, trackGuessTraits} from \"../../utils/mixpanel\"\r\n\r\nconst SharedPage = ({ columnData, setColumnData, history }) => {\r\n  let { id } = useParams();\r\n  const [storedTraits, setStoredTraits] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [showGuessing, setShowGuessing] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getDBTraits(id).then((result) => {\r\n        setStoredTraits(result);\r\n      });\r\n    })();\r\n  }, [id]);\r\n  const showTraits = () => {\r\n    trackShowTraits();\r\n    setShowList(true);\r\n    setShowOptions(false);\r\n  };\r\n  const showGuess = () => {\r\n    trackGuessTraits();\r\n    setShowGuessing(true);\r\n    setShowOptions(false);\r\n  };\r\n  console.log(\"storedTraits\", storedTraits);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={isMobile ? 60 : 1}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction={isMobile ? \"row\" : \"column\"}\r\n    >\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showList && (\r\n        <Grid item>\r\n          <Grid container\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                direction='column'\r\n          >\r\n            <Grid item>\r\n              <SmallTraitList traits={storedTraits} />\r\n            </Grid>\r\n            <Grid>\r\n              <TryItButton history={history} source=\"Guess\"/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showGuessing && (\r\n        <Grid item>\r\n          <GuessPage\r\n            traits={storedTraits}\r\n            columnData={columnData}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SharedPage\r\n","// @flow\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport initialTraits from \"./Selection/initialTraits\";\r\nimport ResultsPage from \"./ResultsPage\";\r\nimport RankingPage from \"./RankingPage\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport { HashRouter, Route, useHistory } from \"react-router-dom\";\r\nimport SelectionPage from \"./Selection/SelectionPage\";\r\nimport ReactGA from \"react-ga\";\r\nimport SharedPage from \"./Share/SharedPage\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport tweenFunctions from \"tween-functions\";\r\nimport { makeAndTrackId } from \"../utils/mixpanel\";\r\n\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const [columnData, setColumnData] = useState(initialTraits);\r\n  const [topTraits, setTopTraits] = useState([]);\r\n  const [userId, setUserId] = useState(makeAndTrackId(8));\r\n  const sensorAPIRef = useRef<?SensorAPI>(null);\r\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\r\n  ReactGA.initialize(TRACKING_ID);\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //make sure the draggable moved\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = columnData.columns[source.droppableId];\r\n    const finish = columnData.columns[destination.droppableId];\r\n\r\n    //if moving within the same column\r\n    if (start === finish) {\r\n      const newTraitIds = Array.from(start.traitIds);\r\n      newTraitIds.splice(source.index, 1);\r\n      newTraitIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        traitIds: newTraitIds,\r\n      };\r\n\r\n      //override existing column\r\n      const newData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setColumnData(newData);\r\n      return;\r\n    }\r\n    //cross column moving\r\n    const startTraitIds = Array.from(start.traitIds);\r\n    startTraitIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      traitIds: startTraitIds,\r\n    };\r\n\r\n    const finishTraitIds = Array.from(finish.traitIds);\r\n    finishTraitIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      traitIds: finishTraitIds,\r\n    };\r\n\r\n    const newData = {\r\n      ...columnData,\r\n      columns: {\r\n        ...columnData.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n    setColumnData(newData);\r\n  };\r\n\r\n  function swipe(direction) {\r\n    const api: ?SensorAPI = sensorAPIRef.current;\r\n    if (!api) {\r\n      console.warn(\"unable to find sensor api\");\r\n      return null;\r\n    }\r\n    let endX;\r\n    if (direction === \"right\") {\r\n      endX = 100;\r\n    } else {\r\n      endX = -100;\r\n    }\r\n    const start = { x: 0, y: 0 };\r\n    const end = { x: endX, y: 0 };\r\n\r\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\r\n\r\n    if (!preDrag) {\r\n      console.warn(\"unable to start capturing\");\r\n      return null;\r\n    }\r\n\r\n    const drag = preDrag.fluidLift(start);\r\n\r\n    const points = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      points.push({\r\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\r\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\r\n      });\r\n    }\r\n    moveStepByStep(drag, points);\r\n  }\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      console.log(\"left swiped\");\r\n      swipe(\"left\");\r\n    },\r\n    onSwipedRight: () => {\r\n      console.log(\"right swiped\");\r\n      swipe(\"right\");\r\n    },\r\n  });\r\n\r\n  function moveStepByStep(drag, values) {\r\n    requestAnimationFrame(() => {\r\n      const newPosition = values.shift();\r\n      drag.move(newPosition);\r\n      if (values.length) {\r\n        moveStepByStep(drag, values);\r\n      } else {\r\n        drag.drop();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        sensors={[\r\n          (api) => {\r\n            sensorAPIRef.current = api;\r\n          },\r\n        ]}\r\n      >\r\n        <NavBar history={history} />\r\n        <Route exact path=\"/\">\r\n          <SelectionPage\r\n            columnData={columnData}\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n            swipeHandlers={swipeHandlers}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Rank\">\r\n          <RankingPage\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            history={history}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Results\">\r\n          <ResultsPage\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            userID={userId}\r\n          />\r\n        </Route>\r\n        <Route\r\n          path=\"/Share/:id\"\r\n          children={\r\n            <SharedPage columnData={columnData} setColumnData={setColumnData} history={history} />\r\n          }\r\n        />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <HashRouter basename={\"/trait-ranker\"}>\r\n      <App />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport AppWrapper from \"./components/App\";\r\n\r\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}