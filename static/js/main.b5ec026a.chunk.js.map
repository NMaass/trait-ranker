{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/FlipCard.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/RankingTrait.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","components/NavBar/HomeButton.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","components/Selection/SelectionPage.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","_jsx","BsQuestionCircle","AiOutlineOrderedList","Artistry","GiPalette","BsMusicNoteBeamed","Leadership","GiFlyingFlag","Excellence","MdLeaderboard","MdPsychology","GiClothes","Independence","GiBreakingChain","Flexibility","GiSplitArrows","MdSocialDistance","Rest","GiNightSleep","Kindness","RiUserHeartFill","Recreation","MdSportsSoccer","Strength","MdFitnessCenter","Wisdom","MdMenuBook","Empathy","MdConnectWithoutContact","Trust","SiHandshake","Spontaneity","BiAlarmOff","Adventure","GiMountainRoad","Integrity","MdOutlineVerifiedUser","Generosity","MdVolunteerActivism","Patience","MdAccessTime","Perseverance","GiMountainClimbing","Mercy","GiGlowingHands","Romance","GiHeartInside","Athleticism","GiMedallist","MdOutlineThumbsUpDown","Productivity","GiGearHammer","Nature","BsFillTreeFill","Peace","BsPeace","Determination","FaFistRaised","Resourcefulness","HiPuzzle","Authority","RiGovernmentLine","Hope","GiHeartKey","Challenge","GiCrossedSwords","Decisiveness","GiChoice","Comfort","GiPillow","Joy","BiHappyBeaming","Fairness","HiOutlineScale","Affection","FaRegKissWinkHeart","Confidence","BsFillShieldLockFill","Respect","FaHandshake","Discipline","BsFillStopwatchFill","Frugality","FaPiggyBank","Suffering","RiEmotionSadLine","FaChild","Optimism","GrLineChart","Ambition","FiTarget","Craftsmanship","FaTools","Vulnerability","BsFillUnlockFill","Family","MdFamilyRestroom","Boldness","GiLion","Caution","RiErrorWarningFill","Confrontation","Charisma","FaGrinStars","Ingenuity","Teachability","FaUserGraduate","Pessimism","FaThumbsDown","Loyality","GiSittingDog","GiMeditation","Creativity","GiPencilBrush","Realism","BiGlasses","Enthusiasm","GiFireworkRocket","MdBathtub","Spirituality","Detachment","GiButterfly","Vision","GiBinoculars","Simplicity","FaShapes","FaDoorOpen","Contentment","FaRegSmileBeam","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","_ref","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","_useState","useState","_useState2","_slicedToArray","showTooltip","setShowTooltip","_useState3","_useState4","showLink","setShowLink","_jsxs","Grid","container","direction","alignItems","justifyContent","spacing","children","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","_x2","_x3","_setDBTraits","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","hash","traitArray","wrap","_context2","prev","next","setDoc","doc","e","stop","getDBTraits","_x4","_getDBTraits","_callee3","docRef","docSnap","_context3","getDoc","sent","exists","data","abrupt","FlipCard","trait","index","value","setValue","flip","setFlip","useEffect","setTimeout","Card","className","concat","style","margin","CardContent","marginTop","IconContext","Provider","size","SmallTraitList","slice","map","ResultsPage","topTraits","userID","steps","trackResultsPage","_callee","_context","height","reverse","sx","padding","RankingTrait","isMobile","useMediaQuery","rippleRef","React","useRef","onMouseDown","current","start","onMouseUp","TouchRipple","ref","center","RankingPage","setTopTraits","history","_React$useState","finalList","_React$useState2","displayedPairs","setDisplayedPairs","initialPairs","sortedPairs","sortingPair","joinStack","mergeStack","leftGuess","rightGuess","finishedList","unevenList","pop","push","handlePick","pick","listLen","doJoinRound","doMergeRound","doInitialRound","some","any","buildMerge","shift","clearStacks","splice","list","buildJoinStack","buildMergeStack","leftMergeStack","rightMergeStack","trackRankingPage","Transition","forwardRef","props","Slide","_objectSpread","HelpDialogBox","currentPage","setOpen","_React$useState3","_React$useState4","grow","setGrow","handleClose","helpData","Selection","description","media","IconButton","HelpOutlineIcon","Dialog","TransitionComponent","fullScreen","marginLeft","marginRight","PaperProps","borderTopLeftRadius","borderTopRightRadius","DialogTitle","position","right","color","CloseIcon","DialogContentText","paragraph","src","width","alt","HomeButton","NavBar","Box","flexGrow","AppBar","Toolbar","SelectionTrait","provided","dragHandleProps","draggable","Container","styled","div","_templateObject","_taggedTemplateLiteral","getStyle","snapshot","transform","axisLockX","split","draggingCustomStyle","isDropAnimating","_snapshot$dropAnimati","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","Draggable","draggableId","draggableProps","innerRef","isDragging","TraitList","_templateObject2","isDraggingOver","hoverColor","isStarter","SelectionDroppable","column","_ref$isStarter","_ref$hoverColor","Droppable","droppableId","classname","droppableProps","indexOf","placeholder","SelectionPage","columnData","swipeHandlers","FreeDragTrait","isDraggable","isBouncing","setIsBouncing","currentColor","setCurrentColor","firstUpdate","isDragDisabled","backgroundColor","DragColumn","ReorderableColumn","colors","TryItButton","source","Source","trackShareConversion","replace","ReorderGuess","onDone","showTryIt","showLockIn","paddingTop","GuessPage","setColumnData","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","_useState5","_useState6","currentTraits","setCurrentTraits","_useState7","_useState8","showPicks","setShowPicks","_useState9","_useState10","showColumn","setShowColumn","_useState11","_useState12","setShowIt","_useState13","_useState14","setShowLockIn","includes","loadNextTraits","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","Typography","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","sensorAPIRef","ReactGA","initialize","swipe","api","warn","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","DragDropContext","onDragEnd","_objectSpread3","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","_defineProperty","newTraitIds","newColumn","sensors","Route","exact","path","AppWrapper","HashRouter","basename","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b5ec026a.chunk.js","sourcesContent":["import {\r\n  BiAlarmOff,\r\n  BiHappyBeaming,\r\n  BsFillShieldLockFill,\r\n  BsFillStopwatchFill,\r\n  BsFillTreeFill,\r\n  BsFillUnlockFill,\r\n  BsMusicNoteBeamed,\r\n  BsPeace,\r\n  FaChild,\r\n  FaFistRaised,\r\n  FaHandshake,\r\n  FaPiggyBank,\r\n  FaRegKissWinkHeart,\r\n  FaTools,\r\n  FiTarget,\r\n  GiBreakingChain,\r\n  GiChoice,\r\n  GiClothes,\r\n  GiCrossedSwords,\r\n  GiFlyingFlag,\r\n  GiGearHammer,\r\n  GiGlowingHands,\r\n  GiHeartInside,\r\n  GiHeartKey,\r\n  GiMedallist,\r\n  GiMountainClimbing,\r\n  GiMountainRoad,\r\n  GiNightSleep,\r\n  GiPalette,\r\n  GiPillow,\r\n  GiSplitArrows,\r\n  GrLineChart,\r\n  HiOutlineScale,\r\n  HiPuzzle,\r\n  MdAccessTime,\r\n  MdConnectWithoutContact,\r\n  MdFamilyRestroom,\r\n  MdFitnessCenter,\r\n  MdLeaderboard,\r\n  MdMenuBook,\r\n  MdOutlineThumbsUpDown,\r\n  MdOutlineVerifiedUser,\r\n  MdPsychology,\r\n  MdSocialDistance,\r\n  MdSportsSoccer,\r\n  MdVolunteerActivism,\r\n  RiEmotionSadLine,\r\n  RiGovernmentLine,\r\n  RiUserHeartFill,\r\n  SiHandshake,\r\n  GiLion,\r\n  RiErrorWarningFill,\r\n  FaGrinStars,\r\n  GiTeacher,\r\n  FaThumbsDown,\r\n  GiSittingDog,\r\n  FaUserGraduate,\r\n  GiMeditation,\r\n  FaShapes,\r\n  BiGlasses,\r\n  BsQuestionCircle,\r\n  AiOutlineOrderedList,\r\n  GiFireworkRocket,\r\n  MdBathtub,\r\n  GiFlyingTrout,\r\n  GiBinoculars,\r\n  FaRegSmileBeam,\r\n  FaDoorOpen,\r\n  GiPencilBrush,\r\n  GiButterfly,\r\n} from \"react-icons/all\";\r\n\r\nconst allTraits = [\r\n  \"Adventure\",\r\n  \"Ambition\",\r\n  \"Athleticism\",\r\n  \"Artistry\",\r\n  \"Boldness\",\r\n  \"Caution\",\r\n  \"Charisma\",\r\n  \"Confrontation\",\r\n  \"Contentment\",\r\n  \"Craftsmanship\",\r\n  \"Creativity\",\r\n  \"Decisiveness\",\r\n  \"Detachment\",\r\n  \"Discipline\",\r\n  \"Empathy\",\r\n  \"Enthusiasm\",\r\n  \"Flexibility\",\r\n  \"Frugality\",\r\n  \"Independence\",\r\n  \"Ingenuity\",\r\n  \"Musical Skill\",\r\n  \"Loyality\",\r\n  \"Open-mindedness\",\r\n  \"Optimism\",\r\n  \"Patience\",\r\n  \"Perseverance\",\r\n  \"Personal Space\",\r\n  \"Physical Appearance\",\r\n  \"Realism\",\r\n  \"Romance\",\r\n  \"Self-care\",\r\n  \"Spirituality\",\r\n  \"Simplicity\",\r\n  \"Teachability\",\r\n  \"Vision\",\r\n  \"Vulnerability\",\r\n];\r\n\r\nexport const traitIcons = {\r\n  \"Guess the traits\": <BsQuestionCircle />,\r\n  \"Show the traits\": <AiOutlineOrderedList />,\r\n  Artistry: <GiPalette />,\r\n  \"Musical Skill\": <BsMusicNoteBeamed />,\r\n  Leadership: <GiFlyingFlag />,\r\n  Excellence: <MdLeaderboard />,\r\n  \"Self Control\": <MdPsychology />,\r\n  \"Physical Appearance\": <GiClothes />,\r\n  Independence: <GiBreakingChain />,\r\n  Flexibility: <GiSplitArrows />,\r\n  \"Personal Space\": <MdSocialDistance />,\r\n  Rest: <GiNightSleep />,\r\n  Kindness: <RiUserHeartFill />,\r\n  Recreation: <MdSportsSoccer />,\r\n  Strength: <MdFitnessCenter />,\r\n  Wisdom: <MdMenuBook />,\r\n  Empathy: <MdConnectWithoutContact />,\r\n  Trust: <SiHandshake />,\r\n  Spontaneity: <BiAlarmOff />,\r\n  Adventure: <GiMountainRoad />,\r\n  Integrity: <MdOutlineVerifiedUser />,\r\n  Generosity: <MdVolunteerActivism />,\r\n  Patience: <MdAccessTime />,\r\n  Perseverance: <GiMountainClimbing />,\r\n  Mercy: <GiGlowingHands />,\r\n  Romance: <GiHeartInside />,\r\n  Athleticism: <GiMedallist />,\r\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\r\n  Productivity: <GiGearHammer />,\r\n  Nature: <BsFillTreeFill />,\r\n  Peace: <BsPeace />,\r\n  Determination: <FaFistRaised />,\r\n  Resourcefulness: <HiPuzzle />,\r\n  Authority: <RiGovernmentLine />,\r\n  Hope: <GiHeartKey />,\r\n  Challenge: <GiCrossedSwords />,\r\n  Decisiveness: <GiChoice />,\r\n  Comfort: <GiPillow />,\r\n  Joy: <BiHappyBeaming />,\r\n  Fairness: <HiOutlineScale />,\r\n  Affection: <FaRegKissWinkHeart />,\r\n  Confidence: <BsFillShieldLockFill />,\r\n  Respect: <FaHandshake />,\r\n  Discipline: <BsFillStopwatchFill />,\r\n  Frugality: <FaPiggyBank />,\r\n  Suffering: <RiEmotionSadLine />,\r\n  \"Child-likeness\": <FaChild />,\r\n  Optimism: <GrLineChart />,\r\n  Ambition: <FiTarget />,\r\n  Craftsmanship: <FaTools />,\r\n  Vulnerability: <BsFillUnlockFill />,\r\n  Family: <MdFamilyRestroom />,\r\n  Boldness: <GiLion />,\r\n  Caution: <RiErrorWarningFill />,\r\n  Confrontation: <GiCrossedSwords />,\r\n  Charisma: <FaGrinStars />,\r\n  Ingenuity: <HiPuzzle />,\r\n  Teachability: <FaUserGraduate />,\r\n  Pessimism: <FaThumbsDown />,\r\n  Loyality: <GiSittingDog />,\r\n  \"Self-Improvement\": <GiMeditation />,\r\n  Creativity: <GiPencilBrush />,\r\n  Realism: <BiGlasses />,\r\n  Enthusiasm: <GiFireworkRocket />,\r\n  \"Self-care\": <MdBathtub />,\r\n  Spirituality: <GiMeditation />,\r\n  Detachment: <GiButterfly />,\r\n  Vision: <GiBinoculars />,\r\n  Simplicity: <FaShapes />,\r\n  \"Open-mindedness\": <FaDoorOpen />,\r\n  Contentment: <FaRegSmileBeam />,\r\n};\r\nexport default allTraits;\r\n","export default function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import traits from \"../../utils/listOfAllTraits\";\r\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\n\r\nconst initialTraits = {\r\n  traits,\r\n  columns: {\r\n    column1: {\r\n      id: \"column1\",\r\n      title: \"Not Valued\",\r\n      traitIds: [],\r\n    },\r\n    column2: {\r\n      id: \"column2\",\r\n      title: \"Traits\",\r\n      traitIds: shuffle(listOfAllTraits),\r\n    },\r\n    column3: {\r\n      id: \"column3\",\r\n      title: \"Valued\",\r\n      traitIds: [],\r\n    },\r\n    guessing: {\r\n      id: \"guessing\",\r\n      title: \"guessing\",\r\n      traitIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\r\n};\r\nexport default initialTraits;\r\n","export default function makeId(length) {\r\n  let result = \"\";\r\n  const characters = \"0123456789\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import mixpanel from \"mixpanel-browser\";\r\nimport LogRocket from \"logrocket\";\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\r\nLogRocket.init(\"zwugvl/trait-ranker\");\r\n\r\nLogRocket.getSessionURL(function (sessionURL) {\r\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\r\n});\r\n\r\nexport function makeAndTrackId(len) {\r\n  let Id = makeId(len);\r\n  mixpanel.track(\"Session Start\", { steps: 1 });\r\n  mixpanel.people.increment(\"sessions\", 1);\r\n  return Id;\r\n}\r\n\r\nexport function trackRankingPage(topTraits) {\r\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\r\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\r\n}\r\nexport function trackResultsPage(topTraits) {\r\n  mixpanel.track(\"Results Step\", { steps: 3 });\r\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\r\n}\r\nexport function trackShare() {\r\n  mixpanel.track(\"Shared\");\r\n}\r\nexport function trackShowTraits() {\r\n  mixpanel.track(\"Show Traits\");\r\n}\r\nexport function trackGuessTraits() {\r\n  mixpanel.track(\"Guess Traits\");\r\n}\r\nexport function trackGuessed(guesses) {\r\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\r\n}\r\nexport function trackShareConversion(source) {\r\n  mixpanel.track(\"Share Conversion\", { Source: source });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport {trackShare} from \"../utils/mixpanel\"\r\n\r\nconst CopyableLink = ({ text }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const onCopy = () => {\r\n    trackShare();\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          text: \"Take a look at my most valued traits\",\r\n          url: text,\r\n        })\r\n        .then(() => console.log(\"successful share\"))\r\n        .catch((error) => console.log(\"error sharing\", error));\r\n    } else {\r\n      navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => console.log(\"Copied!\"))\r\n        .catch(() => console.log(\"Copy failed\"));\r\n      setShowTooltip(true);\r\n      setShowLink(true);\r\n    }\r\n  };\r\n  const onTipClose = () => {\r\n    setShowTooltip(false);\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Tooltip\r\n          title={\"Copied to clipboard!\"}\r\n          open={showTooltip}\r\n          leaveDelay={1000}\r\n          onClose={onTipClose}\r\n        >\r\n          <Button variant=\"contained\" onClick={onCopy}>\r\n            Share\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      {showLink && (\r\n        <Grid item>\r\n          <InputLabel>{text}</InputLabel>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default CopyableLink;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\r\n  authDomain: \"trait-ranker.firebaseapp.com\",\r\n  projectId: \"trait-ranker\",\r\n  storageBucket: \"trait-ranker.appspot.com\",\r\n  messagingSenderId: \"387696334301\",\r\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\r\n  measurementId: \"G-K0FPHGRC6R\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function getHash(len) {\r\n  let timeout = false;\r\n  while (timeout === false) {\r\n    const hash = makeId(len);\r\n    const docRef = doc(db, hash);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      console.log(\"repeat hash\");\r\n    } else {\r\n      console.log(\"hash \" + hash);\r\n      return hash;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDBTraits(hash, traitArray) {\r\n  await setDoc(doc(db, \"Traits\", hash), {\r\n    traits: traitArray,\r\n  }).catch((e) => {\r\n    console.log(e);\r\n  });\r\n  console.log(doc(db, \"Traits\", hash),traitArray);\r\n}\r\n\r\nexport async function getDBTraits(hash) {\r\n  const docRef = doc(db, \"Traits\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    const traits = docSnap.data().traits;\r\n    console.log(traits);\r\n    return traits;\r\n  } else {\r\n    console.log(\"no doc\");\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Grid } from \"@mui/material\";\r\nimport { traitIcons } from \"../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst FlipCard = ({ trait, index }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [flip, setFlip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(true);\r\n      setTimeout(() => setValue(trait), 500);\r\n    }, index * 500);\r\n  });\r\n  return (\r\n    <Card className={`wideCard ${flip && \"flip\"}`} style={{ margin: \".5vw\" }}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          style={{ marginTop: \"-8vw\" }} //for some reason this is the only thing I could vertically center content with\r\n        >\r\n          <Grid item>\r\n            <IconContext.Provider value={{ size: \"9vw\" }}>\r\n              {traitIcons[value]}\r\n            </IconContext.Provider>\r\n          </Grid>\r\n          <Grid item>\r\n            <h3>{value}</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FlipCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nconst SmallTraitList = ({ traits }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      {traits.slice(0, 7).map((trait, index) => {\r\n        return (\r\n          <Grid item>\r\n            <FlipCard trait={trait} index={index} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SmallTraitList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport makeId from \"../utils/makeIdUtil\";\r\nimport CopyableLink from \"./CopyableLink\";\r\nimport { setDBTraits } from \"../utils/Firebase\";\r\nimport SmallTraitList from \"./SmallTraitList\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { trackResultsPage } from \"../utils/mixpanel\";\r\n\r\nconst ResultsPage = ({ topTraits, userID }) => {\r\n  useEffect(() => {\r\n    trackResultsPage(topTraits);\r\n    (async () => {\r\n      console.log(\"setting traits\", topTraits);\r\n      await setDBTraits(userID, topTraits);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Grid item>\r\n        <h3>Top Traits</h3>\r\n      </Grid>\r\n      <Grid item>\r\n        <SmallTraitList traits={topTraits.reverse()} />\r\n      </Grid>\r\n      <Grid item sx={{ padding: \"1rem\" }}>\r\n        <CopyableLink\r\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\r\n\r\nconst RankingTrait = ({ trait, onClick }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  const rippleRef = React.useRef(null);\r\n  const onRippleStart = (e) => {\r\n    rippleRef.current.start(e);\r\n  };\r\n  const onRippleStop = (e) => {\r\n    rippleRef.current.stop(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card rankCard\"\r\n      onClick={onClick}\r\n      onMouseDown={onRippleStart}\r\n      onMouseUp={onRippleStop}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n      <h1>{trait}</h1>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"20vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n        </Grid>\r\n      </Grid>\r\n      <TouchRipple ref={rippleRef} center={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTrait;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport RankingTrait from \"./TraitCards/RankingTrait\";\r\nimport { Grid, useMediaQuery, Box } from \"@mui/material\";\r\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\r\nimport { trackRankingPage } from \"../utils/mixpanel\";\r\n\r\nconst RankingPage = ({ topTraits, setTopTraits, history, finalList }) => {\r\n  const [displayedPairs, setDisplayedPairs] = React.useState(\r\n    topTraits.slice(0, 2)\r\n  );\r\n\r\n  let initialPairs = useRef([]);\r\n  let sortedPairs = useRef([]);\r\n  let sortingPair = useRef([]);\r\n\r\n  let joinStack = useRef([]);\r\n  let mergeStack = useRef([]);\r\n\r\n  let leftGuess = useRef(0);\r\n  let rightGuess = useRef(0);\r\n\r\n  let finishedList = useRef([]);\r\n  let unevenList = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let initialTraits = topTraits;\r\n    setDisplayedPairs(initialTraits.slice(0, 2));\r\n\r\n    if (initialTraits.length % 2) {\r\n      //initialize finished list with first element if uneven\r\n      unevenList.current = initialTraits.pop();\r\n    }\r\n    for (let i = 0; i < initialTraits.length; i += 2) {\r\n      //generate pairs for the user to sort\r\n      initialPairs.current.push([initialTraits[i], initialTraits[i + 1]]);\r\n    }\r\n  }, []);\r\n\r\n  const handlePick = (pick) => {\r\n    //looks at which arrays are empty to determine what stage the sort is in\r\n    console.log(\"pick: \" + pick);\r\n    const listLen = finishedList.current.length;\r\n    if (listLen > 6) {\r\n      console.log(\"the list length:\", listLen);\r\n      finishedList.current = finishedList.current.slice(listLen - 7);\r\n    }\r\n\r\n    if (joinStack.current.length !== 0) {\r\n      //checking for 'easy' joins\r\n      doJoinRound(pick);\r\n    } else if (mergeStack.current.length !== 0) {\r\n      doMergeRound(pick);\r\n    }\r\n\r\n    if (initialPairs.current.length !== 0) {\r\n      //sorting pairs\r\n      doInitialRound(pick);\r\n    }\r\n\r\n    let mergeStackHasValues = mergeStack.current.some(function (any) {\r\n      return any.length;\r\n    }); //check if all arrays are empty\r\n    if (!mergeStackHasValues && initialPairs.current.length === 0) {\r\n      if (sortedPairs.current.length === 0) {\r\n        setTopTraits(finishedList.current);\r\n        console.log(\"finished the list\" + finishedList.current);\r\n        history.push(\"/Results\");\r\n      } else {\r\n        buildMerge(sortedPairs.current[0]);\r\n      }\r\n    }\r\n\r\n    console.log(\"initialPairs: \", initialPairs.current);\r\n    console.log(\"sortedPairs: \", sortedPairs.current);\r\n    console.log(\"finished list: \", finishedList.current);\r\n    console.log(\"Join stack: \", joinStack.current);\r\n    console.log(\"mergeStack\", mergeStack.current);\r\n  };\r\n\r\n  const doInitialRound = (pick) => {\r\n    if (pick === initialPairs.current[0][0]) {\r\n      initialPairs.current[0].reverse();\r\n      console.log(\"reversed \", initialPairs.current[0]);\r\n    }\r\n\r\n    sortedPairs.current.push(initialPairs.current.shift());\r\n\r\n    setDisplayedPairs(initialPairs.current[0]);\r\n    if (initialPairs.current.length === 2) {\r\n      //set up the merges one render ahead\r\n      if (unevenList.current !== null) {\r\n        //populate finished list with uneven element\r\n        finishedList.current.push(unevenList.current);\r\n        console.log(\"Prepping for round uneven\");\r\n      } else {\r\n        finishedList.current = sortedPairs.current.shift(); //populate list with first sorted pair\r\n        console.log(\"Prepping for round 2\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const doJoinRound = (pick) => {\r\n    if (joinStack.current.length === 2) {\r\n      //check if left or right join\r\n      if (pick === sortingPair.current[0]) {\r\n        finishedList.current = finishedList.current.concat(sortingPair.current); //a 'successful' join\r\n        clearStacks();\r\n      } else {\r\n        joinStack.current.shift();\r\n        setDisplayedPairs(joinStack.current[0]);\r\n      }\r\n    } else {\r\n      if (pick === sortingPair.current[1]) {\r\n        joinStack.current = [];\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      } else {\r\n        finishedList.current = sortingPair.current.concat(finishedList.current);\r\n        clearStacks();\r\n      }\r\n    }\r\n  };\r\n\r\n  const doMergeRound = (pick) => {\r\n    if (displayedPairs[0] === sortingPair.current[0]) {\r\n      if (pick !== displayedPairs[0]) {\r\n        //found what is liked more and placing it in the sorted list\r\n        finishedList.current.splice(\r\n          leftGuess.current,\r\n          0,\r\n          sortingPair.current[0]\r\n        );\r\n        mergeStack.current[0] = [];\r\n      } else {\r\n        //tries next item in current sorted list\r\n        mergeStack.current[0].shift();\r\n        leftGuess.current++;\r\n        console.log(\"leftGuess \", leftGuess.current);\r\n        //tries to shift back and forth between items to reduce fatigue\r\n        if (mergeStack.current[0].length === 0) {\r\n          finishedList.current.splice(\r\n            leftGuess.current,\r\n            0,\r\n            sortingPair.current[0]\r\n          );\r\n          mergeStack.current[0].shift();\r\n        }\r\n      }\r\n      if (mergeStack.current[1].length !== 0) {\r\n        setDisplayedPairs(mergeStack.current[1][0]);\r\n      } else {\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      }\r\n    } else {\r\n      // higher\r\n      if (pick === displayedPairs[0]) {\r\n        finishedList.current.splice(\r\n          rightGuess.current + 1,\r\n          0,\r\n          sortingPair.current[1]\r\n        );\r\n        mergeStack.current[1] = [];\r\n      } else {\r\n        mergeStack.current[1].shift();\r\n        rightGuess.current--;\r\n        console.log(\"rightGuess \", rightGuess.current);\r\n        if (mergeStack.current[1].length === 0) {\r\n          finishedList.current.splice(\r\n            rightGuess.current + 1,\r\n            0,\r\n            sortingPair.current[1]\r\n          );\r\n          mergeStack.current[1].shift();\r\n        }\r\n      }\r\n      if (mergeStack.current[0].length !== 0) {\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      } else {\r\n        setDisplayedPairs(mergeStack.current[1][0]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const buildMerge = (list) => {\r\n    console.log(\"building round 2\");\r\n    buildJoinStack(list);\r\n    buildMergeStack(list);\r\n    sortingPair.current = sortedPairs.current.shift();\r\n    leftGuess.current = 0;\r\n    rightGuess.current = finishedList.current.length;\r\n  };\r\n\r\n  const buildJoinStack = (list) => {\r\n    joinStack.current.push([\r\n      list[0],\r\n      finishedList.current[finishedList.current.length - 1],\r\n    ]);\r\n    joinStack.current.push([list[1], finishedList.current[0]]);\r\n    setDisplayedPairs(joinStack.current[0]);\r\n    console.log(\"Initial Join stack: \", joinStack.current);\r\n  };\r\n\r\n  const buildMergeStack = (list) => {\r\n    let leftMergeStack = [];\r\n    let rightMergeStack = [];\r\n\r\n    for (let i = 0; i < finishedList.current.length; i++) {\r\n      leftMergeStack.push([list[0], finishedList.current[i]]);\r\n    }\r\n    for (let i = finishedList.current.length - 1; i >= 0; i--) {\r\n      rightMergeStack.push([list[1], finishedList.current[i]]);\r\n    }\r\n    mergeStack.current = [leftMergeStack, rightMergeStack];\r\n    console.log(\"initial mergeStack\", mergeStack.current);\r\n  };\r\n  const clearStacks = () => {\r\n    joinStack.current = [];\r\n    mergeStack.current = [];\r\n    sortingPair.current = [];\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  useEffect(() => {\r\n    trackRankingPage(topTraits);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={isMobile ? 60 : 3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        direction={isMobile ? \"row\" : \"column\"}\r\n      >\r\n        <Grid item>\r\n          <RankingTrait\r\n            onClick={() => handlePick(displayedPairs[0])}\r\n            trait={displayedPairs[0]}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <RankingTrait\r\n            onClick={() => handlePick(displayedPairs[1])}\r\n            trait={displayedPairs[1]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n","import React, { forwardRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst HelpDialogBox = ({ currentPage }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [grow, setGrow] = React.useState(false);\r\n\r\n  const doGrow = () => {\r\n    setGrow(true);\r\n    setTimeout(() => {\r\n      setGrow(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    doGrow();\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  const helpData = {\r\n    Selection: {\r\n      title: \"Selection\",\r\n      description: `Trait Ranker helps you discover and prioritize your most important personality traits. ${\r\n        isMobile ? \"Drag\" : \"Swipe \"\r\n      } right to mark a trait as valuable or left to skip it. Press the help button anytime for guidance.`,\r\n      media: \"../../Assets/MobileDrag.gif\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        size=\"large\"\r\n        onClick={handleOpen}\r\n        className={`${grow && \"grow\"}`}\r\n      >\r\n        <HelpOutlineIcon />\r\n      </IconButton>\r\n\r\n      <Dialog\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        open={open}\r\n        fullScreen\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          marginLeft: \"1vw\",\r\n          marginRight: \"1vw\",\r\n        }}\r\n        PaperProps={{\r\n          style: { borderTopLeftRadius: 6, borderTopRightRadius: 6 },\r\n        }}\r\n      >\r\n        <DialogTitle>{helpData[\"Selection\"].title}</DialogTitle>\r\n        <IconButton\r\n          style={{ position: \"absolute\", right: \"0\" }}\r\n          color=\"inherit\"\r\n          onClick={handleClose}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContentText paragraph={false} style={{ margin: 10 }}>\r\n          {helpData[\"Selection\"].description}\r\n        </DialogContentText>\r\n        <img\r\n          src={helpData[\"Selection\"].media}\r\n          style={{ width: \"100%\" }}\r\n          alt=\"GIF of swiping on mobile\"\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialogBox;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst HomeButton = ({ history }) => {\r\n  const handleHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Button color=\"inherit\" onClick={handleHome}>\r\n      Trait Ranker\r\n    </Button>\r\n  );\r\n};\r\nexport default HomeButton;\r\n\r\n\r\n","import React from \"react\";\r\nimport { AppBar, Box, Toolbar } from \"@mui/material\";\r\n\r\nimport HelpDialogBox from \"./HelpDialogBox\";\r\nimport HomeButton from \"./HomeButton\";\r\n\r\nconst NavBar = ({ history }) => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <HomeButton history={history} />\r\n          <div style={{ marginLeft: \"auto\" }}>\r\n            <HelpDialogBox />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\n\r\nconst SelectionTrait = ({ trait, provided }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  return (\r\n    <div\r\n      className=\"card selection\"\r\n      {...provided.dragHandleProps}\r\n      draggable={true}\r\n      id={trait}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n          <h1>{trait}</h1>\r\n        </Grid>\r\n      <Grid item>\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"60vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n      </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectionTrait;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport SelectionTrait from \"./SelectionTrait\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\r\n  if (style?.transform) {\r\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\r\n    return {\r\n      ...style,\r\n      transform: axisLockX,\r\n    };\r\n  }\r\n  return style;\r\n};\r\n\r\nfunction getStyle(style, snapshot) {\r\n  style = draggingCustomStyle(style);\r\n  if (!snapshot.isDropAnimating) {\r\n    return style;\r\n  }\r\n  const { moveTo, duration } = snapshot.dropAnimation;\r\n  const draggingOver = snapshot.draggingOver;\r\n  console.log(draggingOver);\r\n  let offset = 0;\r\n  if (draggingOver === \"column1\") {\r\n    offset = -100;\r\n  } else if (draggingOver === \"column3\") {\r\n    offset = 100;\r\n  }\r\n  // move to the right spot\r\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\r\n\r\n  // patching the existing style\r\n  return {\r\n    ...style,\r\n    transform: translate,\r\n    // slowing down the drop\r\n    transition: `all  ${duration + 0.2}s`,\r\n  };\r\n}\r\n\r\nconst TraitDraggable = ({ trait, index }) => {\r\n  return (\r\n    <Draggable draggableId={trait} key={trait} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n          style={getStyle(provided.draggableProps.style, snapshot)}\r\n        >\r\n          <SelectionTrait trait={trait} provided={provided} />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default TraitDraggable\r\n","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TraitList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? props.hoverColor : \"white\"};\r\n  display: flex;\r\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\r\n  min-height: 100vh;\r\n  max-width: ${(props) => props.isStarter && \"1px\"};\r\n`;\r\n\r\nconst SelectionDroppable = ({\r\n  column,\r\n  isStarter = false,\r\n  hoverColor = \"lightBlue\",\r\n}) => {\r\n  return (\r\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\r\n      {(provided, snapshot) => (\r\n        <TraitList\r\n          classname=\"cards stack\"\r\n          ref={provided.innerRef}\r\n          isStarter={isStarter}\r\n          hoverColor={hoverColor}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n          {...provided.droppableProps}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item margin=\"auto\">\r\n              {isStarter && (\r\n                <TraitDraggable\r\n                  key={column?.traitIds[0]}\r\n                  trait={column?.traitIds[0]}\r\n                  index={column?.traitIds.indexOf(column?.traitIds[0])}\r\n                />\r\n              )}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </Grid>\r\n        </TraitList>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default SelectionDroppable\r\n","// @flow\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport SelectionDroppable from \"./SelectionDroppable\";\r\nimport { Box, Grid, useMediaQuery } from \"@mui/material\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst SelectionPage = ({\r\n  columnData,\r\n  setTopTraits,\r\n  history,\r\n  swipeHandlers,\r\n  topTraits,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"currentTraits: \", columnData.columns.column2.traitIds);\r\n    console.log(\"top traits: \", columnData.columns.column3.traitIds);\r\n    if (columnData.columns.column2.traitIds.length === 0) {\r\n      console.log(columnData.columns.column3.traitIds);\r\n      setTopTraits(columnData.columns.column3.traitIds);\r\n      console.log(\"setting traits from selection\");\r\n      history.push(\"/Rank\");\r\n    }\r\n  }, [columnData, history, setTopTraits, topTraits]);\r\n\r\n  const selectionIntro = [\r\n    `${isMobile ? \"Drag\" : \"Swipe \"} right to like, left to pass.`,\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <div {...swipeHandlers}>\r\n        <Grid container spacing={0} wrap=\"nowrap\">\r\n          <SelectionDroppable\r\n            key={columnData.columns.column1.id}\r\n            column={columnData.columns.column1}\r\n            hoverColor={\"LightPink\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column2.id}\r\n            column={columnData.columns.column2}\r\n            isStarter={true}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column3.id}\r\n            column={columnData.columns.column3}\r\n            hoverColor={\"LightGreen\"}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default SelectionPage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Card, Grid } from \"@mui/material\";\r\n\r\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\r\n  const [isBouncing, setIsBouncing] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  useEffect(() => {\r\n    if (firstUpdate.current == true) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setIsBouncing(true);\r\n      setTimeout(() => setCurrentColor(color), 250); //timeout set to half bounce time to time color change to apex\r\n    }, 500 * index); //timeout set to total bounce time to have items bounce one at a time\r\n    setIsBouncing(false);\r\n  }, [color]);\r\n\r\n  return (\r\n    <Draggable draggableId={trait} index={index} isDragDisabled={!isDraggable}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Card\r\n            className={`wideCard ${isBouncing ? \"bounce\" : \"\"}`}\r\n            sx={{ backgroundColor: currentColor }}\r\n          >\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <h3>{trait}</h3>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default FreeDragTrait;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\r\nimport styled from \"styled-components\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst DragColumn = styled.div``;\r\n\r\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\r\n  const tutorialStrings = [\"Rearrange to the guess list order\"];\r\n  return (\r\n    <div>\r\n      <Droppable key={column.id} droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <DragColumn\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {column.traitIds.map((trait, index) => {\r\n                return (\r\n                  <Grid item key={trait}>\r\n                    <FreeDragTrait\r\n                      trait={trait}\r\n                      index={column.traitIds.indexOf(trait)}\r\n                      color={colors[index]}\r\n                      isDraggable={isDraggable}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </DragColumn>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default ReorderableColumn;\r\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.replace('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport TryItButton from \"./TryItButton\";\r\n\r\nconst ReorderGuess = ({\r\n  column,\r\n  onDone,\r\n  colors,\r\n  showTryIt,\r\n  history,\r\n  isDraggable,\r\n  showLockIn,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Grid item>\r\n        <ReorderableColumn\r\n          column={column}\r\n          colors={colors}\r\n          isDraggable={isDraggable}\r\n        />\r\n      </Grid>\r\n      <Grid item sx={{ paddingTop: \"4vh\" }}>\r\n        {showLockIn && (\r\n          <Button onClick={onDone} variant=\"contained\">\r\n            Lock in\r\n          </Button>\r\n        )}\r\n        {showTryIt && <TryItButton history={history} />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ReorderGuess;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport initialTraits from \"../Selection/initialTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport ReorderGuess from \"./ReorderGuess\";\r\nimport { trackGuessed } from \"../../utils/mixpanel\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\r\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\r\n  let wrongTraits = useRef([]);\r\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\r\n  let finalList = useRef([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n  const [currentTraits, setCurrentTraits] = useState([]);\r\n  const [showPicks, setShowPicks] = useState(true);\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [showTryIt, setShowIt] = useState(false);\r\n  const [showLockIn, setShowLockIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    while (wrongTraits.current.length < 7) {\r\n      //get eligible red herrings\r\n      if (!traitsLeft.current.includes(traitPool[0])) {\r\n        wrongTraits.current.push(traitPool[0]);\r\n      }\r\n      traitPool = traitPool.splice(1, traitPool.length);\r\n    }\r\n    loadNextTraits();\r\n  }, [traitPool]);\r\n\r\n  const handlePick = (pick) => {\r\n    finalList.current.push(pick);\r\n    if (traitsLeft.current.length === 0) {\r\n      const newTraits = {\r\n        ...columnData.columns.guessing,\r\n        traitIds: finalList.current,\r\n      };\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          guessing: newTraits,\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      trackGuessed(newColumnData.columns.guessing);\r\n      setShowColumn(true);\r\n      setShowPicks(false);\r\n    }\r\n    loadNextTraits();\r\n  };\r\n  const loadNextTraits = () => {\r\n    setCurrentTraits(\r\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\r\n    );\r\n    console.log(\"TraitsLeft: \", traitsLeft.current);\r\n    console.log(\"WrongTaits: \", wrongTraits.current);\r\n    console.log(finalList.current);\r\n  };\r\n  const onDone = () => {\r\n    console.log(\"done!\");\r\n    let guessColors = [];\r\n    const correctTraits = traits.slice(0, 7);\r\n    const guess = columnData.columns.guessing.traitIds;\r\n    for (let i = 0; i < correctTraits.length; i++) {\r\n      if (correctTraits[i] === guess[i]) {\r\n        guessColors.push(\"green\");\r\n        console.log(\"correct\", correctTraits[i], guess[i]);\r\n      } else if (correctTraits.includes(guess[i])) {\r\n        guessColors.push(\"gold\");\r\n        console.log(\"in there\", correctTraits[i], guess[i]);\r\n      } else {\r\n        guessColors.push(\"LightGray\");\r\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\r\n      }\r\n    }\r\n    setColors(guessColors);\r\n    setShowIt(true);\r\n    setShowLockIn(false);\r\n    setIsDraggable(false);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const guessTutorial = [\r\n    \"Select the traits actually in the list.\",\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n  return (\r\n    <div>\r\n      {showPicks && (\r\n        <Grid\r\n          container\r\n          spacing={isMobile ? 60 : 3}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          direction={isMobile ? \"row\" : \"column\"}\r\n        >\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[0])}\r\n              trait={currentTraits[0]}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[1])}\r\n              trait={currentTraits[1]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showColumn && (\r\n        <ReorderGuess\r\n          column={columnData.columns.guessing}\r\n          onDone={onDone}\r\n          colors={colors}\r\n          showTryIt={showTryIt}\r\n          showLockIn={showLockIn}\r\n          history={history}\r\n          isDraggable={isDraggable}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GuessPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDBTraits } from \"../../utils/Firebase\";\r\nimport { Grid, Typography, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport SmallTraitList from \"../SmallTraitList\";\r\nimport GuessPage from \"./GuessPage\";\r\nimport TryItButton from \"./TryItButton\";\r\nimport { trackShowTraits, trackGuessTraits } from \"../../utils/mixpanel\";\r\n\r\nconst SharedPage = ({ columnData, setColumnData, history }) => {\r\n  let { id } = useParams();\r\n  const [storedTraits, setStoredTraits] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [showGuessing, setShowGuessing] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getDBTraits(id).then((result) => {\r\n        setStoredTraits(result);\r\n      });\r\n    })();\r\n  }, [id]);\r\n  const showTraits = () => {\r\n    trackShowTraits();\r\n    setShowList(true);\r\n    setShowOptions(false);\r\n  };\r\n  const showGuess = () => {\r\n    trackGuessTraits();\r\n    setShowGuessing(true);\r\n    setShowOptions(false);\r\n  };\r\n  console.log(\"storedTraits\", storedTraits);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={isMobile ? 60 : 3}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction={isMobile ? \"row\" : \"column\"}\r\n    >\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\r\n        </Grid>\r\n      )}\r\n\r\n      {showList && (\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant={isMobile ? \"h3\" : \"h5\"} color=\"black\">\r\n                Top traits\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <SmallTraitList traits={storedTraits} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5vw\" }}>\r\n              <TryItButton history={history} source=\"Guess\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showGuessing && (\r\n        <Grid item>\r\n          <GuessPage\r\n            traits={storedTraits}\r\n            columnData={columnData}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SharedPage;\r\n","// @flow\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport initialTraits from \"./Selection/initialTraits\";\r\nimport ResultsPage from \"./ResultsPage\";\r\nimport RankingPage from \"./RankingPage\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport { HashRouter, Route, useHistory } from \"react-router-dom\";\r\nimport SelectionPage from \"./Selection/SelectionPage\";\r\nimport ReactGA from \"react-ga\";\r\nimport SharedPage from \"./Share/SharedPage\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport tweenFunctions from \"tween-functions\";\r\nimport { makeAndTrackId } from \"../utils/mixpanel\";\r\n\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const [columnData, setColumnData] = useState(initialTraits);\r\n  const [topTraits, setTopTraits] = useState([]);\r\n  const [userId, setUserId] = useState(makeAndTrackId(8));\r\n  const sensorAPIRef = useRef<?SensorAPI>(null);\r\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\r\n  ReactGA.initialize(TRACKING_ID);\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //make sure the draggable moved\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = columnData.columns[source.droppableId];\r\n    const finish = columnData.columns[destination.droppableId];\r\n\r\n    //if moving within the same column\r\n    if (start === finish) {\r\n      const newTraitIds = Array.from(start.traitIds);\r\n      newTraitIds.splice(source.index, 1);\r\n      newTraitIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        traitIds: newTraitIds,\r\n      };\r\n\r\n      //override existing column\r\n      const newData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setColumnData(newData);\r\n      return;\r\n    }\r\n    //cross column moving\r\n    const startTraitIds = Array.from(start.traitIds);\r\n    startTraitIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      traitIds: startTraitIds,\r\n    };\r\n\r\n    const finishTraitIds = Array.from(finish.traitIds);\r\n    finishTraitIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      traitIds: finishTraitIds,\r\n    };\r\n\r\n    const newData = {\r\n      ...columnData,\r\n      columns: {\r\n        ...columnData.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n    setColumnData(newData);\r\n  };\r\n\r\n  function swipe(direction) {\r\n    const api: ?SensorAPI = sensorAPIRef.current;\r\n    if (!api) {\r\n      console.warn(\"unable to find sensor api\");\r\n      return null;\r\n    }\r\n    let endX;\r\n    if (direction === \"right\") {\r\n      endX = 100;\r\n    } else {\r\n      endX = -100;\r\n    }\r\n    const start = { x: 0, y: 0 };\r\n    const end = { x: endX, y: 0 };\r\n\r\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\r\n\r\n    if (!preDrag) {\r\n      console.warn(\"unable to start capturing\");\r\n      return null;\r\n    }\r\n\r\n    const drag = preDrag.fluidLift(start);\r\n\r\n    const points = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      points.push({\r\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\r\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\r\n      });\r\n    }\r\n    moveStepByStep(drag, points);\r\n  }\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      console.log(\"left swiped\");\r\n      swipe(\"left\");\r\n    },\r\n    onSwipedRight: () => {\r\n      console.log(\"right swiped\");\r\n      swipe(\"right\");\r\n    },\r\n  });\r\n\r\n  function moveStepByStep(drag, values) {\r\n    requestAnimationFrame(() => {\r\n      const newPosition = values.shift();\r\n      drag.move(newPosition);\r\n      if (values.length) {\r\n        moveStepByStep(drag, values);\r\n      } else {\r\n        drag.drop();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        sensors={[\r\n          (api) => {\r\n            sensorAPIRef.current = api;\r\n          },\r\n        ]}\r\n      >\r\n        <NavBar history={history} />\r\n        <Route exact path=\"/\">\r\n          <SelectionPage\r\n            columnData={columnData}\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n            swipeHandlers={swipeHandlers}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Rank\">\r\n          <RankingPage\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            history={history}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Results\">\r\n          <ResultsPage\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            userID={userId}\r\n          />\r\n        </Route>\r\n        <Route\r\n          path=\"/Share/:id\"\r\n          children={\r\n            <SharedPage columnData={columnData} setColumnData={setColumnData} history={history} />\r\n          }\r\n        />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <HashRouter basename={\"/trait-ranker\"}>\r\n      <App />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport AppWrapper from \"./components/App\";\r\n\r\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}