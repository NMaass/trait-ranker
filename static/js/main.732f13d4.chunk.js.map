{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/FlipCard.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/RankingTrait.js","utils/useMergeSort.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","Assets/logo512.png","components/NavBar/HomeButton.js","style/appTheme.js","components/NavBar/CustomStepper.js","components/NavBar/NavBar.js","components/TraitCards/CardHelp.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","utils/devTools.js","utils/tutorialStrings.js","components/Selection/SelectionPage.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","_jsx","BsQuestionCircle","AiOutlineOrderedList","Artistry","GiPalette","BsMusicNoteBeamed","Leadership","GiFlyingFlag","Excellence","MdLeaderboard","MdPsychology","GiClothes","Independence","GiBreakingChain","Flexibility","GiSplitArrows","MdSocialDistance","Rest","GiNightSleep","Kindness","RiUserHeartFill","Recreation","MdSportsSoccer","Strength","MdFitnessCenter","Wisdom","MdMenuBook","Empathy","MdConnectWithoutContact","Trust","SiHandshake","Spontaneity","BiAlarmOff","Adventure","GiMountainRoad","Integrity","MdOutlineVerifiedUser","Generosity","MdVolunteerActivism","Patience","MdAccessTime","Perseverance","GiMountainClimbing","Mercy","GiGlowingHands","Romance","GiHeartInside","Athleticism","GiMedallist","MdOutlineThumbsUpDown","Productivity","GiGearHammer","Nature","BsFillTreeFill","Peace","BsPeace","Determination","FaFistRaised","Resourcefulness","HiPuzzle","Authority","RiGovernmentLine","Hope","GiHeartKey","Challenge","GiCrossedSwords","Decisiveness","GiChoice","Comfort","GiPillow","Joy","BiHappyBeaming","Fairness","HiOutlineScale","Affection","FaRegKissWinkHeart","Confidence","BsFillShieldLockFill","Respect","FaHandshake","Discipline","BsFillStopwatchFill","Frugality","FaPiggyBank","Suffering","RiEmotionSadLine","FaChild","Optimism","GrLineChart","Ambition","FiTarget","Craftsmanship","FaTools","Vulnerability","BsFillUnlockFill","Family","MdFamilyRestroom","Boldness","GiLion","Caution","RiErrorWarningFill","Confrontation","Charisma","FaGrinStars","Ingenuity","Teachability","FaUserGraduate","Pessimism","FaThumbsDown","Loyality","GiSittingDog","GiMeditation","Creativity","GiPencilBrush","Realism","BiGlasses","Enthusiasm","GiFireworkRocket","MdBathtub","Spirituality","Detachment","GiButterfly","Vision","GiBinoculars","Simplicity","FaShapes","FaDoorOpen","Contentment","FaRegSmileBeam","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","_ref","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","_useState","useState","_useState2","_slicedToArray","showTooltip","setShowTooltip","_useState3","_useState4","showLink","setShowLink","_jsxs","Grid","container","direction","alignItems","justifyContent","spacing","children","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","_x2","_x3","_setDBTraits","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","hash","traitArray","wrap","_context2","prev","next","setDoc","doc","e","stop","getDBTraits","_x4","_getDBTraits","_callee3","docRef","docSnap","_context3","getDoc","sent","exists","data","abrupt","FlipCard","trait","index","value","setValue","flip","setFlip","useEffect","setTimeout","Card","className","concat","style","margin","CardContent","marginTop","IconContext","Provider","size","SmallTraitList","slice","map","ResultsPage","topTraits","userID","steps","trackResultsPage","_callee","_context","height","reverse","sx","padding","RankingTrait","isMobile","useMediaQuery","rippleRef","React","useRef","onMouseDown","current","start","onMouseUp","TouchRipple","ref","center","useMergeSort","initialState","undefined","TOP_K","currentMatch","setCurrentMatch","currentStanding","setCurrentStanding","_useState5","isComplete","_useState6","setIsComplete","_useState7","progressPercent","_useState8","setProgressPercent","_useState9","comparisonStack","_useState10","setComparisonStack","_useState11","mergeStack","_useState12","setMergeStack","_useState13","totalComparisons","_useState14","setTotalComparisons","_useState15","comparisonsMade","_useState16","setComparisonsMade","initializeSort","traitList","initialSublists","calculateTotalComparisons","prepareNextComparison","currentMergeStack","currentComparisonStack","currentLevel","pop","_toConsumableArray","mergedSublist","shift","push","leftSublist","rightSublist","leftIndex","rightIndex","getNextComparison","finalizeSort","currentMerge","leftTrait","rightTrait","left","right","_currentMerge$mergedS","_currentMerge$mergedS2","addMergedSublistToNextLevel","matchWin","winner","updateProgress","warn","unshift","finalList","progress","min","n","levelSize","ceil","revertMatch","rankingState","RankingPage","_initalProgress$data","history","initalProgress","memoizedTopTraits","useMemo","_useMergeSort","ranking","_useContext","useContext","ProgressContext","activeStep","_progress","setProgressState","_activeStep","setActiveStepState","handleRoundWin","Transition","forwardRef","props","Slide","_objectSpread","HelpDialogBox","currentPage","_React$useState","_React$useState2","setOpen","_React$useState3","_React$useState4","grow","setGrow","handleClose","helpData","Selection","description","Media","IconButton","HelpOutlineIcon","Dialog","TransitionComponent","fullScreen","marginLeft","marginRight","PaperProps","borderTopLeftRadius","borderTopRightRadius","DialogTitle","position","color","CloseIcon","DialogContentText","paragraph","src","width","alt","HomeButton","maxWidth","maxHeight","logo512","appTheme","createTheme","palette","primary","main","secondary","CustomStepper","StyledStepper","styled","display","flexFlow","StyledStepperStep","StyledStepperStepIndex","currentStep","done","lineHeight","borderRadius","background","textAlign","StyledLabelContainer","useTheme","ProgressBar","_ref3","step","LinearProgress","flex","top","backgroundColor","getStepIcon","CompareArrowsOutlinedIcon","SortOutlinedIcon","WorkspacePremiumOutlinedIcon","label","key","this","NavBar","progressState","activeStepState","Box","flexGrow","AppBar","Toolbar","CardHelp","toggleFlipped","flipped","FlipIcon","SelectionTrait","provided","setFlipped","dragHandleProps","draggable","Container","div","_templateObject","_taggedTemplateLiteral","getStyle","snapshot","transform","axisLockX","split","draggingCustomStyle","isDropAnimating","_snapshot$dropAnimati","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","wiggle","Draggable","draggableId","draggableProps","innerRef","isDragging","TraitList","_templateObject2","isDraggingOver","hoverColor","isStarter","showHoverColor","SelectionDroppable","column","_ref$isStarter","_ref$hoverColor","shouldWiggle","setShouldWiggle","setShowHoverColor","timer","clearTimeout","Droppable","droppableId","classname","S","droppableProps","indexOf","placeholder","SkipSelectionButton","setTopTraits","selectionInitial","SelectionPage","columnData","swipeHandlers","handleClearStack","tutorialStrings","TutorialContext","_tutorialStrings","setTutorialStringsState","numberOfTraits","useParams","FreeDragTrait","isDraggable","isBouncing","setIsBouncing","currentColor","setCurrentColor","firstUpdate","isDragDisabled","DragColumn","ReorderableColumn","colors","TryItButton","source","Source","trackShareConversion","replace","ReorderGuess","onDone","showTryIt","showLockIn","paddingTop","GuessPage","setColumnData","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","currentTraits","setCurrentTraits","showPicks","setShowPicks","showColumn","setShowColumn","setShowIt","setShowLockIn","includes","splice","loadNextTraits","handlePick","pick","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","Typography","createContext","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","setActiveStep","setProgress","setTutorialStrings","sensorAPIRef","ReactGA","initialize","swipe","api","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","DragDropContext","onDragEnd","_objectSpread3","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","_defineProperty","newTraitIds","newColumn","sensors","ThemeProvider","theme","Route","path","AppWrapper","HashRouter","basename","ReactDOM","render","document","querySelector"],"mappings":"iSA8GaA,EAAa,CACxB,mBAAoBC,cAACC,IAAgB,IACrC,kBAAmBD,cAACE,IAAoB,IACxCC,SAAUH,cAACI,IAAS,IACpB,gBAAiBJ,cAACK,IAAiB,IACnCC,WAAYN,cAACO,IAAY,IACzBC,WAAYR,cAACS,IAAa,IAC1B,eAAgBT,cAACU,IAAY,IAC7B,sBAAuBV,cAACW,IAAS,IACjCC,aAAcZ,cAACa,IAAe,IAC9BC,YAAad,cAACe,IAAa,IAC3B,iBAAkBf,cAACgB,IAAgB,IACnCC,KAAMjB,cAACkB,IAAY,IACnBC,SAAUnB,cAACoB,IAAe,IAC1BC,WAAYrB,cAACsB,IAAc,IAC3BC,SAAUvB,cAACwB,IAAe,IAC1BC,OAAQzB,cAAC0B,IAAU,IACnBC,QAAS3B,cAAC4B,IAAuB,IACjCC,MAAO7B,cAAC8B,IAAW,IACnBC,YAAa/B,cAACgC,IAAU,IACxBC,UAAWjC,cAACkC,IAAc,IAC1BC,UAAWnC,cAACoC,IAAqB,IACjCC,WAAYrC,cAACsC,IAAmB,IAChCC,SAAUvC,cAACwC,IAAY,IACvBC,aAAczC,cAAC0C,IAAkB,IACjCC,MAAO3C,cAAC4C,IAAc,IACtBC,QAAS7C,cAAC8C,IAAa,IACvBC,YAAa/C,cAACgD,IAAW,IACzB,yBAA0BhD,cAACiD,IAAqB,IAChDC,aAAclD,cAACmD,IAAY,IAC3BC,OAAQpD,cAACqD,IAAc,IACvBC,MAAOtD,cAACuD,IAAO,IACfC,cAAexD,cAACyD,IAAY,IAC5BC,gBAAiB1D,cAAC2D,IAAQ,IAC1BC,UAAW5D,cAAC6D,IAAgB,IAC5BC,KAAM9D,cAAC+D,IAAU,IACjBC,UAAWhE,cAACiE,IAAe,IAC3BC,aAAclE,cAACmE,IAAQ,IACvBC,QAASpE,cAACqE,IAAQ,IAClBC,IAAKtE,cAACuE,IAAc,IACpBC,SAAUxE,cAACyE,IAAc,IACzBC,UAAW1E,cAAC2E,IAAkB,IAC9BC,WAAY5E,cAAC6E,IAAoB,IACjCC,QAAS9E,cAAC+E,IAAW,IACrBC,WAAYhF,cAACiF,IAAmB,IAChCC,UAAWlF,cAACmF,IAAW,IACvBC,UAAWpF,cAACqF,IAAgB,IAC5B,iBAAkBrF,cAACsF,IAAO,IAC1BC,SAAUvF,cAACwF,IAAW,IACtBC,SAAUzF,cAAC0F,IAAQ,IACnBC,cAAe3F,cAAC4F,IAAO,IACvBC,cAAe7F,cAAC8F,IAAgB,IAChCC,OAAQ/F,cAACgG,IAAgB,IACzBC,SAAUjG,cAACkG,IAAM,IACjBC,QAASnG,cAACoG,IAAkB,IAC5BC,cAAerG,cAACiE,IAAe,IAC/BqC,SAAUtG,cAACuG,IAAW,IACtBC,UAAWxG,cAAC2D,IAAQ,IACpB8C,aAAczG,cAAC0G,IAAc,IAC7BC,UAAW3G,cAAC4G,IAAY,IACxBC,SAAU7G,cAAC8G,IAAY,IACvB,mBAAoB9G,cAAC+G,IAAY,IACjCC,WAAYhH,cAACiH,IAAa,IAC1BC,QAASlH,cAACmH,IAAS,IACnBC,WAAYpH,cAACqH,IAAgB,IAC7B,YAAarH,cAACsH,IAAS,IACvBC,aAAcvH,cAAC+G,IAAY,IAC3BS,WAAYxH,cAACyH,IAAW,IACxBC,OAAQ1H,cAAC2H,IAAY,IACrBC,WAAY5H,cAAC6H,IAAQ,IACrB,kBAAmB7H,cAAC8H,IAAU,IAC9BC,YAAa/H,cAACgI,IAAc,KAEfC,EAhHG,CAChB,YACA,WACA,cACA,WACA,WACA,UACA,WACA,gBACA,cACA,gBACA,aACA,eACA,aACA,aACA,UACA,aACA,cACA,YACA,eACA,YACA,gBACA,WACA,kBACA,WACA,WACA,eACA,iBACA,sBACA,UACA,UACA,YACA,eACA,aACA,eACA,SACA,iBC3Ga,SAASC,EAAQC,GAK9B,IAJA,IACEC,EADEC,EAAeF,EAAMG,OAID,IAAjBD,GAAoB,CAEzBD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAEA,IAAAK,EAC4C,CAC1CP,EAAMC,GACND,EAAME,IAFPF,EAAME,GAAaK,EAAA,GAAEP,EAAMC,GAAYM,EAAA,GAM1C,OAAOP,ECbT,IA0BeQ,EA1BO,CACpBC,SACAC,QAAS,CACPC,QAAS,CACPC,GAAI,UACJC,MAAO,aACPC,SAAU,IAEZC,QAAS,CACPH,GAAI,UACJC,MAAO,SACPC,SAAUf,EAAQiB,IAEpBC,QAAS,CACPL,GAAI,UACJC,MAAO,SACPC,SAAU,IAEZI,SAAU,CACRN,GAAI,WACJC,MAAO,WACPC,SAAU,KAGdK,YAAa,CAAC,UAAW,UAAW,Y,cC5BvB,SAASC,EAAOjB,GAI7B,IAHA,IAAIkB,EAAS,GACPC,EAAa,aACbC,EAAmBD,EAAWnB,OAC3BqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BH,GAAUC,EAAWG,OAAOrB,KAAKC,MAAMD,KAAKE,SAAWiB,IAEzD,OAAOF,E,2ECHTK,IAASC,KAAK,mCAAoC,CAAEC,OAAO,IAC3DC,IAAUF,KAAK,uBAEfE,IAAUC,eAAc,SAAUC,GAChCL,IAASM,MAAM,YAAa,CAAED,WAAYA,OCJ5C,IAqDeE,EArDM,SAAH1B,GAAkB,IAAZ2B,EAAI3B,EAAJ2B,KACtBC,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,EAAgCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAuB5B,OACEG,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,QAAS,EAAEC,SAAA,CAEXvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACyL,IAAO,CACNzC,MAAO,uBACP0C,KAAMhB,EACNiB,WAAY,IACZC,QAhBW,WACjBjB,GAAe,IAeWY,SAEpBvL,cAAC6L,IAAM,CAACC,QAAQ,YAAYC,QArCrB,WDoBflC,IAASM,MAAM,UClBT6B,UAAUC,MACZD,UACGC,MAAM,CACL5B,KAAM,uCACN6B,IAAK7B,IAEN8B,MAAK,kBAAMC,QAAQC,IAAI,uBACvBC,OAAM,SAACC,GAAK,OAAKH,QAAQC,IAAI,gBAAiBE,OAEjDP,UAAUQ,UACPC,UAAUpC,GACV8B,MAAK,kBAAMC,QAAQC,IAAI,cACvBC,OAAM,kBAAMF,QAAQC,IAAI,kBAC3B1B,GAAe,GACfI,GAAY,KAqBoCQ,SAAC,cAKhDT,GACC9K,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAC0M,IAAU,CAAAnB,SAAElB,U,iBClCjBsC,EAAMC,YAZW,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAKC,YAAaV,GAiBjB,SAAeW,EAAWC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,WAOhC,SAAAF,IAAA,OAAAA,EAAAG,YAAAC,cAAAC,MAPM,SAAAC,EAA2BC,EAAMC,GAAU,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC1CC,YAAOC,YAAInB,EAAI,SAAUY,GAAO,CACpCpF,OAAQqF,IACP3B,OAAM,SAACkC,GACRpC,QAAQC,IAAImC,MACX,KAAD,EACFpC,QAAQC,IAAIkC,YAAInB,EAAI,SAAUY,GAAOC,GAAY,wBAAAE,EAAAM,UAAAV,QAClDL,MAAA,KAAAC,WAEM,SAAee,EAAWC,GAAA,OAAAC,EAAAlB,MAAC,KAADC,WAUhC,SAAAiB,IAAA,OAAAA,EAAAhB,YAAAC,cAAAC,MAVM,SAAAe,EAA2Bb,GAAI,IAAAc,EAAAC,EAAAnG,EAAA,OAAAiF,cAAAK,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACE,OAAhCS,EAASP,YAAInB,EAAI,SAAUY,GAAKgB,EAAAX,KAAA,EAChBY,YAAOH,GAAQ,KAAD,EAAvB,KAAPC,EAAOC,EAAAE,MACDC,SAAS,CAADH,EAAAX,KAAA,SAEE,OADdzF,EAASmG,EAAQK,OAAOxG,OAC9BwD,QAAQC,IAAIzD,GAAQoG,EAAAK,OAAA,SACbzG,GAAM,QAEbwD,QAAQC,IAAI,UAAU,yBAAA2C,EAAAP,UAAAI,QAEzBnB,MAAA,KAAAC,W,6BChBc2B,EAlCE,SAAH5G,GAA0B,IAApB6G,EAAK7G,EAAL6G,MAAOC,EAAK9G,EAAL8G,MACzBlF,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BmF,EAAKjF,EAAA,GAAEkF,EAAQlF,EAAA,GACtBI,EAAwBL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAhC+E,EAAI9E,EAAA,GAAE+E,EAAO/E,EAAA,GAQpB,OANAgF,qBAAU,WACRC,YAAW,WACTF,GAAQ,GACRE,YAAW,kBAAMJ,EAASH,KAAQ,OACzB,IAARC,MAGHxP,cAAC+P,IAAI,CAACC,UAAS,YAAAC,OAAcN,GAAQ,QAAUO,MAAO,CAAEC,OAAQ,QAAS5E,SACvEvL,cAACoQ,IAAW,CAAA7E,SACVP,eAACC,IAAI,CACHC,WAAS,EACTI,QAAS,EACTF,WAAW,SACXC,eAAe,aACf6E,MAAO,CAAEG,UAAW,QAAU9E,SAAA,CAE9BvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACsQ,IAAYC,SAAQ,CAACd,MAAO,CAAEe,KAAM,OAAQjF,SAC1CxL,EAAW0P,OAGhBzP,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAA,MAAAuL,SAAKkE,cCdFgB,EAbQ,SAAH/H,GAAoB,IAAdE,EAAMF,EAANE,OACxB,OACE5I,cAACiL,IAAI,CAACC,WAAS,EAACG,eAAe,SAASD,WAAW,SAAQG,SACxD3C,EAAO8H,MAAM,EAAG,GAAGC,KAAI,SAACpB,EAAOC,GAC9B,OACExP,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACsP,EAAQ,CAACC,MAAOA,EAAOC,MAAOA,YC8B5BoB,EAhCK,SAAHlI,GAA+B,IAAzBmI,EAASnI,EAATmI,UAAWC,EAAMpI,EAANoI,OAShC,OARAjB,qBAAU,YLaL,SAA0BgB,GAC/BhH,IAASM,MAAM,eAAgB,CAAE4G,MAAO,IACxClH,IAASM,MAAM,gBAAiB,CAAE,aAAc0G,IKd9CG,CAAiBH,GACjBjD,YAAAC,cAAAC,MAAC,SAAAmD,IAAA,OAAApD,cAAAK,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAC0C,OAAzCjC,QAAQC,IAAI,iBAAkBwE,GAAWK,EAAA7C,KAAA,EACnCf,EAAYwD,EAAQD,GAAW,KAAD,mBAAAK,EAAAzC,UAAAwC,MAFtCrD,KAIC,IAGD5C,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACf6E,MAAO,CAAEiB,OAAQ,SAAU5F,SAAA,CAE3BvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAA,MAAAuL,SAAI,iBAENvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACyQ,EAAc,CAAC7H,OAAQiI,EAAUO,cAEpCpR,cAACiL,IAAI,CAACO,MAAI,EAAC6F,GAAI,CAAEC,QAAS,QAAS/F,SACjCvL,cAACoK,EAAY,CACXC,KAAM,iDAAmDyG,U,yBCcpDS,GAxCM,SAAH7I,GAA4B,IAAtB6G,EAAK7G,EAAL6G,MAAOxD,EAAOrD,EAAPqD,QACvByF,EAAWC,YAAc,qBAEzBC,EAAYC,IAAMC,OAAO,MAQ/B,OACE5G,eAAA,OACEgF,UAAU,gBACVjE,QAASA,EACT8F,YAXkB,SAACrD,GACrBkD,EAAUI,QAAQC,MAAMvD,IAWtBwD,UATiB,SAACxD,GACpBkD,EAAUI,QAAQrD,KAAKD,IAQGjD,SAAA,CAExBP,eAACC,IAAI,CAACC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CACtBvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACZvL,cAAA,MAAAuL,SAAKgE,MAEHvP,cAACiL,IAAI,CAACO,MAAI,EAAAD,SAGZvL,cAACsQ,IAAYC,SAAQ,CACnBd,MAAO+B,EAAW,CAAEhB,KAAM,OAAU,CAAEA,KAAM,QAASjF,SAEpDxL,EAAWwP,UAIdvP,cAACiS,IAAW,CAACC,IAAKR,EAAWS,QAAQ,Q,SC8R5BC,OAtUf,SAAsBzJ,GAAqC,IAAtB0J,EAAY1E,UAAArF,OAAA,QAAAgK,IAAA3E,UAAA,GAAAA,UAAA,GAAG,KAE5C4E,EAAQ,EAGdjI,EAAwCC,oBAC1B,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcG,eAAgB,MAC/BhI,EAAAC,YAAAH,EAAA,GAFMkI,EAAYhI,EAAA,GAAEiI,EAAejI,EAAA,GAGpCI,EAA8CL,oBAChC,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcK,kBAAmB,IAClC7H,EAAAJ,YAAAG,EAAA,GAFM8H,EAAe7H,EAAA,GAAE8H,EAAkB9H,EAAA,GAG1C+H,EAAoCrI,oBACtB,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,cAAc,GAC7BC,EAAArI,YAAAmI,EAAA,GAFMC,EAAUC,EAAA,GAAEC,EAAaD,EAAA,GAGhCE,EAA8CzI,oBAChC,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcY,kBAAmB,GAClCC,EAAAzI,YAAAuI,EAAA,GAFMC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,GAG1CE,EAA8C7I,oBAChC,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcgB,kBAAmB,IAClCC,EAAA7I,YAAA2I,EAAA,GAFMC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,GAG1CE,EAAoCjJ,oBAAqB,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcoB,aAAc,IAAGC,EAAAjJ,YAAA+I,EAAA,GAArEC,EAAUC,EAAA,GAAEC,EAAaD,EAAA,GAChCE,EAAgDrJ,oBAClC,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,mBAAoB,GACnCC,EAAArJ,YAAAmJ,EAAA,GAFMC,EAAgBC,EAAA,GAAEC,EAAmBD,EAAA,GAG5CE,EAA8CzJ,oBAChC,OAAZ8H,QAAY,IAAZA,OAAY,EAAZA,EAAc4B,kBAAmB,GAClCC,EAAAzJ,YAAAuJ,EAAA,GAFMC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,GAW1C,SAASE,EAAeC,GACtB,IAAKA,GAAkC,IAArBA,EAAU/L,OAK1B,OAJAyK,GAAc,GACdI,EAAmB,KACnBR,EAAmB,SACnBF,EAAgB,MAKlB,IAAM6B,EAAkBD,EAAU1D,KAAI,SAACpB,GAAK,MAAK,CAACA,MAElDoE,EAAc,CAACW,IACfP,EAAoBQ,EAA0BF,EAAU/L,SACxD6L,EAAmB,GACnBhB,EAAmB,GACnBJ,GAAc,GACdJ,EAAmB,IAEnB6B,EAAsB,CAACF,GAAkB,IAG3C,SAASE,EAAsBC,EAAmBC,GAChD,GAC+B,IAA7BD,EAAkBnM,QACc,IAAhCmM,EAAkB,GAAGnM,QACa,IAAlCoM,EAAuBpM,OAHzB,CAUA,IAAMqM,EAAeF,EAAkBA,EAAkBnM,OAAS,GAGlE,GAA4B,IAAxBqM,EAAarM,OAIf,OAHAmM,EAAkBG,MAClBjB,EAAakB,aAAKJ,SAClBD,EAAsBC,EAAmBC,GAK3C,GAA4B,IAAxBC,EAAarM,OAAc,CAC7B,IAAMwM,EAAgBH,EAAaI,QAInC,OAFAN,EAAkBG,MAEe,IAA7BH,EAAkBnM,QAEpBqK,EAAmBmC,EAAcpE,MAAM,EAAG6B,IAC1CQ,GAAc,GACdI,EAAmB,UACnBV,EAAgB,QAIXgC,EAAkBA,EAAkBnM,OAAS,IAChDmM,EAAkBO,KAAK,IAEPP,EAAkBA,EAAkBnM,OAAS,GACrD0M,KAAKF,GACfnB,EAAakB,aAAKJ,SAClBD,EAAsBC,EAAmBC,IAM7C,IAAMO,EAAcN,EAAaI,QAC3BG,EAAeP,EAAaI,QAMlCL,EAAuBM,KAAK,CAC1BC,cACAC,eACAJ,cANoB,GAOpBK,UAAW,EACXC,WAAY,IAGdzB,EAAakB,aAAKJ,IAClBlB,EAAkBsB,aAAKH,IAGvBW,EAAkBX,QA5DhBY,EAAab,GA+DjB,SAASY,EAAkBX,GACzB,IAAMa,EACJb,EAAuBA,EAAuBpM,OAAS,GAEzD,GAAKiN,EAAL,CAMA,IAAQN,EAAqDM,EAArDN,YAAaC,EAAwCK,EAAxCL,aAAcC,EAA0BI,EAA1BJ,UAAWC,EAAeG,EAAfH,WAExCI,EACJP,GAAeE,EAAYF,EAAY3M,OACnC2M,EAAYE,GACZ,KACAM,EACJP,GAAgBE,EAAaF,EAAa5M,OACtC4M,EAAaE,GACb,KAEN,GAAII,GAAaC,EACfhD,EAAgB,CAAEiD,KAAMF,EAAWG,MAAOF,QACrC,CAEgC,IAADG,EAGEC,EAHtC,GAAIV,EAAYF,EAAY3M,QAC1BsN,EAAAL,EAAaT,eAAcE,KAAItH,MAAAkI,EAAAf,aAAII,EAAYvE,MAAMyE,KAEvD,GAAIC,EAAaF,EAAa5M,QAC5BuN,EAAAN,EAAaT,eAAcE,KAAItH,MAAAmI,EAAAhB,aAAIK,EAAaxE,MAAM0E,KAIxDV,EAAuBE,MACvBrB,EAAkBsB,aAAKH,IAGvBoB,EAA4BP,EAAaT,cAAerB,GAGxDe,EAAsBf,EAAYiB,SAlClCF,EAAsBf,EAAYiB,GAsCtC,SAASqB,EAASC,GAChB,IAAMtB,EAAsBG,aAAOxB,GAC7BkC,EACJb,EAAuBA,EAAuBpM,OAAS,GAEzD,GAAKiN,EAAL,CAKA,IAAQN,EACNM,EADMN,YAAaC,EACnBK,EADmBL,aAAcJ,EACjCS,EADiCT,cAAeK,EAChDI,EADgDJ,UAAWC,EAC3DG,EAD2DH,WAGvDI,EAAYP,GAAeA,EAAYE,GACvCM,EAAaP,GAAgBA,EAAaE,GAGhDN,EAAcE,KAAKgB,GAGff,GAAee,IAAWR,EAC5BD,EAAaJ,WAAa,EACjBD,GAAgBc,IAAWP,IACpCF,EAAaH,YAAc,GAG7B7B,EAAmBmB,GAGnBP,GAAmB,SAAC/F,GAAI,OAAKA,EAAO,KACpC6H,IAGAZ,EAAkBX,QA3BhBtI,QAAQ8J,KAAK,6CA8BjB,SAASJ,EAA4BhB,EAAeL,GAEjB,IAA7BA,EAAkBnM,QACpBmM,EAAkB0B,QAAQ,IAIV1B,EADKA,EAAkBnM,OAAS,GAExC0M,KAAKF,GAEgD,IAA3DL,EAAkBA,EAAkBnM,OAAS,GAAGA,QAElDmM,EAAkBG,MAGpBjB,EAAakB,aAAKJ,IAEpB,SAASa,EAAab,GACpB,IAAI2B,EAAY,GAEZ3B,EAAkBnM,OAAS,GAAKmM,EAAkB,GAAGnM,OAAS,IAChE8N,EAAY3B,EAAkB,GAAG,IAGnCrI,QAAQC,IAAI,cAAe+J,GAE3BzD,EAAmByD,EAAU1F,MAAM,EAAG6B,IACtCQ,GAAc,GACdI,EAAmB,KACnBV,EAAgB,MAGlB,SAASwD,IACP,IAAMI,EAAW9N,KAAK+N,IAAKrC,EAAkBJ,EAAoB,IAAK,KACtEV,EAAmBkD,GAGrB,SAAS9B,EAA0BgC,GAIjC,IAHA,IAAI1C,EAAmB,EACnB2C,EAAY,EAETA,EAAYD,GACjB1C,GAAoBtL,KAAKkO,KAAKF,GAAK,EAAIC,IAAcA,EACrDA,GAAa,EAGf,OAAO3C,EAGT,SAAS6C,IACP,GAA+B,IAA3BrD,EAAgB/K,OAApB,CAKA,IAAMoM,EAAsBG,aAAOxB,GAC7BkC,EACJb,EAAuBA,EAAuBpM,OAAS,GAE/BiN,EAAlBT,cAGMF,MAGdT,GAAmB,SAAC/F,GAAI,OAAMA,EAAO,EAAIA,EAAO,EAAI,KACpD6H,IAGIV,EAAaJ,UAAY,EAC3BI,EAAaJ,WAAa,EACjBI,EAAaH,WAAa,IACnCG,EAAaH,YAAc,GAG7B7B,EAAmBmB,GAGf7B,IACFE,GAAc,GACdI,EAAoBc,EAAkBJ,EAAoB,MAI5D,IAAM2B,EAAYD,EAAaN,YAAYM,EAAaJ,YAAc,KAChEM,EACJF,EAAaL,aAAaK,EAAaH,aAAe,KAEpDI,GAAaC,EACfhD,EAAgB,CAAEiD,KAAMF,EAAWG,MAAOF,KAG1Cf,EAAuBE,MACvBrB,EAAmBmB,GACnBF,EAAsBf,EAAYiB,SA3ClCtI,QAAQ8J,KAAK,sBAtOjBrG,qBAAU,WACHwC,GACH+B,EAAezL,KAGhB,CAACA,IA+QJ,IAAMgO,EAAe,CACnBnE,eACAE,kBACAG,aACAI,kBACAI,kBACAI,aACAI,mBACAI,mBAGF,MAAO,CACLhB,kBACAP,kBACAF,eACAuD,WACAW,cACA7D,aACA8D,iBCzPWC,GArEK,SAAHlO,GAAgD,IAADmO,EAAzChG,EAASnI,EAATmI,UAAWiG,EAAOpO,EAAPoO,QAASC,EAAcrO,EAAdqO,eAEnCC,EAAoBC,mBAAQ,kBAAMpG,EAAUH,UAAS,CAACG,IAC5DhB,qBAAU,WACRzD,QAAQC,IAAI,sBAAuB2K,KAClC,CAACA,IAEJ,IAAAE,EACE9E,GAAa4E,EAAiC,OAAdD,QAAc,IAAdA,GAAoB,QAANF,EAAdE,EAAgB3H,YAAI,IAAAyH,OAAN,EAAdA,EAAsBM,SADhDlE,EAAeiE,EAAfjE,gBAAiBT,EAAY0E,EAAZ1E,aAAcuD,EAAQmB,EAARnB,SAAuBlD,GAAFqE,EAAXR,YAAuBQ,EAAVrE,YAGxDrB,EAAWC,YAAc,sBAE/B2F,EAAiCC,qBAAWC,IAApCjB,EAAQe,EAARf,SAAUkB,EAAUH,EAAVG,WAClBC,EAAA/M,YAA0C4L,EAAQ,GAA5BoB,GAAFD,EAAA,GAAkBA,EAAA,IACtCE,EAAAjN,YAA8C8M,EAAU,GAAhCI,GAAFD,EAAA,GAAoBA,EAAA,IAEpCE,EAAiB,SAACrI,GACtBwG,EAASxG,GACTkI,EAAiBxE,IAGnBpD,qBAAU,WACRzD,QAAQC,IAAI,cAAewG,GACvBA,IACF8E,EAAmB,GACnBb,EAAQ9B,KAAK,eAEd,CAACnC,IAQJ,OAAKhC,GAAkC,IAArBA,EAAUvI,OAK1BtI,cAAA,OAAAuL,SACEP,eAACC,IAAI,CACHC,WAAS,EACTI,QAASkG,EAAW,GAAK,EACzBpG,WAAW,SACXC,eAAe,SACfF,UAAWqG,EAAW,MAAQ,SAASjG,SAAA,CAEtCiH,GAAgBA,EAAakD,MAC5B1V,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACuR,GAAY,CACXhC,MAAOiD,EAAakD,KACpB3J,QAAS,kBAAM6L,EAAepF,EAAakD,WAIhDlD,GAAgBA,EAAamD,OAC5B3V,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACuR,GAAY,CACXhC,MAAOiD,EAAamD,MACpB5J,QAAS,kBAAM6L,EAAepF,EAAamD,iBAxB9C3V,cAAA,OAAAuL,SAAK,uB,yHC9BVsM,GAAaC,sBAAW,SAAoBC,EAAO7F,GACvD,OAAOlS,cAACgY,KAAKC,YAAA,CAAC9M,UAAU,KAAK+G,IAAKA,GAAS6F,OA8E9BG,GA3EO,SAAHxP,GAAiBA,EAAXyP,YAAmB,IAC1CC,EAAwBzG,IAAMpH,UAAS,GAAM8N,EAAA5N,YAAA2N,EAAA,GAAtC1M,EAAI2M,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAAwB5G,IAAMpH,UAAS,GAAMiO,EAAA/N,YAAA8N,EAAA,GAAtCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GASdG,EAAc,WAClBL,GAAQ,GAPRI,GAAQ,GACR5I,YAAW,WACT4I,GAAQ,KACP,MAWClH,EAAWC,YAAc,sBACzBmH,EAAW,CACfC,UAAW,CACT7P,MAAO,YACP8P,YAAY,0FAAD7I,OACTuB,EAAW,OAAS,SAAQ,sGAE9BuH,MAAO,oCAIX,OACE/N,eAAA,OAAAO,SAAA,CACEvL,cAACgZ,KAAU,CACTxI,KAAK,QACLzE,QAnBa,WACjBuM,GAAQ,IAmBJtI,UAAS,GAAAC,OAAKwI,GAAQ,QAASlN,SAE/BvL,cAACiZ,KAAe,MAGlBjO,eAACkO,KAAM,CACLtN,QAAS+M,EACTQ,oBAAqBtB,GACrBnM,KAAMA,EACN0N,YAAU,EACVlJ,MAAO,CACLG,UAAW,OACXgJ,WAAY,MACZC,YAAa,OAEfC,WAAY,CACVrJ,MAAO,CAAEsJ,oBAAqB,EAAGC,qBAAsB,IACvDlO,SAAA,CAEFvL,cAAC0Z,KAAW,CAAAnO,SAAEqN,EAAoB,UAAE5P,QACpChJ,cAACgZ,KAAU,CACT9I,MAAO,CAAEyJ,SAAU,WAAYhE,MAAO,KACtCiE,MAAM,UACN7N,QAAS4M,EACT,aAAW,QAAOpN,SAElBvL,cAAC6Z,KAAS,MAEZ7Z,cAAC8Z,KAAiB,CAACC,WAAW,EAAO7J,MAAO,CAAEC,OAAQ,IAAK5E,SACxDqN,EAAoB,UAAEE,cAEzB9Y,cAAA,OACEga,IAAKpB,EAAoB,UAAEG,MAC3B7I,MAAO,CAAE+J,MAAO,QAChBC,IAAI,oCCrFC,OAA0B,oCCsB1BC,GAlBI,SAAHzR,GAAqB,IAAfoO,EAAOpO,EAAPoO,QAIpB,OACE9W,cAACgZ,KAAU,CACTY,MAAM,UACN7N,QANe,WACjB+K,EAAQ9B,KAAK,MAMX9E,MAAO,CAAEkK,SAAU,OAAQC,UAAW,QAAS9O,SAE/CvL,cAAA,OACEga,IAAKM,GACLJ,IAAI,wBACJhK,MAAO,CAAEkK,SAAU,OAAQC,UAAW,a,qGCL/BE,GAVEC,aAAY,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cCwHGE,I,GAAAA,GArHf,SAAuB9C,GACrB,IAAM+C,EAAgBC,aAAO,KAAPA,CAAa,CACjCC,QAAS,OACTC,SAAU,aACV5P,eAAgB,eAChBiG,QAAS,EACT2I,MAAO,SAEHiB,EAAoBH,aAAO,KAAPA,CAAa,CACrCpB,SAAU,WACVqB,QAAS,OACTC,SAAU,aACV5P,eAAgB,eAChBD,WAAY,SACZ6O,MAAO,SAEHkB,EAAyBJ,aAAO,MAAPA,EAAc,SAAArS,GAAA,IAAG0S,EAAW1S,EAAX0S,YAAaC,EAAI3S,EAAJ2S,KAAI,MAAQ,CACvEpB,MAAO,OACP9I,OAAQ,OACRmK,WAAY,OACZC,aAAc,MACdC,WACEJ,GAAeC,EAAOd,GAASE,QAAQG,UAAUD,KAAO,UAC1Df,MAAOwB,GAAeC,EAAO,OAAS,OACtCI,UAAW,SACXT,QAAS,OACT5P,WAAY,SACZC,eAAgB,aAGZqQ,EAAuBX,aAAO,MAAPA,CAAc,CACzCC,QAAS,OACTC,SAAU,gBACV7P,WAAY,WAGN2F,EAA6BgH,EAA7BhH,MAAOe,EAAsBiG,EAAtBjG,QAASuE,EAAa0B,EAAb1B,SAEVsF,eAKd,IAAMC,EAAc,SAAHC,GAAqC,IAA/B/J,EAAO+J,EAAP/J,QAASgK,EAAID,EAAJC,KAAMzF,EAAQwF,EAARxF,SACpCjK,QAAQC,IAAIgK,GACZ,IAAI5G,EAAQ,EAOZ,OANIqC,EAAU,IAAMgK,EAClBrM,EAAQ4G,EACCvE,GAAWgK,IACpBrM,EAAQ,KAIRzP,cAAC+b,KAAc,CACbjQ,QAAQ,cACR2D,MAAOA,EACP4B,GAAI,CACF,2BAA4B,CAC1B2K,KAAM,WACNrC,SAAU,WACVsC,IAAK,GACLvG,KAAM,oBACNC,MAAO,mBACPuG,gBAAiB,aAEnB,2BAA4B,CAC1BA,gBAAiB3B,GAASE,QAAQG,UAAUD,UAOtD,SAASwB,EAAYf,GACnB,OAAQA,GACN,KAAK,EACH,OAAOpb,cAACoc,KAAyB,IACnC,KAAK,EACH,OAAOpc,cAACqc,KAAgB,IAC1B,KAAK,EACH,OAAOrc,cAACsc,KAA4B,IACtC,QACE,OAAO,MAsBb,OACEtc,cAAC8a,EAAa,CAAAvP,SACXwF,EAAMJ,KApBX,SAAoB4L,EAAOC,GACzB,IAAQ1K,EAAsB2K,KAAtB3K,QAASuE,EAAaoG,KAAbpG,SACXgF,EAAOmB,EAAM1K,EACbsJ,EAAcoB,IAAQ1K,EAC5B,OACE9G,eAACkQ,EAAiB,CAAA3P,SAAA,CAChBvL,cAAC0b,EAAoB,CAAAnQ,SACnBvL,cAACmb,EAAsB,CAACC,YAAaA,EAAaC,KAAMA,EAAK9P,SAC1D4Q,EAAYK,SAGdA,GACDxc,cAAC4b,EAAW,CAAC9J,QAASA,EAASgK,KAAMU,EAAKnG,SAAUA,MAPhCmG,KAeD,CAAE1K,UAASuE,gBC9GlCtF,GAAQ,CAAC,UAAW,UAAW,WAwBtB2L,GAvBA,SAAHhU,GAAqB,IAAfoO,EAAOpO,EAAPoO,QAChBM,EAAiCC,qBAAWC,IAApCjB,EAAQe,EAARf,SAAUkB,EAAUH,EAAVG,WAClBC,EAAA/M,YAA0C4L,EAAQ,GAA3CsG,EAAanF,EAAA,GACpBE,GADsCF,EAAA,GACtC/M,YAA8C8M,EAAU,IAAjDqF,EAAelF,EAAA,GAAoBA,EAAA,GAE1C,OACE1X,cAAC6c,KAAG,CAACxL,GAAI,CAAEyL,SAAU,GAAIvR,SACvBvL,cAAC+c,KAAM,CAACpD,SAAS,QAAOpO,SACtBP,eAACgS,KAAO,CAAAzR,SAAA,CACNvL,cAACma,GAAU,CAACrD,QAASA,IACrB9W,cAAC6a,GAAa,CACZ9J,MAAOA,GACPe,QAAS8K,EACTvG,SAAUsG,IAEZ3c,cAAA,OAAKkQ,MAAO,CAAEmJ,WAAY,QAAS9N,SACjCvL,cAACkY,GAAa,c,kECRX+E,GAXE,SAAHvU,GAAoC,IAA9BwU,EAAaxU,EAAbwU,cAAeC,EAAOzU,EAAPyU,QACjC,OACEnd,cAACgZ,KAAU,CACTjN,QAASmR,EACThN,MAAO,CAAEyJ,SAAU,WAAYsC,IAAK,GAAItG,MAAO,IAAKpK,SAEnD4R,EAAUnd,cAACod,KAAQ,IAAMpd,cAACiZ,KAAe,OC0DjCoE,GA5DQ,SAAH3U,GAA6B,IAAvB6G,EAAK7G,EAAL6G,MAAO+N,EAAQ5U,EAAR4U,SACzB9L,EAAWC,YAAc,sBAC/BnH,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtC6S,EAAO3S,EAAA,GAAE+S,EAAU/S,EAAA,GAEpB0S,EAAgB,WACpBK,GAAYJ,IAGd,OACEnd,cAAA,MAAAiY,wBAAA,CACEjI,UAAS,kBAAAC,OAAoBkN,EAAU,UAAY,KAC/CG,EAASE,iBAAe,IAC5BC,WAAW,EACX1U,GAAIwG,EAAMhE,SAEVP,eAAA,OAAKgF,UAAU,cAAazE,SAAA,CAE1BP,eAAA,OAAKgF,UAAU,aAAYzE,SAAA,CACzBvL,cAACid,GAAQ,CAACC,cAAeA,EAAeC,QAASA,IACjDnS,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElBvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAA,MAAAuL,SAAKgE,MAEPvP,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACsQ,IAAYC,SAAQ,CACnBd,MAAO+B,EAAW,CAAEhB,KAAM,QAAW,CAAEA,KAAM,OAAQjF,SAEpDxL,EAAWwP,aAMpBvE,eAAA,OAAKgF,UAAU,YAAWzE,SAAA,CACxBvL,cAACid,GAAQ,CAACC,cAAeA,EAAeC,QAASA,IACjDnS,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElBvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAA,MAAAuL,SAAKgE,MAEPvE,eAACC,IAAI,CAACO,MAAI,EAAAD,SAAA,CACRvL,cAAA,KAAAuL,SAAG,gCACHvL,cAAA,KAAAuL,SAAG,qDCtDXmS,GAAY3C,KAAO4C,IAAGC,QAAAC,aAAA,QAa5B,SAASC,GAAS5N,EAAO6N,GAEvB,GADA7N,EAZ0B,SAACA,GAC3B,GAAS,OAALA,QAAK,IAALA,KAAO8N,UAAW,CACpB,IAAMC,EAAS,GAAAhO,OAAMC,EAAM8N,UAAUE,MAAM,KAAKnJ,QAAO,UACvD,OAAAkD,wBAAA,GACK/H,GAAK,IACR8N,UAAWC,IAGf,OAAO/N,EAICiO,CAAoBjO,IACvB6N,EAASK,gBACZ,OAAOlO,EAET,IAAAmO,EAA6BN,EAASO,cAA9BC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SACVC,EAAeV,EAASU,aAC9BrS,QAAQC,IAAIoS,GACZ,IAAIC,EAAS,EACQ,YAAjBD,EACFC,GAAU,IACgB,YAAjBD,IACTC,EAAS,KAGX,IAAMC,EAAS,aAAA1O,OAAgByO,EAAM,QAAAzO,OAAOsO,EAAOK,EAAC,OAGpD,OAAA3G,wBAAA,GACK/H,GAAK,IACR8N,UAAWW,EAEXE,WAAW,QAAD5O,OAAUuO,EAAW,GAAG,OAItC,I,SAiBeM,GAjBQ,SAAHpW,GAAkC,IAA5B6G,EAAK7G,EAAL6G,MAAOC,EAAK9G,EAAL8G,MAAOuP,EAAMrW,EAANqW,OACtC,OACE/e,cAACgf,KAAS,CAACC,YAAa1P,EAAmBC,MAAOA,EAAMjE,SACrD,SAAC+R,EAAUS,GAAQ,OAClB/d,cAAC0d,GAASzF,wBAAA,GACJqF,EAAS4B,gBAAc,IAC3BhN,IAAKoL,EAAS6B,SACdC,WAAYrB,EAASqB,WACrBlP,MAAO4N,GAASR,EAAS4B,eAAehP,MAAO6N,GAC/C/N,UAAW+O,EAAS,mBAAqB,GAAGxT,SAE5CvL,cAACqd,GAAc,CAAC9N,MAAOA,EAAO+N,SAAUA,SATV/N,ICrClC8P,IAJYtE,KAAO4C,IAAGC,QAAAC,aAAA,4BAIV9C,KAAO4C,IAAG2B,QAAAzB,aAAA,oKAEN,SAAC9F,GAAK,OACxBA,EAAMwH,eAAiBxH,EAAMyH,WAAa,WAE/B,SAACzH,GAAK,OAAMA,EAAM0H,UAAY,MAAQ,YAEtC,SAAC1H,GAAK,OAAKA,EAAM0H,WAAa,SACzC,SAAC1H,GAAK,OACNA,EAAM2H,gBAAc,2BAAAzP,OAEA8H,EAAMyH,WAAU,aAgEzBG,GA5DY,SAAHjX,GAIjB,IAHLkX,EAAMlX,EAANkX,OAAMC,EAAAnX,EACN+W,iBAAS,IAAAI,GAAQA,EAAAC,EAAApX,EACjB8W,kBAAU,IAAAM,EAAG,YAAWA,EAExBxV,EAAwCC,mBAASkV,GAAUjV,EAAAC,YAAAH,EAAA,GAApDyV,EAAYvV,EAAA,GAAEwV,EAAexV,EAAA,GACpCI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApD8U,EAAc7U,EAAA,GAAEoV,EAAiBpV,EAAA,GAiBxC,OAfA8G,IAAM9B,WAAU,WACd,GAAI4P,EAAW,CACb,IAAMS,EAAQpQ,YAAW,WACvBkQ,GAAgB,KACf,KACH,OAAO,kBAAMG,aAAaD,IAE1BD,GAAkB,GAClB,IAAMC,EAAQpQ,YAAW,WACvBmQ,GAAkB,KACjB,KACH,OAAO,kBAAME,aAAaD,MAE3B,CAACT,IAGFzf,cAACogB,KAAS,CAAiBC,YAAaT,EAAO7W,GAAIoC,UAAU,aAAYI,SACtE,SAAC+R,EAAUS,GAAQ,OAClB/d,cAACqf,GAASpH,wBAAA,CACRqI,UAAU,cACVpO,IAAKoL,EAAS6B,SACdM,UAAWA,EACXD,WAAYA,EACZD,eAAgBxB,EAASwB,eACzBG,eAAgBA,EAChBa,GAAC,GACGjD,EAASkD,gBAAc,IAAAjV,SAE3BvL,cAACiL,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAAQE,SAEvBP,eAACC,IAAI,CAACO,MAAI,EAAC2E,OAAO,OAAM5E,SAAA,CACrBkU,GACCzf,cAAC8e,GAAc,CAEbvP,MAAa,OAANqQ,QAAM,IAANA,OAAM,EAANA,EAAQ3W,SAAS,GACxBuG,MAAa,OAANoQ,QAAM,IAANA,OAAM,EAANA,EAAQ3W,SAASwX,QAAc,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQ3W,SAAS,IACjD8V,OAAQgB,GAHG,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQ3W,SAAS,IAMzBqU,EAASoD,sBA3BJd,EAAO7W,KC1Bd4X,GAAsB,SAAHjY,GAClBA,EAAZkY,aACOlY,EAAPoO,QACkBpO,EAAlBiP,mBAOE,OAAO,MCjCEkJ,GAAmB,CAC9B,2D,mBCyFaC,GAhFO,SAAHpY,GAMZ,IALLqY,EAAUrY,EAAVqY,WACAH,EAAYlY,EAAZkY,aACA9J,EAAOpO,EAAPoO,QACAkK,EAAatY,EAAbsY,cACAnQ,EAASnI,EAATmI,UAEiBY,YAAc,qBAE/B5B,qBAAU,WAC2C,IAA/CkR,EAAWlY,QAAQK,QAAQD,SAASX,QAuB1C,SAA0BuI,GACpBA,EAAUvI,OAAS,EAErByY,EAAWlY,QAAQK,QAAQD,SAAW8X,EAAWlY,QAAQC,QAAQG,SACxD4H,EAAUvI,OAAS,GAE5ByY,EAAWlY,QAAQK,QAAQD,SAAW8X,EAAWlY,QAAQO,QAAQH,UAGjEmD,QAAQC,IAAI0U,EAAWlY,QAAQO,QAAQH,UACvC2X,EAAaG,EAAWlY,QAAQO,QAAQH,UACxC0O,EAAmB,GACnBF,EAAiB,GACjBX,EAAQ9B,KAAK,UAnCbiM,CAAiBF,EAAWlY,QAAQO,QAAQH,YAE7C,CAAC8X,EAAYjK,EAAS8J,EAAc/P,IAEvC,IAAAuG,EAAiCC,qBAAWC,IAApCjB,EAAQe,EAARf,SAAUkB,EAAUH,EAAVG,WAClBC,EAAA/M,YAA0C4L,EAAQ,GAA3CsG,EAAanF,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,EAAAjN,YAA8C8M,EAAU,GAAhCI,GAAFD,EAAA,GAAoBA,EAAA,IAClCwJ,EAAoB7J,qBAAW8J,IAA/BD,gBACRE,EAAA3W,YAAwDyW,EAAe,GAA1CG,GAAFD,EAAA,GAAyBA,EAAA,IAC9CE,EAAiB1P,iBAAOmP,EAAWlY,QAAQK,QAAQD,SAASX,QACrDiZ,eAAPxY,GA6BN,OA3BA8G,qBAAU,WAC2C,IAA/CkR,EAAWlY,QAAQK,QAAQD,SAASX,QACxCmP,EAAiBkF,EAAgB,IAAM2E,EAAexP,WACrD,CAACiP,IAEJlR,qBAAU,WACRzD,QAAQC,IAAI,2BAA4BwU,IACxCQ,EAAwBR,MACvB,CAACQ,IAoBFrW,eAAC6R,KAAG,CAAAtR,SAAA,CACFvL,cAAC2gB,GAAmB,CAClBC,aAAcA,EACd9J,QAASA,EACTa,mBAAoBA,IAEtB3X,cAAA,MAAAiY,wBAAA,GAAS+I,GAAa,IAAAzV,SACpBP,eAACC,IAAI,CAACC,WAAS,EAACI,QAAS,EAAG4C,KAAK,SAAQ3C,SAAA,CACvCvL,cAAC2f,GAAkB,CAEjBC,OAAQmB,EAAWlY,QAAQC,QAC3B0W,WAAY,aAFPuB,EAAWlY,QAAQC,QAAQC,IAIlC/I,cAAC2f,GAAkB,CAEjBC,OAAQmB,EAAWlY,QAAQK,QAC3BuW,WAAW,EACXD,WAAY,IAHPuB,EAAWlY,QAAQK,QAAQH,IAKlC/I,cAAC2f,GAAkB,CAEjBC,OAAQmB,EAAWlY,QAAQO,QAC3BoW,WAAY,cAFPuB,EAAWlY,QAAQO,QAAQL,c,UCtC7ByY,GAvCO,SAAH9Y,GAA8C,IAAxC6G,EAAK7G,EAAL6G,MAAOC,EAAK9G,EAAL8G,MAAOoK,EAAKlR,EAALkR,MAAO6H,EAAW/Y,EAAX+Y,YAC5CnX,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCoX,EAAUlX,EAAA,GAAEmX,EAAanX,EAAA,GAChCI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CgX,EAAY/W,EAAA,GAAEgX,EAAehX,EAAA,GAC9BiX,EAAclQ,kBAAO,GAa3B,OAZA/B,qBAAU,WACmB,GAAvBiS,EAAYhQ,SAIhBhC,YAAW,WACT6R,GAAc,GACd7R,YAAW,kBAAM+R,EAAgBjI,KAAQ,OACxC,IAAMpK,GACTmS,GAAc,IAPZG,EAAYhQ,SAAU,IAQvB,CAAC8H,IAGF5Z,cAACgf,KAAS,CAACC,YAAa1P,EAAOC,MAAOA,EAAOuS,gBAAiBN,EAAYlW,SACvE,SAAC+R,GAAQ,OACRtd,cAAA,MAAAiY,oCAAA,GACMqF,EAASE,iBACTF,EAAS4B,gBAAc,IAC3BhN,IAAKoL,EAAS6B,SAAS5T,SAEvBvL,cAAC+P,IAAI,CACHC,UAAS,YAAAC,OAAcyR,EAAa,SAAW,IAC/CrQ,GAAI,CAAE6K,gBAAiB0F,GAAerW,SAEtCvL,cAACiL,IAAI,CAACC,WAAS,EAACG,eAAe,SAAQE,SACrCvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAA,MAAAuL,SAAKgE,iBC3BfyS,GAAajH,KAAO4C,IAAGC,QAAAC,aAAA,QAuCdoE,GArCW,SAAHvZ,GAAyC,IAAnCkX,EAAMlX,EAANkX,OAAQsC,EAAMxZ,EAANwZ,OAAQT,EAAW/Y,EAAX+Y,YAE3C,OACEzhB,cAAA,OAAAuL,SACEvL,cAACogB,KAAS,CAAiBC,YAAaT,EAAO7W,GAAGwC,SAC/C,SAAC+R,EAAUS,GAAQ,OAClB/d,cAACgiB,GAAU/J,wBAAA,CACT/F,IAAKoL,EAAS6B,UACV7B,EAASkD,gBAAc,IAC3BjB,eAAgBxB,EAASwB,eAAehU,SAExCP,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAAQE,SAAA,CAEtBqU,EAAO3W,SAAS0H,KAAI,SAACpB,EAAOC,GAC3B,OACExP,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACwhB,GAAa,CACZjS,MAAOA,EACPC,MAAOoQ,EAAO3W,SAASwX,QAAQlR,GAC/BqK,MAAOsI,EAAO1S,GACdiS,YAAaA,KALDlS,MAUnB+N,EAASoD,oBAzBFd,EAAO7W,OCIdoZ,GAbK,SAAHzZ,GAA0B,IAArBoO,EAAOpO,EAAPoO,QAASsL,EAAM1Z,EAAN0Z,OAK3B,OACIpiB,cAAC6L,IAAM,CAACE,QALE,YxBiCX,SAA8BqW,GACnCvY,IAASM,MAAM,mBAAoB,CAAEkY,OAAQD,IwBjCvCE,CAAqBF,GACrBtL,EAAQyL,QAAQ,MAIRzW,QAAQ,YAAWP,SACtB,aC2BEiX,GAlCM,SAAH9Z,GAQX,IAPLkX,EAAMlX,EAANkX,OACA6C,EAAM/Z,EAAN+Z,OACAP,EAAMxZ,EAANwZ,OACAQ,EAASha,EAATga,UACA5L,EAAOpO,EAAPoO,QACA2K,EAAW/Y,EAAX+Y,YACAkB,EAAUja,EAAVia,WAEA,OACE3X,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAAQE,SAAA,CAEvBvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACiiB,GAAiB,CAChBrC,OAAQA,EACRsC,OAAQA,EACRT,YAAaA,MAGjBzW,eAACC,IAAI,CAACO,MAAI,EAAC6F,GAAI,CAAEuR,WAAY,OAAQrX,SAAA,CAClCoX,GACC3iB,cAAC6L,IAAM,CAACE,QAAS0W,EAAQ3W,QAAQ,YAAWP,SAAC,YAI9CmX,GAAa1iB,cAACmiB,GAAW,CAACrL,QAASA,WCiG7B+L,GAzHG,SAAHna,GAAwD,IAAlDE,EAAMF,EAANE,OAAQmY,EAAUrY,EAAVqY,WAAY+B,EAAapa,EAAboa,cAAehM,EAAOpO,EAAPoO,QAClDiM,EAAanR,iBAAO1J,EAAQU,EAAO8H,MAAM,EAAG,KAC5CsS,EAAcpR,iBAAO,IACrBqR,EAAYta,EAAcE,QAAQK,QAAQD,SAC1CmN,EAAYxE,iBAAO,IACvBtH,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjC4X,EAAM1X,EAAA,GAAE0Y,EAAS1Y,EAAA,GACxBI,EAAsCL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAA7C6W,EAAW5W,EAAA,GAAEsY,EAActY,EAAA,GAElC+H,EAA0CrI,mBAAS,IAAGuI,EAAArI,YAAAmI,EAAA,GAA/CwQ,EAAatQ,EAAA,GAAEuQ,EAAgBvQ,EAAA,GACtCE,EAAkCzI,oBAAS,GAAK2I,EAAAzI,YAAAuI,EAAA,GAAzCsQ,EAASpQ,EAAA,GAAEqQ,EAAYrQ,EAAA,GAC9BE,EAAoC7I,oBAAS,GAAM+I,EAAA7I,YAAA2I,EAAA,GAA5CoQ,EAAUlQ,EAAA,GAAEmQ,EAAanQ,EAAA,GAChCE,EAA+BjJ,oBAAS,GAAMmJ,EAAAjJ,YAAA+I,EAAA,GAAvCkP,EAAShP,EAAA,GAAEgQ,EAAShQ,EAAA,GAC3BE,EAAoCrJ,oBAAS,GAAKuJ,EAAArJ,YAAAmJ,EAAA,GAA3C+O,EAAU7O,EAAA,GAAE6P,EAAa7P,EAAA,GAEhCjE,qBAAU,WACR,KAAOmT,EAAYlR,QAAQxJ,OAAS,GAE7Bya,EAAWjR,QAAQ8R,SAASX,EAAU,KACzCD,EAAYlR,QAAQkD,KAAKiO,EAAU,IAErCA,EAAYA,EAAUY,OAAO,EAAGZ,EAAU3a,QAE5Cwb,MACC,CAACb,IAEJ,IAAMc,EAAa,SAACC,GAElB,GADA5N,EAAUtE,QAAQkD,KAAKgP,GACW,IAA9BjB,EAAWjR,QAAQxJ,OAAc,CACnC,IAAM2b,EAAShM,wBAAA,GACV8I,EAAWlY,QAAQQ,UAAQ,IAC9BJ,SAAUmN,EAAUtE,UAEhBoS,EAAajM,wBAAA,GACd8I,GAAU,IACblY,QAAOoP,wBAAA,GACF8I,EAAWlY,SAAO,IACrBQ,SAAU4a,MAGdnB,EAAcoB,G1BdSC,E0BeVD,EAAcrb,QAAQQ,S1BdvCQ,IAASM,MAAM,UAAW,CAAE,iBAAkBga,I0Be1CV,GAAc,GACdF,GAAa,G1BjBZ,IAAsBY,E0BmBzBL,KAEIA,EAAiB,WACrBT,EACEnb,EAAQ,CAAC6a,EAAWjR,QAAQ8C,MAAOoO,EAAYlR,QAAQ8C,SAEzDxI,QAAQC,IAAI,eAAgB0W,EAAWjR,SACvC1F,QAAQC,IAAI,eAAgB2W,EAAYlR,SACxC1F,QAAQC,IAAI+J,EAAUtE,UAyBlBN,EAAWC,YAAc,sBAM/B,OACEzG,eAAA,OAAAO,SAAA,CACG+X,GACCtY,eAACC,IAAI,CACHC,WAAS,EACTI,QAASkG,EAAW,GAAK,EACzBpG,WAAW,SACXC,eAAe,SACfF,UAAWqG,EAAW,MAAQ,SAASjG,SAAA,CAEvCvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACuR,GAAY,CACXxF,QAAS,kBAAMgY,EAAWX,EAAc,KACxC7T,MAAO6T,EAAc,OAGzBpjB,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACuR,GAAY,CACXxF,QAAS,kBAAMgY,EAAWX,EAAc,KACxC7T,MAAO6T,EAAc,UAK5BI,GACCxjB,cAACwiB,GAAY,CACX5C,OAAQmB,EAAWlY,QAAQQ,SAC3BoZ,OAxDO,WACbrW,QAAQC,IAAI,SAIZ,IAHA,IAAI+X,EAAc,GACZC,EAAgBzb,EAAO8H,MAAM,EAAG,GAChC4T,EAAQvD,EAAWlY,QAAQQ,SAASJ,SACjCU,EAAI,EAAGA,EAAI0a,EAAc/b,OAAQqB,IACpC0a,EAAc1a,KAAO2a,EAAM3a,IAC7Bya,EAAYpP,KAAK,SACjB5I,QAAQC,IAAI,UAAWgY,EAAc1a,GAAI2a,EAAM3a,KACtC0a,EAAcT,SAASU,EAAM3a,KACtCya,EAAYpP,KAAK,QACjB5I,QAAQC,IAAI,WAAYgY,EAAc1a,GAAI2a,EAAM3a,MAEhDya,EAAYpP,KAAK,aACjB5I,QAAQC,IAAI,YAAagY,EAAc1a,GAAI2a,EAAM3a,KAGrDuZ,EAAUkB,GACVV,GAAU,GACVC,GAAc,GACdR,GAAe,IAqCTjB,OAAQA,EACRQ,UAAWA,EACXC,WAAYA,EACZ7L,QAASA,EACT2K,YAAaA,QCpCR8C,GA/EI,SAAH7b,GAAgD,IAA1CqY,EAAUrY,EAAVqY,WAAY+B,EAAapa,EAAboa,cAAehM,EAAOpO,EAAPoO,QACzC/N,EAAOwY,eAAPxY,GACNuB,EAAwCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7Cka,EAAYha,EAAA,GAAEia,EAAeja,EAAA,GACpCI,EAAgCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAxC8Z,EAAQ7Z,EAAA,GAAE8Z,EAAW9Z,EAAA,GAC5B+H,EAAwCrI,oBAAS,GAAMuI,EAAArI,YAAAmI,EAAA,GAAhDgS,EAAY9R,EAAA,GAAE+R,EAAe/R,EAAA,GACpCE,EAAsCzI,oBAAS,GAAK2I,EAAAzI,YAAAuI,EAAA,GAA7C8R,EAAW5R,EAAA,GAAE6R,EAAc7R,EAAA,GAC5B1B,EAAWC,YAAc,sBAC/B5B,qBAAU,WACRjC,YAAAC,cAAAC,MAAC,SAAAmD,IAAA,OAAApD,cAAAK,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACOK,EAAY3F,GAAIoD,MAAK,SAAC3C,GAC1Bib,EAAgBjb,MACf,KAAD,mBAAA0H,EAAAzC,UAAAwC,MAHJrD,KAKC,CAAC7E,IAYJ,OADAqD,QAAQC,IAAI,eAAgBmY,GAE1BxZ,eAACC,IAAI,CACHC,WAAS,EACTI,QAASkG,EAAW,GAAK,EACzBpG,WAAW,SACXC,eAAe,SACfF,UAAWqG,EAAW,MAAQ,SAASjG,SAAA,CAEtCuZ,GACC9kB,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACuR,GAAY,CAACxF,QAhBJ,W3BIlBlC,IAASM,MAAM,gB2BFb0a,GAAgB,GAChBE,GAAe,IAayBxV,MAAM,uBAG3CuV,GACC9kB,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACuR,GAAY,CAACxF,QA1BH,W3BMnBlC,IAASM,MAAM,e2BJbwa,GAAY,GACZI,GAAe,IAuB0BxV,MAAM,sBAI5CmV,GACC1kB,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRP,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElBvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACglB,KAAU,CAAClZ,QAAS0F,EAAW,KAAO,KAAMoI,MAAM,QAAOrO,SAAC,iBAI7DvL,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAACyQ,EAAc,CAAC7H,OAAQ4b,MAE1BxkB,cAACiL,IAAI,CAACO,MAAI,EAAC0E,MAAO,CAAEG,UAAW,OAAQ9E,SACrCvL,cAACmiB,GAAW,CAACrL,QAASA,EAASsL,OAAO,iBAK7CwC,GACC5kB,cAACiL,IAAI,CAACO,MAAI,EAAAD,SACRvL,cAAC6iB,GAAS,CACRja,OAAQ4b,EACRzD,WAAYA,EACZ+B,cAAeA,EACfhM,QAASA,U,yCC9DRQ,GAAkB2N,0BAClB9D,GAAkB8D,0BACzBC,GAAM,WACV,IAAMpO,EAAUqO,eAChB7a,EAAoCC,mBAAS5B,GAAc6B,EAAAC,YAAAH,EAAA,GAApDyW,EAAUvW,EAAA,GAAEsY,EAAatY,EAAA,GAChCI,EAAkCL,mBAChC5B,EAAcE,QAAQK,QAAQD,SAASyH,MAAM,EAAG,KACjD7F,EAAAJ,YAAAG,EAAA,GAFMiG,EAAShG,EAAA,GAAE+V,EAAY/V,EAAA,GAG9B+H,EAA4BrI,mB5BjBvB,SAAwB6a,GAC7B,IAAIC,EAAK9b,EAAO6b,GAGhB,OAFAvb,IAASM,MAAM,gBAAiB,CAAE4G,MAAO,IACzClH,IAASyb,OAAOC,UAAU,WAAY,GAC/BF,E4Ba8BG,CAAe,IAAG1S,EAAArI,YAAAmI,EAAA,GAAhD6S,EAAM3S,EAAA,GACbE,GADwBF,EAAA,GACYvI,mBAAS,IAAE2I,EAAAzI,YAAAuI,EAAA,GAAxCuE,EAAUrE,EAAA,GAAEwS,EAAaxS,EAAA,GAChCE,EAAgC7I,mBAAS,GAAE+I,EAAA7I,YAAA2I,EAAA,GAApCiD,EAAQ/C,EAAA,GAAEqS,EAAWrS,EAAA,GAC5BE,EAA8CjJ,mBAAS,IAAGmJ,EAAAjJ,YAAA+I,EAAA,GAAnD0N,EAAexN,EAAA,GAAEkS,EAAkBlS,EAAA,GAEpCmS,EAAejU,iBAAmB,MAExCkU,KAAQC,WADY,gBAiEpB,SAASC,EAAM7a,GACb,IAAM8a,EAAkBJ,EAAa/T,QACrC,IAAKmU,EAEH,OADA7Z,QAAQ8J,KAAK,6BACN,KAQT,IAAMnE,EAAQ,CAAEmU,EAAG,EAAGtH,EAAG,GACnBuH,EAAM,CAAED,EANI,UAAd/a,EACK,KAEC,IAGayT,EAAG,GAEpBwH,EAAUH,EAAII,WAAWtF,EAAWlY,QAAQK,QAAQD,SAAS,IAEnE,IAAKmd,EAEH,OADAha,QAAQ8J,KAAK,6BACN,KAOT,IAJA,IAAMoQ,EAAOF,EAAQG,UAAUxU,GAEzByU,EAAS,GAEN7c,EAAI,EAAGA,EAAI,GAAIA,IACtB6c,EAAOxR,KAAK,CACVkR,EAAGO,KAAeC,YAAY/c,EAAGoI,EAAMmU,EAAGC,EAAID,EAAG,IACjDtH,EAAG6H,KAAeC,YAAY/c,EAAGoI,EAAM6M,EAAGuH,EAAIvH,EAAG,MAGrD+H,EAAeL,EAAME,GAGvB,IAAMxF,EAAgB4F,aAAa,CACjCC,aAAc,WACZza,QAAQC,IAAI,eACZ2Z,EAAM,SAERc,cAAe,WACb1a,QAAQC,IAAI,gBACZ2Z,EAAM,YAIV,SAASW,EAAeL,EAAMS,GAC5BC,uBAAsB,WACpB,IAAMC,EAAcF,EAAOhS,QAC3BuR,EAAKY,KAAKD,GACNF,EAAOze,OACTqe,EAAeL,EAAMS,GAErBT,EAAKa,UAWX,OANAtX,qBAAU,WACRuX,OAAOC,iBAAiB,aAAa,SAAC7Y,GACpCA,EAAE8Y,sBAEH,IAGDtnB,cAAA,OAAAuL,SACEvL,cAACunB,KAAe,CACdC,UAjIY,SAAH9e,GAA8C,IAAD+e,EAAvCC,EAAWhf,EAAXgf,YAAatF,EAAM1Z,EAAN0Z,OAAQnD,EAAWvW,EAAXuW,YACxC,GAAKyI,IAKHA,EAAYrH,cAAgB+B,EAAO/B,aACnCqH,EAAYlY,QAAU4S,EAAO5S,OAF/B,CAMA,IAAMuC,EAAQgP,EAAWlY,QAAQuZ,EAAO/B,aAClCsH,EAAS5G,EAAWlY,QAAQ6e,EAAYrH,aAG9C,GAAItO,IAAU4V,EAAd,CAsBA,IAAMC,EAAgBC,MAAMC,KAAK/V,EAAM9I,UACvC2e,EAAc/D,OAAOzB,EAAO5S,MAAO,GACnC,IAAMuY,EAAQ9P,wBAAA,GACTlG,GAAK,IACR9I,SAAU2e,IAGNI,EAAiBH,MAAMC,KAAKH,EAAO1e,UACzC+e,EAAenE,OAAO6D,EAAYlY,MAAO,EAAGyP,GAC5C,IAAMgJ,EAAShQ,wBAAA,GACV0P,GAAM,IACT1e,SAAU+e,IAGNE,EAAOjQ,wBAAA,GACR8I,GAAU,IACblY,QAAOoP,wBAAA,GACF8I,EAAWlY,SAAO,IAAA4e,EAAA,GAAAU,YAAAV,EACpBM,EAAShf,GAAKgf,GAAQI,YAAAV,EACtBQ,EAAUlf,GAAKkf,GAASR,MAG7B3E,EAAcoF,OA5Cd,CACE,IAAME,EAAcP,MAAMC,KAAK/V,EAAM9I,UACrCmf,EAAYvE,OAAOzB,EAAO5S,MAAO,GACjC4Y,EAAYvE,OAAO6D,EAAYlY,MAAO,EAAGyP,GAEzC,IAAMoJ,EAASpQ,wBAAA,GACVlG,GAAK,IACR9I,SAAUmf,IAINF,EAAOjQ,wBAAA,GACR8I,GAAU,IACblY,QAAOoP,wBAAA,GACF8I,EAAWlY,SAAO,GAAAsf,YAAA,GACpBE,EAAUtf,GAAKsf,MAGpBvF,EAAcoF,MAiGZI,QAAS,CACP,SAACrC,GACCJ,EAAa/T,QAAUmU,IAEzB1a,SAEFvL,cAACsX,GAAgB/G,SAAQ,CACvBd,MAAO,CACL4G,SAAU,CAACA,EAAUsP,GACrBpO,WAAY,CAACA,EAAYmO,IACzBna,SAEFvL,cAACmhB,GAAgB5Q,SAAQ,CACvBd,MAAO,CAAEyR,gBAAiB,CAACA,EAAiB0E,IAAsBra,SAElEP,eAACud,KAAa,CAACC,MAAOjO,GAAShP,SAAA,CAC7BvL,cAAC0c,GAAM,CAAC5F,QAASA,IAEjB9W,cAACyoB,KAAK,CACJC,KAAK,QACLnd,SACEvL,cAAC8gB,GAAa,CACZC,WAAYA,EACZlQ,UAAWA,EACX+P,aAAcA,EACdkC,cAAeA,EACfhM,QAASA,EACTkK,cAAeA,MAIrBhhB,cAACyoB,KAAK,CAACC,KAAK,QAAOnd,SACjBvL,cAAC4W,GAAW,CACV/F,UAAWA,EACX+P,aAAcA,EACd9J,QAASA,EACTC,eAAgBV,MAGpBrW,cAACyoB,KAAK,CAACC,KAAK,WAAUnd,SACpBvL,cAAC4Q,EAAW,CACVC,UAAWA,EACX+P,aAAcA,EACd9P,OAAQ2U,MAGZzlB,cAACyoB,KAAK,CACJC,KAAK,aACLnd,SACEvL,cAACukB,GAAU,CACTxD,WAAYA,EACZ+B,cAAeA,EACfhM,QAASA,kBAoBd6R,GARI,WACjB,OACE3oB,cAAC4oB,KAAU,CAACC,SAAU,gBAAgBtd,SACpCvL,cAACklB,GAAG,OCrOV4D,IAASC,OAAO/oB,cAAC2oB,GAAU,IAAKK,SAASC,cAAc,W","file":"static/js/main.732f13d4.chunk.js","sourcesContent":["import {\r\n  BiAlarmOff,\r\n  BiHappyBeaming,\r\n  BsFillShieldLockFill,\r\n  BsFillStopwatchFill,\r\n  BsFillTreeFill,\r\n  BsFillUnlockFill,\r\n  BsMusicNoteBeamed,\r\n  BsPeace,\r\n  FaChild,\r\n  FaFistRaised,\r\n  FaHandshake,\r\n  FaPiggyBank,\r\n  FaRegKissWinkHeart,\r\n  FaTools,\r\n  FiTarget,\r\n  GiBreakingChain,\r\n  GiChoice,\r\n  GiClothes,\r\n  GiCrossedSwords,\r\n  GiFlyingFlag,\r\n  GiGearHammer,\r\n  GiGlowingHands,\r\n  GiHeartInside,\r\n  GiHeartKey,\r\n  GiMedallist,\r\n  GiMountainClimbing,\r\n  GiMountainRoad,\r\n  GiNightSleep,\r\n  GiPalette,\r\n  GiPillow,\r\n  GiSplitArrows,\r\n  GrLineChart,\r\n  HiOutlineScale,\r\n  HiPuzzle,\r\n  MdAccessTime,\r\n  MdConnectWithoutContact,\r\n  MdFamilyRestroom,\r\n  MdFitnessCenter,\r\n  MdLeaderboard,\r\n  MdMenuBook,\r\n  MdOutlineThumbsUpDown,\r\n  MdOutlineVerifiedUser,\r\n  MdPsychology,\r\n  MdSocialDistance,\r\n  MdSportsSoccer,\r\n  MdVolunteerActivism,\r\n  RiEmotionSadLine,\r\n  RiGovernmentLine,\r\n  RiUserHeartFill,\r\n  SiHandshake,\r\n  GiLion,\r\n  RiErrorWarningFill,\r\n  FaGrinStars,\r\n  FaThumbsDown,\r\n  GiSittingDog,\r\n  FaUserGraduate,\r\n  GiMeditation,\r\n  FaShapes,\r\n  BiGlasses,\r\n  BsQuestionCircle,\r\n  AiOutlineOrderedList,\r\n  GiFireworkRocket,\r\n  MdBathtub,\r\n  GiBinoculars,\r\n  FaRegSmileBeam,\r\n  FaDoorOpen,\r\n  GiPencilBrush,\r\n  GiButterfly,\r\n} from \"react-icons/all\";\r\n\r\nconst allTraits = [\r\n  \"Adventure\",\r\n  \"Ambition\",\r\n  \"Athleticism\",\r\n  \"Artistry\",\r\n  \"Boldness\",\r\n  \"Caution\",\r\n  \"Charisma\",\r\n  \"Confrontation\",\r\n  \"Contentment\",\r\n  \"Craftsmanship\",\r\n  \"Creativity\",\r\n  \"Decisiveness\",\r\n  \"Detachment\",\r\n  \"Discipline\",\r\n  \"Empathy\",\r\n  \"Enthusiasm\",\r\n  \"Flexibility\",\r\n  \"Frugality\",\r\n  \"Independence\",\r\n  \"Ingenuity\",\r\n  \"Musical Skill\",\r\n  \"Loyality\",\r\n  \"Open-mindedness\",\r\n  \"Optimism\",\r\n  \"Patience\",\r\n  \"Perseverance\",\r\n  \"Personal Space\",\r\n  \"Physical Appearance\",\r\n  \"Realism\",\r\n  \"Romance\",\r\n  \"Self-care\",\r\n  \"Spirituality\",\r\n  \"Simplicity\",\r\n  \"Teachability\",\r\n  \"Vision\",\r\n  \"Vulnerability\",\r\n];\r\n\r\nexport const traitIcons = {\r\n  \"Guess the traits\": <BsQuestionCircle />,\r\n  \"Show the traits\": <AiOutlineOrderedList />,\r\n  Artistry: <GiPalette />,\r\n  \"Musical Skill\": <BsMusicNoteBeamed />,\r\n  Leadership: <GiFlyingFlag />,\r\n  Excellence: <MdLeaderboard />,\r\n  \"Self Control\": <MdPsychology />,\r\n  \"Physical Appearance\": <GiClothes />,\r\n  Independence: <GiBreakingChain />,\r\n  Flexibility: <GiSplitArrows />,\r\n  \"Personal Space\": <MdSocialDistance />,\r\n  Rest: <GiNightSleep />,\r\n  Kindness: <RiUserHeartFill />,\r\n  Recreation: <MdSportsSoccer />,\r\n  Strength: <MdFitnessCenter />,\r\n  Wisdom: <MdMenuBook />,\r\n  Empathy: <MdConnectWithoutContact />,\r\n  Trust: <SiHandshake />,\r\n  Spontaneity: <BiAlarmOff />,\r\n  Adventure: <GiMountainRoad />,\r\n  Integrity: <MdOutlineVerifiedUser />,\r\n  Generosity: <MdVolunteerActivism />,\r\n  Patience: <MdAccessTime />,\r\n  Perseverance: <GiMountainClimbing />,\r\n  Mercy: <GiGlowingHands />,\r\n  Romance: <GiHeartInside />,\r\n  Athleticism: <GiMedallist />,\r\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\r\n  Productivity: <GiGearHammer />,\r\n  Nature: <BsFillTreeFill />,\r\n  Peace: <BsPeace />,\r\n  Determination: <FaFistRaised />,\r\n  Resourcefulness: <HiPuzzle />,\r\n  Authority: <RiGovernmentLine />,\r\n  Hope: <GiHeartKey />,\r\n  Challenge: <GiCrossedSwords />,\r\n  Decisiveness: <GiChoice />,\r\n  Comfort: <GiPillow />,\r\n  Joy: <BiHappyBeaming />,\r\n  Fairness: <HiOutlineScale />,\r\n  Affection: <FaRegKissWinkHeart />,\r\n  Confidence: <BsFillShieldLockFill />,\r\n  Respect: <FaHandshake />,\r\n  Discipline: <BsFillStopwatchFill />,\r\n  Frugality: <FaPiggyBank />,\r\n  Suffering: <RiEmotionSadLine />,\r\n  \"Child-likeness\": <FaChild />,\r\n  Optimism: <GrLineChart />,\r\n  Ambition: <FiTarget />,\r\n  Craftsmanship: <FaTools />,\r\n  Vulnerability: <BsFillUnlockFill />,\r\n  Family: <MdFamilyRestroom />,\r\n  Boldness: <GiLion />,\r\n  Caution: <RiErrorWarningFill />,\r\n  Confrontation: <GiCrossedSwords />,\r\n  Charisma: <FaGrinStars />,\r\n  Ingenuity: <HiPuzzle />,\r\n  Teachability: <FaUserGraduate />,\r\n  Pessimism: <FaThumbsDown />,\r\n  Loyality: <GiSittingDog />,\r\n  \"Self-Improvement\": <GiMeditation />,\r\n  Creativity: <GiPencilBrush />,\r\n  Realism: <BiGlasses />,\r\n  Enthusiasm: <GiFireworkRocket />,\r\n  \"Self-care\": <MdBathtub />,\r\n  Spirituality: <GiMeditation />,\r\n  Detachment: <GiButterfly />,\r\n  Vision: <GiBinoculars />,\r\n  Simplicity: <FaShapes />,\r\n  \"Open-mindedness\": <FaDoorOpen />,\r\n  Contentment: <FaRegSmileBeam />,\r\n};\r\nexport default allTraits;\r\n","export default function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import traits from \"../../utils/listOfAllTraits\";\r\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\n\r\nconst initialTraits = {\r\n  traits,\r\n  columns: {\r\n    column1: {\r\n      id: \"column1\",\r\n      title: \"Not Valued\",\r\n      traitIds: [],\r\n    },\r\n    column2: {\r\n      id: \"column2\",\r\n      title: \"Traits\",\r\n      traitIds: shuffle(listOfAllTraits),\r\n    },\r\n    column3: {\r\n      id: \"column3\",\r\n      title: \"Valued\",\r\n      traitIds: [],\r\n    },\r\n    guessing: {\r\n      id: \"guessing\",\r\n      title: \"guessing\",\r\n      traitIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\r\n};\r\nexport default initialTraits;\r\n","export default function makeId(length) {\r\n  let result = \"\";\r\n  const characters = \"0123456789\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import mixpanel from \"mixpanel-browser\";\r\nimport LogRocket from \"logrocket\";\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\r\nLogRocket.init(\"zwugvl/trait-ranker\");\r\n\r\nLogRocket.getSessionURL(function (sessionURL) {\r\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\r\n});\r\n\r\nexport function makeAndTrackId(len) {\r\n  let Id = makeId(len);\r\n  mixpanel.track(\"Session Start\", { steps: 1 });\r\n  mixpanel.people.increment(\"sessions\", 1);\r\n  return Id;\r\n}\r\n\r\nexport function trackRankingPage(topTraits) {\r\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\r\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\r\n}\r\nexport function trackResultsPage(topTraits) {\r\n  mixpanel.track(\"Results Step\", { steps: 3 });\r\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\r\n}\r\nexport function trackShare() {\r\n  mixpanel.track(\"Shared\");\r\n}\r\nexport function trackShowTraits() {\r\n  mixpanel.track(\"Show Traits\");\r\n}\r\nexport function trackGuessTraits() {\r\n  mixpanel.track(\"Guess Traits\");\r\n}\r\nexport function trackGuessed(guesses) {\r\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\r\n}\r\nexport function trackShareConversion(source) {\r\n  mixpanel.track(\"Share Conversion\", { Source: source });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport {trackShare} from \"../utils/mixpanel\"\r\n\r\nconst CopyableLink = ({ text }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const onCopy = () => {\r\n    trackShare();\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          text: \"Take a look at my most valued traits\",\r\n          url: text,\r\n        })\r\n        .then(() => console.log(\"successful share\"))\r\n        .catch((error) => console.log(\"error sharing\", error));\r\n    } else {\r\n      navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => console.log(\"Copied!\"))\r\n        .catch(() => console.log(\"Copy failed\"));\r\n      setShowTooltip(true);\r\n      setShowLink(true);\r\n    }\r\n  };\r\n  const onTipClose = () => {\r\n    setShowTooltip(false);\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Tooltip\r\n          title={\"Copied to clipboard!\"}\r\n          open={showTooltip}\r\n          leaveDelay={1000}\r\n          onClose={onTipClose}\r\n        >\r\n          <Button variant=\"contained\" onClick={onCopy}>\r\n            Share\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      {showLink && (\r\n        <Grid item>\r\n          <InputLabel>{text}</InputLabel>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default CopyableLink;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\r\n  authDomain: \"trait-ranker.firebaseapp.com\",\r\n  projectId: \"trait-ranker\",\r\n  storageBucket: \"trait-ranker.appspot.com\",\r\n  messagingSenderId: \"387696334301\",\r\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\r\n  measurementId: \"G-K0FPHGRC6R\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function getHash(len) {\r\n  let timeout = false;\r\n  while (timeout === false) {\r\n    const hash = makeId(len);\r\n    const docRef = doc(db, hash);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      console.log(\"repeat hash\");\r\n    } else {\r\n      console.log(\"hash \" + hash);\r\n      return hash;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDBTraits(hash, traitArray) {\r\n  await setDoc(doc(db, \"Traits\", hash), {\r\n    traits: traitArray,\r\n  }).catch((e) => {\r\n    console.log(e);\r\n  });\r\n  console.log(doc(db, \"Traits\", hash), traitArray);\r\n}\r\n\r\nexport async function getDBTraits(hash) {\r\n  const docRef = doc(db, \"Traits\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    const traits = docSnap.data().traits;\r\n    console.log(traits);\r\n    return traits;\r\n  } else {\r\n    console.log(\"no doc\");\r\n  }\r\n}\r\n\r\nexport async function setDBProgress(hash, progress) {\r\n  await setDoc(doc(db, \"Progress\", hash), progress).catch((e) => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\nexport async function getDBProgress(hash) {\r\n  const docRef = doc(db, \"Progress\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    return docSnap.data();\r\n  } else {\r\n    console.log(\"No stored progress found\");\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Grid } from \"@mui/material\";\r\nimport { traitIcons } from \"../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst FlipCard = ({ trait, index }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [flip, setFlip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(true);\r\n      setTimeout(() => setValue(trait), 500);\r\n    }, index * 500);\r\n  });\r\n  return (\r\n    <Card className={`wideCard ${flip && \"flip\"}`} style={{ margin: \".5vw\" }}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          style={{ marginTop: \"-8vw\" }} //for some reason this is the only thing I could vertically center content with\r\n        >\r\n          <Grid item>\r\n            <IconContext.Provider value={{ size: \"9vw\" }}>\r\n              {traitIcons[value]}\r\n            </IconContext.Provider>\r\n          </Grid>\r\n          <Grid item>\r\n            <h3>{value}</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FlipCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nconst SmallTraitList = ({ traits }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      {traits.slice(0, 7).map((trait, index) => {\r\n        return (\r\n          <Grid item>\r\n            <FlipCard trait={trait} index={index} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SmallTraitList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport makeId from \"../utils/makeIdUtil\";\r\nimport CopyableLink from \"./CopyableLink\";\r\nimport { setDBTraits } from \"../utils/Firebase\";\r\nimport SmallTraitList from \"./SmallTraitList\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { trackResultsPage } from \"../utils/mixpanel\";\r\n\r\nconst ResultsPage = ({ topTraits, userID }) => {\r\n  useEffect(() => {\r\n    trackResultsPage(topTraits);\r\n    (async () => {\r\n      console.log(\"setting traits\", topTraits);\r\n      await setDBTraits(userID, topTraits);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Grid item>\r\n        <h3>Top Traits</h3>\r\n      </Grid>\r\n      <Grid item>\r\n        <SmallTraitList traits={topTraits.reverse()} />\r\n      </Grid>\r\n      <Grid item sx={{ padding: \"1rem\" }}>\r\n        <CopyableLink\r\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\r\n\r\nconst RankingTrait = ({ trait, onClick }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  const rippleRef = React.useRef(null);\r\n  const onRippleStart = (e) => {\r\n    rippleRef.current.start(e);\r\n  };\r\n  const onRippleStop = (e) => {\r\n    rippleRef.current.stop(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card rankCard\"\r\n      onClick={onClick}\r\n      onMouseDown={onRippleStart}\r\n      onMouseUp={onRippleStop}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n      <h1>{trait}</h1>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"20vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n        </Grid>\r\n      </Grid>\r\n      <TouchRipple ref={rippleRef} center={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTrait;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useMergeSort(initialTraits, initialState = null) {\r\n  // Constants\r\n  const TOP_K = 7;\r\n\r\n  // State Variables\r\n  const [currentMatch, setCurrentMatch] = useState(\r\n    initialState?.currentMatch || null\r\n  );\r\n  const [currentStanding, setCurrentStanding] = useState(\r\n    initialState?.currentStanding || []\r\n  );\r\n  const [isComplete, setIsComplete] = useState(\r\n    initialState?.isComplete || false\r\n  );\r\n  const [progressPercent, setProgressPercent] = useState(\r\n    initialState?.progressPercent || 0\r\n  );\r\n  const [comparisonStack, setComparisonStack] = useState(\r\n    initialState?.comparisonStack || []\r\n  );\r\n  const [mergeStack, setMergeStack] = useState(initialState?.mergeStack || []);\r\n  const [totalComparisons, setTotalComparisons] = useState(\r\n    initialState?.totalComparisons || 0\r\n  );\r\n  const [comparisonsMade, setComparisonsMade] = useState(\r\n    initialState?.comparisonsMade || 0\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!initialState) {\r\n      initializeSort(initialTraits);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [initialTraits]);\r\n\r\n  function initializeSort(traitList) {\r\n    if (!traitList || traitList.length === 0) {\r\n      setIsComplete(true);\r\n      setProgressPercent(100);\r\n      setCurrentStanding([]);\r\n      setCurrentMatch(null);\r\n      return;\r\n    }\r\n\r\n    // Initialize merge stack with individual traits\r\n    const initialSublists = traitList.map((trait) => [trait]);\r\n\r\n    setMergeStack([initialSublists]);\r\n    setTotalComparisons(calculateTotalComparisons(traitList.length));\r\n    setComparisonsMade(0);\r\n    setProgressPercent(0);\r\n    setIsComplete(false);\r\n    setCurrentStanding([]);\r\n\r\n    prepareNextComparison([initialSublists], []);\r\n  }\r\n\r\n  function prepareNextComparison(currentMergeStack, currentComparisonStack) {\r\n    if (\r\n      currentMergeStack.length === 1 &&\r\n      currentMergeStack[0].length === 1 &&\r\n      currentComparisonStack.length === 0\r\n    ) {\r\n      // Only one sublist remains and no pending comparisons\r\n      finalizeSort(currentMergeStack);\r\n      return;\r\n    }\r\n\r\n    const currentLevel = currentMergeStack[currentMergeStack.length - 1];\r\n\r\n    // If the current level has no sublists, pop it and move to the next level\r\n    if (currentLevel.length === 0) {\r\n      currentMergeStack.pop();\r\n      setMergeStack([...currentMergeStack]);\r\n      prepareNextComparison(currentMergeStack, currentComparisonStack);\r\n      return;\r\n    }\r\n\r\n    // If the current level has only one sublist, move it up to the next level\r\n    if (currentLevel.length === 1) {\r\n      const mergedSublist = currentLevel.shift();\r\n\r\n      currentMergeStack.pop();\r\n\r\n      if (currentMergeStack.length === 0) {\r\n        // Sorting complete\r\n        setCurrentStanding(mergedSublist.slice(0, TOP_K));\r\n        setIsComplete(true);\r\n        setProgressPercent(100);\r\n        setCurrentMatch(null);\r\n        return;\r\n      } else {\r\n        // Add merged sublist to the next level\r\n        if (!currentMergeStack[currentMergeStack.length - 1]) {\r\n          currentMergeStack.push([]);\r\n        }\r\n        const nextLevel = currentMergeStack[currentMergeStack.length - 1];\r\n        nextLevel.push(mergedSublist);\r\n        setMergeStack([...currentMergeStack]);\r\n        prepareNextComparison(currentMergeStack, currentComparisonStack);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Get the first two sublists to merge\r\n    const leftSublist = currentLevel.shift();\r\n    const rightSublist = currentLevel.shift();\r\n\r\n    // Initialize the merged sublist\r\n    const mergedSublist = [];\r\n\r\n    // Push the current merge context onto the comparison stack\r\n    currentComparisonStack.push({\r\n      leftSublist,\r\n      rightSublist,\r\n      mergedSublist,\r\n      leftIndex: 0,\r\n      rightIndex: 0,\r\n    });\r\n\r\n    setMergeStack([...currentMergeStack]);\r\n    setComparisonStack([...currentComparisonStack]);\r\n\r\n    // Start the first comparison\r\n    getNextComparison(currentComparisonStack);\r\n  }\r\n\r\n  function getNextComparison(currentComparisonStack) {\r\n    const currentMerge =\r\n      currentComparisonStack[currentComparisonStack.length - 1];\r\n\r\n    if (!currentMerge) {\r\n      // No more comparisons\r\n      prepareNextComparison(mergeStack, currentComparisonStack);\r\n      return;\r\n    }\r\n\r\n    const { leftSublist, rightSublist, leftIndex, rightIndex } = currentMerge;\r\n\r\n    const leftTrait =\r\n      leftSublist && leftIndex < leftSublist.length\r\n        ? leftSublist[leftIndex]\r\n        : null;\r\n    const rightTrait =\r\n      rightSublist && rightIndex < rightSublist.length\r\n        ? rightSublist[rightIndex]\r\n        : null;\r\n\r\n    if (leftTrait && rightTrait) {\r\n      setCurrentMatch({ left: leftTrait, right: rightTrait });\r\n    } else {\r\n      // Add any remaining traits to merged sublist\r\n      if (leftIndex < leftSublist.length) {\r\n        currentMerge.mergedSublist.push(...leftSublist.slice(leftIndex));\r\n      }\r\n      if (rightIndex < rightSublist.length) {\r\n        currentMerge.mergedSublist.push(...rightSublist.slice(rightIndex));\r\n      }\r\n\r\n      // Remove current merge from stack\r\n      currentComparisonStack.pop();\r\n      setComparisonStack([...currentComparisonStack]);\r\n\r\n      // Add merged sublist to the next level\r\n      addMergedSublistToNextLevel(currentMerge.mergedSublist, mergeStack);\r\n\r\n      // Continue with next comparison\r\n      prepareNextComparison(mergeStack, currentComparisonStack);\r\n    }\r\n  }\r\n\r\n  function matchWin(winner) {\r\n    const currentComparisonStack = [...comparisonStack];\r\n    const currentMerge =\r\n      currentComparisonStack[currentComparisonStack.length - 1];\r\n\r\n    if (!currentMerge) {\r\n      console.warn(\"matchWin called after sorting is complete\");\r\n      return;\r\n    }\r\n\r\n    const { leftSublist, rightSublist, mergedSublist, leftIndex, rightIndex } =\r\n      currentMerge;\r\n\r\n    const leftTrait = leftSublist && leftSublist[leftIndex];\r\n    const rightTrait = rightSublist && rightSublist[rightIndex];\r\n\r\n    // Add the winner to the merged sublist\r\n    mergedSublist.push(winner);\r\n\r\n    // Increment index of the winning trait's sublist\r\n    if (leftSublist && winner === leftTrait) {\r\n      currentMerge.leftIndex += 1;\r\n    } else if (rightSublist && winner === rightTrait) {\r\n      currentMerge.rightIndex += 1;\r\n    }\r\n\r\n    setComparisonStack(currentComparisonStack);\r\n\r\n    // Update comparisons made\r\n    setComparisonsMade((prev) => prev + 1);\r\n    updateProgress();\r\n\r\n    // Prepare the next comparison\r\n    getNextComparison(currentComparisonStack);\r\n  }\r\n\r\n  function addMergedSublistToNextLevel(mergedSublist, currentMergeStack) {\r\n    // Ensure the next level exists\r\n    if (currentMergeStack.length === 1) {\r\n      currentMergeStack.unshift([]);\r\n    }\r\n\r\n    const nextLevelIndex = currentMergeStack.length - 2;\r\n    const nextLevel = currentMergeStack[nextLevelIndex];\r\n    nextLevel.push(mergedSublist);\r\n\r\n    if (currentMergeStack[currentMergeStack.length - 1].length === 0) {\r\n      // Current level merges are complete, move to next level\r\n      currentMergeStack.pop();\r\n    }\r\n\r\n    setMergeStack([...currentMergeStack]);\r\n  }\r\n  function finalizeSort(currentMergeStack) {\r\n    let finalList = [];\r\n\r\n    if (currentMergeStack.length > 0 && currentMergeStack[0].length > 0) {\r\n      finalList = currentMergeStack[0][0];\r\n    }\r\n\r\n    console.log(\"Final list:\", finalList);\r\n\r\n    setCurrentStanding(finalList.slice(0, TOP_K));\r\n    setIsComplete(true);\r\n    setProgressPercent(100);\r\n    setCurrentMatch(null);\r\n  }\r\n\r\n  function updateProgress() {\r\n    const progress = Math.min((comparisonsMade / totalComparisons) * 100, 100);\r\n    setProgressPercent(progress);\r\n  }\r\n\r\n  function calculateTotalComparisons(n) {\r\n    let totalComparisons = 0;\r\n    let levelSize = 1;\r\n\r\n    while (levelSize < n) {\r\n      totalComparisons += Math.ceil(n / (2 * levelSize)) * levelSize;\r\n      levelSize *= 2;\r\n    }\r\n\r\n    return totalComparisons;\r\n  }\r\n\r\n  function revertMatch() {\r\n    if (comparisonStack.length === 0) {\r\n      console.warn(\"No moves to revert\");\r\n      return;\r\n    }\r\n\r\n    const currentComparisonStack = [...comparisonStack];\r\n    const currentMerge =\r\n      currentComparisonStack[currentComparisonStack.length - 1];\r\n\r\n    const { mergedSublist } = currentMerge;\r\n\r\n    // Remove the last selected trait\r\n    mergedSublist.pop();\r\n\r\n    // Decrement comparisons made\r\n    setComparisonsMade((prev) => (prev > 0 ? prev - 1 : 0));\r\n    updateProgress();\r\n\r\n    // Decrement index of the last move\r\n    if (currentMerge.leftIndex > 0) {\r\n      currentMerge.leftIndex -= 1;\r\n    } else if (currentMerge.rightIndex > 0) {\r\n      currentMerge.rightIndex -= 1;\r\n    }\r\n\r\n    setComparisonStack(currentComparisonStack);\r\n\r\n    // Set isComplete to false if it was true\r\n    if (isComplete) {\r\n      setIsComplete(false);\r\n      setProgressPercent((comparisonsMade / totalComparisons) * 100);\r\n    }\r\n\r\n    // Restore currentMatch\r\n    const leftTrait = currentMerge.leftSublist[currentMerge.leftIndex] || null;\r\n    const rightTrait =\r\n      currentMerge.rightSublist[currentMerge.rightIndex] || null;\r\n\r\n    if (leftTrait && rightTrait) {\r\n      setCurrentMatch({ left: leftTrait, right: rightTrait });\r\n    } else {\r\n      // If no traits left to compare, move back to previous merge\r\n      currentComparisonStack.pop();\r\n      setComparisonStack(currentComparisonStack);\r\n      prepareNextComparison(mergeStack, currentComparisonStack);\r\n    }\r\n  }\r\n  const rankingState = {\r\n    currentMatch,\r\n    currentStanding,\r\n    isComplete,\r\n    progressPercent,\r\n    comparisonStack,\r\n    mergeStack,\r\n    totalComparisons,\r\n    comparisonsMade,\r\n  };\r\n\r\n  return {\r\n    progressPercent,\r\n    currentStanding,\r\n    currentMatch,\r\n    matchWin,\r\n    revertMatch,\r\n    isComplete,\r\n    rankingState,\r\n  };\r\n}\r\n\r\nexport default useMergeSort;\r\n","import React, { useContext, useEffect, useMemo } from \"react\";\r\nimport RankingTrait from \"./TraitCards/RankingTrait\";\r\nimport { Grid, useMediaQuery, Button } from \"@mui/material\";\r\nimport { ProgressContext } from \"./App\";\r\nimport useMergeSort from \"../utils/useMergeSort\";\r\n\r\nconst RankingPage = ({ topTraits, history, initalProgress }) => {\r\n  // Memoize topTraits to prevent unnecessary re-initialization\r\n  const memoizedTopTraits = useMemo(() => topTraits.slice(), [topTraits]);\r\n  useEffect(() => {\r\n    console.log(\"Memoized topTraits:\", memoizedTopTraits);\r\n  }, [memoizedTopTraits]);\r\n\r\n  const { progressPercent, currentMatch, matchWin, revertMatch, isComplete } =\r\n    useMergeSort(memoizedTopTraits, initalProgress?.data?.ranking);\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n\r\n  const handleRoundWin = (trait) => {\r\n    matchWin(trait);\r\n    setProgressState(progressPercent);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"isComplete:\", isComplete);\r\n    if (isComplete) {\r\n      setActiveStepState(3);\r\n      history.push(\"/Results\");\r\n    }\r\n  }, [isComplete]);\r\n\r\n  const handleRevertMatch = () => {\r\n    revertMatch();\r\n    setProgressState(progressPercent);\r\n  };\r\n\r\n  // Ensure topTraits is populated before rendering\r\n  if (!topTraits || topTraits.length === 0) {\r\n    return <div>Loading traits...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={isMobile ? 60 : 3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        direction={isMobile ? \"row\" : \"column\"}\r\n      >\r\n        {currentMatch && currentMatch.left && (\r\n          <Grid item>\r\n            <RankingTrait\r\n              trait={currentMatch.left}\r\n              onClick={() => handleRoundWin(currentMatch.left)}\r\n            />\r\n          </Grid>\r\n        )}\r\n        {currentMatch && currentMatch.right && (\r\n          <Grid item>\r\n            <RankingTrait\r\n              trait={currentMatch.right}\r\n              onClick={() => handleRoundWin(currentMatch.right)}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n","import React, { forwardRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst HelpDialogBox = ({ currentPage }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [grow, setGrow] = React.useState(false);\r\n\r\n  const doGrow = () => {\r\n    setGrow(true);\r\n    setTimeout(() => {\r\n      setGrow(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    doGrow();\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  const helpData = {\r\n    Selection: {\r\n      title: \"Selection\",\r\n      description: `Trait Ranker helps you discover and prioritize your most important personality traits. ${\r\n        isMobile ? \"Drag\" : \"Swipe \"\r\n      } right to mark a trait as valuable or left to skip it. Press the help button anytime for guidance.`,\r\n      Media: \"https://i.imgur.com/7G5Jwbk.gif\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        size=\"large\"\r\n        onClick={handleOpen}\r\n        className={`${grow && \"grow\"}`}\r\n      >\r\n        <HelpOutlineIcon />\r\n      </IconButton>\r\n\r\n      <Dialog\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        open={open}\r\n        fullScreen\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          marginLeft: \"1vw\",\r\n          marginRight: \"1vw\",\r\n        }}\r\n        PaperProps={{\r\n          style: { borderTopLeftRadius: 6, borderTopRightRadius: 6 },\r\n        }}\r\n      >\r\n        <DialogTitle>{helpData[\"Selection\"].title}</DialogTitle>\r\n        <IconButton\r\n          style={{ position: \"absolute\", right: \"0\" }}\r\n          color=\"inherit\"\r\n          onClick={handleClose}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContentText paragraph={false} style={{ margin: 10 }}>\r\n          {helpData[\"Selection\"].description}\r\n        </DialogContentText>\r\n        <img\r\n          src={helpData[\"Selection\"].Media}\r\n          style={{ width: \"100%\" }}\r\n          alt=\"GIF of swiping on mobile\"\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialogBox;\r\n","export default __webpack_public_path__ + \"static/media/logo512.3b8a96fd.png\";","import React from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport logo512 from \"../../Assets/logo512.png\";\r\n\r\nconst HomeButton = ({ history }) => {\r\n  const handleHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <IconButton\r\n      color=\"inherit\"\r\n      onClick={handleHome}\r\n      style={{ maxWidth: \"10vh\", maxHeight: \"10vh\" }}\r\n    >\r\n      <img\r\n        src={logo512}\r\n        alt=\"The trait ranker icon\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    </IconButton>\r\n  );\r\n};\r\nexport default HomeButton;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nconst appTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#caf0f9\",\r\n    },\r\n    secondary: {\r\n      main: \"#90e0ef\",\r\n    },\r\n  },\r\n});\r\nexport default appTheme;\r\n","//Taken from https://stackoverflow.com/questions/65042023/how-to-do-an-stepper-with-progress-bars-material-ui\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport styled from \"@emotion/styled\";\r\nimport CompareArrowsOutlinedIcon from \"@mui/icons-material/CompareArrowsOutlined\";\r\nimport SortOutlinedIcon from \"@mui/icons-material/SortOutlined\";\r\nimport WorkspacePremiumOutlinedIcon from \"@mui/icons-material/WorkspacePremiumOutlined\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport appTheme from \"../../style/appTheme\";\r\n\r\nfunction CustomStepper(props) {\r\n  const StyledStepper = styled(\"ul\")({\r\n    display: \"flex\",\r\n    flexFlow: \"row nowrap\",\r\n    justifyContent: \"space-around\",\r\n    padding: 0,\r\n    width: \"100%\",\r\n  });\r\n  const StyledStepperStep = styled(\"li\")({\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexFlow: \"row nowrap\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  });\r\n  const StyledStepperStepIndex = styled(\"div\")(({ currentStep, done }) => ({\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    lineHeight: \"30px\",\r\n    borderRadius: \"50%\",\r\n    background:\r\n      currentStep || done ? appTheme.palette.secondary.main : \"#dedede\",\r\n    color: currentStep || done ? \"#000\" : \"#999\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledLabelContainer = styled(\"div\")({\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"center\",\r\n  });\r\n\r\n  const { steps, current, progress } = props;\r\n\r\n  const theme = useTheme();\r\n  function StepContent({ done, index }) {\r\n    return done ? \"✓\" : index + 1;\r\n  }\r\n\r\n  const ProgressBar = ({ current, step, progress }) => {\r\n    console.log(progress);\r\n    let value = 0;\r\n    if (current + 1 === step) {\r\n      value = progress;\r\n    } else if (current >= step) {\r\n      value = 100;\r\n    }\r\n\r\n    return (\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={value}\r\n        sx={{\r\n          \"&.MuiLinearProgress-root\": {\r\n            flex: \"1 1 auto\",\r\n            position: \"absolute\",\r\n            top: 12,\r\n            left: \"calc(-50% + 20px)\",\r\n            right: \"calc(50% + 20px)\",\r\n            backgroundColor: \"#ffd8ba61\",\r\n          },\r\n          \"& .MuiLinearProgress-bar\": {\r\n            backgroundColor: appTheme.palette.secondary.main,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function getStepIcon(currentStep) {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <CompareArrowsOutlinedIcon />;\r\n      case 1:\r\n        return <SortOutlinedIcon />;\r\n      case 2:\r\n        return <WorkspacePremiumOutlinedIcon />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function renderStep(label, key) {\r\n    const { current, progress } = this;\r\n    const done = key < current;\r\n    const currentStep = key === current;\r\n    return (\r\n      <StyledStepperStep key={key}>\r\n        <StyledLabelContainer>\r\n          <StyledStepperStepIndex currentStep={currentStep} done={done}>\r\n            {getStepIcon(key)}\r\n          </StyledStepperStepIndex>\r\n        </StyledLabelContainer>\r\n        {!!key && (\r\n          <ProgressBar current={current} step={key} progress={progress} />\r\n        )}\r\n      </StyledStepperStep>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledStepper>\r\n      {steps.map(renderStep, { current, progress })}\r\n    </StyledStepper>\r\n  );\r\n}\r\n\r\nCustomStepper.propTypes = {\r\n  steps: PropTypes.array.isRequired,\r\n  current: PropTypes.number.isRequired,\r\n  progress: PropTypes.number,\r\n};\r\n\r\nexport default CustomStepper;\r\n","import React, { useContext } from \"react\";\r\nimport { AppBar, Box, Toolbar } from \"@mui/material\";\r\n\r\nimport HelpDialogBox from \"./HelpDialogBox\";\r\nimport HomeButton from \"./HomeButton\";\r\nimport CustomStepper from \"./CustomStepper\";\r\nimport { ProgressContext } from \"../App\";\r\nconst steps = [\"Label 1\", \"Label 2\", \"Label 3\"];\r\nconst NavBar = ({ history }) => {\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <HomeButton history={history} />\r\n          <CustomStepper\r\n            steps={steps}\r\n            current={activeStepState}\r\n            progress={progressState}\r\n          />\r\n          <div style={{ marginLeft: \"auto\" }}>\r\n            <HelpDialogBox />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport FlipIcon from \"@mui/icons-material/Flip\";\r\n\r\nconst CardHelp = ({ toggleFlipped, flipped }) => {\r\n  return (\r\n    <IconButton\r\n      onClick={toggleFlipped}\r\n      style={{ position: \"absolute\", top: 10, right: 10 }}\r\n    >\r\n      {flipped ? <FlipIcon /> : <HelpOutlineIcon />}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default CardHelp;\r\n","// SelectionTrait.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\nimport CardHelp from \"./CardHelp\";\r\n\r\nconst SelectionTrait = ({ trait, provided }) => {\r\n  const isMobile = useMediaQuery(\"(max-width:1024px)\");\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const toggleFlipped = () => {\r\n    setFlipped(!flipped);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card selection ${flipped ? \"flipped\" : \"\"}`}\r\n      {...provided.dragHandleProps}\r\n      draggable={true}\r\n      id={trait}\r\n    >\r\n      <div className=\" card-inner\">\r\n        {/* Front Side */}\r\n        <div className=\"card-front\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconContext.Provider\r\n                value={isMobile ? { size: \"60vw\" } : { size: \"6vw\" }}\r\n              >\r\n                {traitIcons[trait]}\r\n              </IconContext.Provider>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/* Back Side */}\r\n        <div className=\"card-back\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <p>Lorem ipsum dolor sit amet.</p>\r\n              <p>Consectetur adipiscing elit sed.</p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionTrait;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport SelectionTrait from \"./SelectionTrait\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\r\n  if (style?.transform) {\r\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\r\n    return {\r\n      ...style,\r\n      transform: axisLockX,\r\n    };\r\n  }\r\n  return style;\r\n};\r\n\r\nfunction getStyle(style, snapshot) {\r\n  style = draggingCustomStyle(style);\r\n  if (!snapshot.isDropAnimating) {\r\n    return style;\r\n  }\r\n  const { moveTo, duration } = snapshot.dropAnimation;\r\n  const draggingOver = snapshot.draggingOver;\r\n  console.log(draggingOver);\r\n  let offset = 0;\r\n  if (draggingOver === \"column1\") {\r\n    offset = -100;\r\n  } else if (draggingOver === \"column3\") {\r\n    offset = 100;\r\n  }\r\n  // move to the right spot\r\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\r\n\r\n  // patching the existing style\r\n  return {\r\n    ...style,\r\n    transform: translate,\r\n    // slowing down the drop\r\n    transition: `all  ${duration + 0.2}s`,\r\n  };\r\n}\r\n\r\nconst TraitDraggable = ({ trait, index, wiggle }) => {\r\n  return (\r\n    <Draggable draggableId={trait} key={trait} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n          style={getStyle(provided.draggableProps.style, snapshot)}\r\n          className={wiggle ? \"wiggle-animation\" : \"\"}\r\n        >\r\n          <SelectionTrait trait={trait} provided={provided} />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default TraitDraggable;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { Grid } from \"@mui/material\";\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TraitList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? props.hoverColor : \"white\"};\r\n  display: flex;\r\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\r\n  min-height: 100vh;\r\n  max-width: ${(props) => props.isStarter && \"1px\"};\r\n  ${(props) =>\r\n    props.showHoverColor &&\r\n    `\r\n    background-color: ${props.hoverColor};\r\n  `}\r\n`;\r\n\r\nconst SelectionDroppable = ({\r\n  column,\r\n  isStarter = false,\r\n  hoverColor = \"lightBlue\",\r\n}) => {\r\n  const [shouldWiggle, setShouldWiggle] = useState(isStarter);\r\n  const [showHoverColor, setShowHoverColor] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (isStarter) {\r\n      const timer = setTimeout(() => {\r\n        setShouldWiggle(false);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setShowHoverColor(true);\r\n      const timer = setTimeout(() => {\r\n        setShowHoverColor(false);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isStarter]);\r\n\r\n  return (\r\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\r\n      {(provided, snapshot) => (\r\n        <TraitList\r\n          classname=\"cards stack\"\r\n          ref={provided.innerRef}\r\n          isStarter={isStarter}\r\n          hoverColor={hoverColor}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n          showHoverColor={showHoverColor}\r\n          S\r\n          {...provided.droppableProps}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item margin=\"auto\">\r\n              {isStarter && (\r\n                <TraitDraggable\r\n                  key={column?.traitIds[0]}\r\n                  trait={column?.traitIds[0]}\r\n                  index={column?.traitIds.indexOf(column?.traitIds[0])}\r\n                  wiggle={shouldWiggle}\r\n                />\r\n              )}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </Grid>\r\n        </TraitList>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default SelectionDroppable;\r\n","import React from \"react\";\r\nimport allTraits from \"../utils/listOfAllTraits\";\r\n\r\nconst skipSelection = (\r\n  setTopTraits,\r\n  allTraits,\r\n  history,\r\n  setActiveStepState\r\n) => {\r\n  // Select half of the topTraits\r\n  const halfLength = Math.ceil(allTraits.length / 2);\r\n  const selectedTraits = allTraits.slice(0, halfLength);\r\n\r\n  // Set the selected traits\r\n  setTopTraits(selectedTraits);\r\n  setActiveStepState(1);\r\n\r\n  console.log(\"Skipping to ranking with traits:\", selectedTraits);\r\n\r\n  // Navigate to the Rank page\r\n  history.push(\"/Rank\");\r\n};\r\n\r\nexport const SkipSelectionButton = ({\r\n  setTopTraits,\r\n  history,\r\n  setActiveStepState,\r\n}) => {\r\n  const handleSkipSelection = () => {\r\n    skipSelection(setTopTraits, allTraits, history, setActiveStepState);\r\n  };\r\n\r\n  if (process.env.NODE_ENV !== \"development\") {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ position: \"fixed\", bottom: \"10px\", right: \"10px\", zIndex: 9999 }}\r\n    >\r\n      <button\r\n        onClick={handleSkipSelection}\r\n        style={{\r\n          padding: \"10px\",\r\n          backgroundColor: \"#ff4081\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Skip Selection\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","export const selectionInitial = [\r\n  \"Drag traits to the right if you value them, left if not\",\r\n];\r\n","// @flow\r\nimport React, { useEffect, useContext, useRef, useState } from \"react\";\r\nimport SelectionDroppable from \"./SelectionDroppable\";\r\nimport { Box, Grid, useMediaQuery } from \"@mui/material\";\r\nimport { ProgressContext } from \"../App\";\r\nimport { TutorialContext } from \"../App\";\r\nimport { SkipSelectionButton } from \"../../utils/devTools\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { selectionInitial } from \"../../utils/tutorialStrings\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\nconst SelectionPage = ({\r\n  columnData,\r\n  setTopTraits,\r\n  history,\r\n  swipeHandlers,\r\n  topTraits,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  useEffect(() => {\r\n    if (columnData.columns.column2.traitIds.length === 0) {\r\n      handleClearStack(columnData.columns.column3.traitIds);\r\n    }\r\n  }, [columnData, history, setTopTraits, topTraits]);\r\n\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const { tutorialStrings } = useContext(TutorialContext);\r\n  const [tutorialStringsState, setTutorialStringsState] = tutorialStrings;\r\n  const numberOfTraits = useRef(columnData.columns.column2.traitIds.length);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (columnData.columns.column2.traitIds.length === 0) return;\r\n    setProgressState(progressState + 100 / numberOfTraits.current);\r\n  }, [columnData]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"setting tutorial strings\", selectionInitial);\r\n    setTutorialStringsState(selectionInitial);\r\n  }, [setTutorialStringsState]);\r\n\r\n  function handleClearStack(topTraits) {\r\n    if (topTraits.length < 7) {\r\n      //encouge user to add more traits\r\n      columnData.columns.column2.traitIds = columnData.columns.column1.traitIds;\r\n    } else if (topTraits.length > 24) {\r\n      //encouge user to remove traits\r\n      columnData.columns.column2.traitIds = columnData.columns.column3.traitIds;\r\n    } else {\r\n      //progress to ranking page\r\n      console.log(columnData.columns.column3.traitIds);\r\n      setTopTraits(columnData.columns.column3.traitIds);\r\n      setActiveStepState(1);\r\n      setProgressState(0);\r\n      history.push(\"/Rank\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <SkipSelectionButton\r\n        setTopTraits={setTopTraits}\r\n        history={history}\r\n        setActiveStepState={setActiveStepState}\r\n      />\r\n      <div {...swipeHandlers}>\r\n        <Grid container spacing={0} wrap=\"nowrap\">\r\n          <SelectionDroppable\r\n            key={columnData.columns.column1.id}\r\n            column={columnData.columns.column1}\r\n            hoverColor={\"LightPink\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column2.id}\r\n            column={columnData.columns.column2}\r\n            isStarter={true}\r\n            hoverColor={\"\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column3.id}\r\n            column={columnData.columns.column3}\r\n            hoverColor={\"LightGreen\"}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default SelectionPage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Card, Grid } from \"@mui/material\";\r\n\r\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\r\n  const [isBouncing, setIsBouncing] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  useEffect(() => {\r\n    if (firstUpdate.current == true) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setIsBouncing(true);\r\n      setTimeout(() => setCurrentColor(color), 250); //timeout set to half bounce time to time color change to apex\r\n    }, 500 * index); //timeout set to total bounce time to have items bounce one at a time\r\n    setIsBouncing(false);\r\n  }, [color]);\r\n\r\n  return (\r\n    <Draggable draggableId={trait} index={index} isDragDisabled={!isDraggable}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Card\r\n            className={`wideCard ${isBouncing ? \"bounce\" : \"\"}`}\r\n            sx={{ backgroundColor: currentColor }}\r\n          >\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <h3>{trait}</h3>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default FreeDragTrait;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\r\nimport styled from \"styled-components\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst DragColumn = styled.div``;\r\n\r\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\r\n  const tutorialStrings = [\"Rearrange to the guess list order\"];\r\n  return (\r\n    <div>\r\n      <Droppable key={column.id} droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <DragColumn\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {column.traitIds.map((trait, index) => {\r\n                return (\r\n                  <Grid item key={trait}>\r\n                    <FreeDragTrait\r\n                      trait={trait}\r\n                      index={column.traitIds.indexOf(trait)}\r\n                      color={colors[index]}\r\n                      isDraggable={isDraggable}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </DragColumn>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default ReorderableColumn;\r\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.replace('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport TryItButton from \"./TryItButton\";\r\n\r\nconst ReorderGuess = ({\r\n  column,\r\n  onDone,\r\n  colors,\r\n  showTryIt,\r\n  history,\r\n  isDraggable,\r\n  showLockIn,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Grid item>\r\n        <ReorderableColumn\r\n          column={column}\r\n          colors={colors}\r\n          isDraggable={isDraggable}\r\n        />\r\n      </Grid>\r\n      <Grid item sx={{ paddingTop: \"4vh\" }}>\r\n        {showLockIn && (\r\n          <Button onClick={onDone} variant=\"contained\">\r\n            Lock in\r\n          </Button>\r\n        )}\r\n        {showTryIt && <TryItButton history={history} />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ReorderGuess;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport initialTraits from \"../Selection/initialTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport ReorderGuess from \"./ReorderGuess\";\r\nimport { trackGuessed } from \"../../utils/mixpanel\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\r\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\r\n  let wrongTraits = useRef([]);\r\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\r\n  let finalList = useRef([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n  const [currentTraits, setCurrentTraits] = useState([]);\r\n  const [showPicks, setShowPicks] = useState(true);\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [showTryIt, setShowIt] = useState(false);\r\n  const [showLockIn, setShowLockIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    while (wrongTraits.current.length < 7) {\r\n      //get eligible red herrings\r\n      if (!traitsLeft.current.includes(traitPool[0])) {\r\n        wrongTraits.current.push(traitPool[0]);\r\n      }\r\n      traitPool = traitPool.splice(1, traitPool.length);\r\n    }\r\n    loadNextTraits();\r\n  }, [traitPool]);\r\n\r\n  const handlePick = (pick) => {\r\n    finalList.current.push(pick);\r\n    if (traitsLeft.current.length === 0) {\r\n      const newTraits = {\r\n        ...columnData.columns.guessing,\r\n        traitIds: finalList.current,\r\n      };\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          guessing: newTraits,\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      trackGuessed(newColumnData.columns.guessing);\r\n      setShowColumn(true);\r\n      setShowPicks(false);\r\n    }\r\n    loadNextTraits();\r\n  };\r\n  const loadNextTraits = () => {\r\n    setCurrentTraits(\r\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\r\n    );\r\n    console.log(\"TraitsLeft: \", traitsLeft.current);\r\n    console.log(\"WrongTaits: \", wrongTraits.current);\r\n    console.log(finalList.current);\r\n  };\r\n  const onDone = () => {\r\n    console.log(\"done!\");\r\n    let guessColors = [];\r\n    const correctTraits = traits.slice(0, 7);\r\n    const guess = columnData.columns.guessing.traitIds;\r\n    for (let i = 0; i < correctTraits.length; i++) {\r\n      if (correctTraits[i] === guess[i]) {\r\n        guessColors.push(\"green\");\r\n        console.log(\"correct\", correctTraits[i], guess[i]);\r\n      } else if (correctTraits.includes(guess[i])) {\r\n        guessColors.push(\"gold\");\r\n        console.log(\"in there\", correctTraits[i], guess[i]);\r\n      } else {\r\n        guessColors.push(\"LightGray\");\r\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\r\n      }\r\n    }\r\n    setColors(guessColors);\r\n    setShowIt(true);\r\n    setShowLockIn(false);\r\n    setIsDraggable(false);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const guessTutorial = [\r\n    \"Select the traits actually in the list.\",\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n  return (\r\n    <div>\r\n      {showPicks && (\r\n        <Grid\r\n          container\r\n          spacing={isMobile ? 60 : 3}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          direction={isMobile ? \"row\" : \"column\"}\r\n        >\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[0])}\r\n              trait={currentTraits[0]}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[1])}\r\n              trait={currentTraits[1]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showColumn && (\r\n        <ReorderGuess\r\n          column={columnData.columns.guessing}\r\n          onDone={onDone}\r\n          colors={colors}\r\n          showTryIt={showTryIt}\r\n          showLockIn={showLockIn}\r\n          history={history}\r\n          isDraggable={isDraggable}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GuessPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDBTraits } from \"../../utils/Firebase\";\r\nimport { Grid, Typography, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport SmallTraitList from \"../SmallTraitList\";\r\nimport GuessPage from \"./GuessPage\";\r\nimport TryItButton from \"./TryItButton\";\r\nimport { trackShowTraits, trackGuessTraits } from \"../../utils/mixpanel\";\r\n\r\nconst SharedPage = ({ columnData, setColumnData, history }) => {\r\n  let { id } = useParams();\r\n  const [storedTraits, setStoredTraits] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [showGuessing, setShowGuessing] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getDBTraits(id).then((result) => {\r\n        setStoredTraits(result);\r\n      });\r\n    })();\r\n  }, [id]);\r\n  const showTraits = () => {\r\n    trackShowTraits();\r\n    setShowList(true);\r\n    setShowOptions(false);\r\n  };\r\n  const showGuess = () => {\r\n    trackGuessTraits();\r\n    setShowGuessing(true);\r\n    setShowOptions(false);\r\n  };\r\n  console.log(\"storedTraits\", storedTraits);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={isMobile ? 60 : 3}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction={isMobile ? \"row\" : \"column\"}\r\n    >\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\r\n        </Grid>\r\n      )}\r\n\r\n      {showList && (\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant={isMobile ? \"h3\" : \"h5\"} color=\"black\">\r\n                Top traits\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <SmallTraitList traits={storedTraits} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5vw\" }}>\r\n              <TryItButton history={history} source=\"Guess\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showGuessing && (\r\n        <Grid item>\r\n          <GuessPage\r\n            traits={storedTraits}\r\n            columnData={columnData}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SharedPage;\r\n","// @flow\r\nimport React, { useEffect, useRef, useState, createContext } from \"react\";\r\nimport initialTraits from \"./Selection/initialTraits\";\r\nimport ResultsPage from \"./ResultsPage\";\r\nimport RankingPage from \"./RankingPage\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport { HashRouter, Route, useHistory } from \"react-router-dom\";\r\nimport SelectionPage from \"./Selection/SelectionPage\";\r\nimport ReactGA from \"react-ga\";\r\nimport SharedPage from \"./Share/SharedPage\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport tweenFunctions from \"tween-functions\";\r\nimport { makeAndTrackId } from \"../utils/mixpanel\";\r\nimport appTheme from \"../style/appTheme\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nexport const ProgressContext = createContext();\r\nexport const TutorialContext = createContext();\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const [columnData, setColumnData] = useState(initialTraits);\r\n  const [topTraits, setTopTraits] = useState(\r\n    initialTraits.columns.column2.traitIds.slice(0, 18)\r\n  );\r\n  const [userId, setUserId] = useState(makeAndTrackId(6));\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [tutorialStrings, setTutorialStrings] = useState([]);\r\n\r\n  const sensorAPIRef = useRef<?SensorAPI>(null);\r\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\r\n  ReactGA.initialize(TRACKING_ID);\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //make sure the draggable moved\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = columnData.columns[source.droppableId];\r\n    const finish = columnData.columns[destination.droppableId];\r\n\r\n    //if moving within the same column\r\n    if (start === finish) {\r\n      const newTraitIds = Array.from(start.traitIds);\r\n      newTraitIds.splice(source.index, 1);\r\n      newTraitIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        traitIds: newTraitIds,\r\n      };\r\n\r\n      //override existing column\r\n      const newData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setColumnData(newData);\r\n      return;\r\n    }\r\n    //cross column moving\r\n    const startTraitIds = Array.from(start.traitIds);\r\n    startTraitIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      traitIds: startTraitIds,\r\n    };\r\n\r\n    const finishTraitIds = Array.from(finish.traitIds);\r\n    finishTraitIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      traitIds: finishTraitIds,\r\n    };\r\n\r\n    const newData = {\r\n      ...columnData,\r\n      columns: {\r\n        ...columnData.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n    setColumnData(newData);\r\n  };\r\n\r\n  function swipe(direction) {\r\n    const api: ?SensorAPI = sensorAPIRef.current;\r\n    if (!api) {\r\n      console.warn(\"unable to find sensor api\");\r\n      return null;\r\n    }\r\n    let endX;\r\n    if (direction === \"right\") {\r\n      endX = 100;\r\n    } else {\r\n      endX = -100;\r\n    }\r\n    const start = { x: 0, y: 0 };\r\n    const end = { x: endX, y: 0 };\r\n\r\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\r\n\r\n    if (!preDrag) {\r\n      console.warn(\"unable to start capturing\");\r\n      return null;\r\n    }\r\n\r\n    const drag = preDrag.fluidLift(start);\r\n\r\n    const points = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      points.push({\r\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\r\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\r\n      });\r\n    }\r\n    moveStepByStep(drag, points);\r\n  }\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      console.log(\"left swiped\");\r\n      swipe(\"left\");\r\n    },\r\n    onSwipedRight: () => {\r\n      console.log(\"right swiped\");\r\n      swipe(\"right\");\r\n    },\r\n  });\r\n\r\n  function moveStepByStep(drag, values) {\r\n    requestAnimationFrame(() => {\r\n      const newPosition = values.shift();\r\n      drag.move(newPosition);\r\n      if (values.length) {\r\n        moveStepByStep(drag, values);\r\n      } else {\r\n        drag.drop();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        sensors={[\r\n          (api) => {\r\n            sensorAPIRef.current = api;\r\n          },\r\n        ]}\r\n      >\r\n        <ProgressContext.Provider\r\n          value={{\r\n            progress: [progress, setProgress],\r\n            activeStep: [activeStep, setActiveStep],\r\n          }}\r\n        >\r\n          <TutorialContext.Provider\r\n            value={{ tutorialStrings: [tutorialStrings, setTutorialStrings] }}\r\n          >\r\n            <ThemeProvider theme={appTheme}>\r\n              <NavBar history={history} />\r\n\r\n              <Route\r\n                path=\"/:id?\"\r\n                children={\r\n                  <SelectionPage\r\n                    columnData={columnData}\r\n                    topTraits={topTraits}\r\n                    setTopTraits={setTopTraits}\r\n                    setColumnData={setColumnData}\r\n                    history={history}\r\n                    swipeHandlers={swipeHandlers}\r\n                  />\r\n                }\r\n              />\r\n              <Route path=\"/Rank\">\r\n                <RankingPage\r\n                  topTraits={topTraits}\r\n                  setTopTraits={setTopTraits}\r\n                  history={history}\r\n                  initalProgress={progress}\r\n                />\r\n              </Route>\r\n              <Route path=\"/Results\">\r\n                <ResultsPage\r\n                  topTraits={topTraits}\r\n                  setTopTraits={setTopTraits}\r\n                  userID={userId}\r\n                />\r\n              </Route>\r\n              <Route\r\n                path=\"/Share/:id\"\r\n                children={\r\n                  <SharedPage\r\n                    columnData={columnData}\r\n                    setColumnData={setColumnData}\r\n                    history={history}\r\n                  />\r\n                }\r\n              />\r\n            </ThemeProvider>\r\n          </TutorialContext.Provider>\r\n        </ProgressContext.Provider>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <HashRouter basename={\"/trait-ranker\"}>\r\n      <App />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport AppWrapper from \"./components/App\";\r\n\r\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}