{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/FlipCard.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/CardHelp.js","components/TraitCards/RankingTrait.js","utils/useMergeSort.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","Assets/logo512.png","components/NavBar/HomeButton.js","style/appTheme.js","components/NavBar/CustomStepper.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","utils/devTools.js","components/Selection/SelectionPage.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","_jsx","BsQuestionCircle","AiOutlineOrderedList","Artistry","GiPalette","Musicality","BsMusicNoteBeamed","Leadership","GiFlyingFlag","Excellence","MdLeaderboard","MdPsychology","Presentation","GiClothes","Independence","GiBreakingChain","Flexibility","GiSplitArrows","MdSocialDistance","Rest","GiNightSleep","Kindness","RiUserHeartFill","Recreation","MdSportsSoccer","Strength","MdFitnessCenter","Wisdom","MdMenuBook","Empathy","MdConnectWithoutContact","Trust","SiHandshake","Spontaneity","BiAlarmOff","Adventure","GiMountainRoad","Integrity","MdOutlineVerifiedUser","Generosity","MdVolunteerActivism","Patience","MdAccessTime","Perseverance","GiMountainClimbing","Mercy","GiGlowingHands","Romance","GiHeartInside","Athleticism","GiMedallist","MdOutlineThumbsUpDown","Productivity","GiGearHammer","Nature","BsFillTreeFill","Peace","BsPeace","Determination","FaFistRaised","Resourcefulness","HiPuzzle","Authority","RiGovernmentLine","Hope","GiHeartKey","Challenge","GiCrossedSwords","Decisiveness","GiChoice","Comfort","GiPillow","Joy","BiHappyBeaming","Fairness","HiOutlineScale","Affection","FaRegKissWinkHeart","Confidence","BsFillShieldLockFill","Respect","FaHandshake","Discipline","BsFillStopwatchFill","Frugality","FaPiggyBank","Suffering","RiEmotionSadLine","FaChild","Optimism","GrLineChart","Ambition","FiTarget","Craftsmanship","FaTools","Vulnerability","BsFillUnlockFill","Family","MdFamilyRestroom","Boldness","GiLion","Caution","RiErrorWarningFill","Directness","AiOutlineMessage","Charisma","FaGrinStars","Ingenuity","Teachability","FaUserGraduate","Pessimism","FaThumbsDown","Loyalty","GiSittingDog","GiMeditation","Creativity","GiPencilBrush","Realism","BiGlasses","Enthusiasm","GiFireworkRocket","MdBathtub","Spirituality","Detachment","GiButterfly","Vision","GiBinoculars","Simplicity","FaShapes","FaDoorOpen","Contentment","FaRegSmileBeam","Tradition","FaScroll","traitDefinitions","Objectivity","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","_ref","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","_useState","useState","_useState2","_slicedToArray","showTooltip","setShowTooltip","_useState3","_useState4","showLink","setShowLink","_jsxs","Grid","container","direction","alignItems","justifyContent","spacing","children","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","_x2","_x3","_setDBTraits","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","hash","traitArray","wrap","_context2","prev","next","setDoc","doc","e","stop","getDBTraits","_x4","_getDBTraits","_callee3","docRef","docSnap","_context3","getDoc","sent","exists","data","abrupt","FlipCard","trait","index","value","setValue","flip","setFlip","useEffect","setTimeout","Card","className","concat","style","margin","CardContent","marginTop","IconContext","Provider","size","SmallTraitList","slice","map","ResultsPage","topTraits","userID","steps","trackResultsPage","_callee","_context","height","reverse","sx","padding","CardHelp","toggleFlipped","flipped","firstCard","IconButton","position","top","right","FlipIcon","fontSize","HelpOutlineIcon","RankingTrait","isMobile","useMediaQuery","setFlipped","rippleRef","React","useRef","stopPropagation","onMouseDown","current","start","onMouseUp","Typography","TouchRipple","ref","center","useMergeSort","history","currentState","setCurrentState","isInitializedRef","prepareNextComparison","state","mergeStack","comparisonStack","currentLevel","lastSublist","newMergeStack","newState","_objectSpread","currentStanding","isComplete","progressPercent","currentMatch","updatedLevel","_toConsumableArray","leftSublist","rightSublist","remainingSublists","newCurrentLevel","newComparison","mergedSublist","leftIndex","rightIndex","newComparisonStack","leftTrait","rightTrait","left","finalList","traitList","initialStateSnapshot","comparisonsMade","totalComparisons","initialSublists","n","ceil","log2","initializeSort","matchWin","winner","currentComparisonStack","comp","currentMerge","newLeftIndex","newRightIndex","newMergedSublist","newCurrentMerge","newCurrentMatch","level","sublist","newComparisonsMade","min","remainingLeft","remainingRight","finalMergedSublist","pop","updatedLevelIndex","nextMerge","warn","revertMatch","previousState","rankingState","RankingPage","_initalProgress$data","setTopTraits","initalProgress","memoizedTopTraits","useMemo","_useMergeSort","ranking","_useContext","useContext","ProgressContext","progress","activeStep","_progress","setProgressState","_activeStep","setActiveStepState","leftCardClass","setLeftCardClass","rightCardClass","setRightCardClass","undoFunction","UndoContext","handleRoundWin","useCallback","handleRevertMatch","push","Transition","forwardRef","props","Slide","HelpDialogBox","currentPage","_React$useState","_React$useState2","setOpen","_React$useState3","_React$useState4","grow","setGrow","handleClose","helpData","Selection","description","Media","Dialog","TransitionComponent","fullScreen","marginLeft","marginRight","PaperProps","borderTopLeftRadius","borderTopRightRadius","DialogTitle","color","CloseIcon","DialogContentText","paragraph","src","width","alt","HomeButton","openDialog","setOpenDialog","ConfirmDialog","handleCancel","DialogContent","DialogActions","autoFocus","handleConfirm","_Fragment","maxWidth","maxHeight","logo512","appTheme","createTheme","palette","primary","main","secondary","warning","CustomStepper","StyledStepper","styled","display","flexFlow","StyledStepperStep","StyledStepperStepIndex","currentStep","done","lineHeight","borderRadius","background","textAlign","StyledLabelContainer","useTheme","ProgressBar","_ref3","step","LinearProgress","flex","backgroundColor","getStepIcon","CompareArrowsOutlinedIcon","SortOutlinedIcon","WorkspacePremiumOutlinedIcon","label","key","this","NavBar","progressState","activeStepState","Box","flexGrow","AppBar","Toolbar","FaUndo","SelectionTrait","isStarter","provided","dragHandleProps","draggable","Container","div","_templateObject","_taggedTemplateLiteral","getStyle","snapshot","transform","axisLockX","split","shift","draggingCustomStyle","isDropAnimating","_snapshot$dropAnimati","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","wiggle","slideUp","Draggable","draggableId","draggableProps","innerRef","isDragging","TraitList","_templateObject2","isDraggingOver","hoverColor","showHoverColor","SelectionDroppable","column","_ref$isStarter","_ref$slideUp","_ref$hoverColor","shouldWiggle","setShouldWiggle","setShowHoverColor","_useState5","_useState6","setFirstCard","timer","clearTimeout","Droppable","droppableId","classname","droppableProps","indexOf","placeholder","SkipSelectionButton","SelectionPage","columnData","setColumnData","swipeHandlers","newColumnData","setTutorialStringsState","handleClearStack","tutorialStrings","TutorialContext","_tutorialStrings","numberOfTraits","isUndoing","shouldSlideUp","setShouldSlideUp","setSelectionHistory","remainingTraits","percentComplete","prevHistory","undoLastSelection","newHistory","lastSelection","FreeDragTrait","isDraggable","isBouncing","setIsBouncing","currentColor","setCurrentColor","firstUpdate","isDragDisabled","DragColumn","ReorderableColumn","colors","TryItButton","source","Source","trackShareConversion","replace","ReorderGuess","onDone","showTryIt","showLockIn","paddingTop","GuessPage","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","currentTraits","setCurrentTraits","_useState7","_useState8","showPicks","setShowPicks","_useState9","_useState10","showColumn","setShowColumn","_useState11","_useState12","setShowIt","_useState13","_useState14","setShowLockIn","includes","splice","loadNextTraits","handlePick","pick","newTraits","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","createContext","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","setActiveStep","setProgress","setTutorialStrings","sensorAPIRef","ReactGA","initialize","swipe","api","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","DragDropContext","onDragEnd","_objectSpread3","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","_defineProperty","newTraitIds","newColumn","sensors","ThemeProvider","theme","Route","exact","path","Redirect","to","AppWrapper","HashRouter","basename","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7ce5f673.chunk.js","sourcesContent":["import {\r\n  BiAlarmOff,\r\n  BiHappyBeaming,\r\n  BsFillShieldLockFill,\r\n  BsFillStopwatchFill,\r\n  BsFillTreeFill,\r\n  BsFillUnlockFill,\r\n  BsMusicNoteBeamed,\r\n  BsPeace,\r\n  FaChild,\r\n  FaFistRaised,\r\n  FaHandshake,\r\n  FaPiggyBank,\r\n  FaRegKissWinkHeart,\r\n  FaTools,\r\n  FiTarget,\r\n  GiBreakingChain,\r\n  GiChoice,\r\n  GiClothes,\r\n  GiCrossedSwords,\r\n  GiFlyingFlag,\r\n  GiGearHammer,\r\n  GiGlowingHands,\r\n  GiHeartInside,\r\n  GiHeartKey,\r\n  GiMedallist,\r\n  GiMountainClimbing,\r\n  GiMountainRoad,\r\n  GiNightSleep,\r\n  GiPalette,\r\n  GiPillow,\r\n  GiSplitArrows,\r\n  GrLineChart,\r\n  HiOutlineScale,\r\n  HiPuzzle,\r\n  MdAccessTime,\r\n  MdConnectWithoutContact,\r\n  MdFamilyRestroom,\r\n  MdFitnessCenter,\r\n  MdLeaderboard,\r\n  MdMenuBook,\r\n  MdOutlineThumbsUpDown,\r\n  MdOutlineVerifiedUser,\r\n  MdPsychology,\r\n  MdSocialDistance,\r\n  MdSportsSoccer,\r\n  MdVolunteerActivism,\r\n  RiEmotionSadLine,\r\n  RiGovernmentLine,\r\n  RiUserHeartFill,\r\n  SiHandshake,\r\n  GiLion,\r\n  RiErrorWarningFill,\r\n  FaGrinStars,\r\n  FaThumbsDown,\r\n  FaScroll,\r\n  GiSittingDog,\r\n  FaUserGraduate,\r\n  GiMeditation,\r\n  FaShapes,\r\n  BiGlasses,\r\n  BsQuestionCircle,\r\n  AiOutlineOrderedList,\r\n  GiFireworkRocket,\r\n  MdBathtub,\r\n  GiBinoculars,\r\n  FaRegSmileBeam,\r\n  FaDoorOpen,\r\n  GiPencilBrush,\r\n  GiButterfly,\r\n  AiOutlineMessage,\r\n} from \"react-icons/all\";\r\n\r\nconst allTraits = [\r\n  \"Ambition\",\r\n  \"Athleticism\",\r\n  \"Artistry\",\r\n  \"Boldness\",\r\n  \"Caution\",\r\n  \"Charisma\",\r\n  \"Directness\",\r\n  \"Contentment\",\r\n  \"Craftsmanship\",\r\n  \"Creativity\",\r\n  \"Decisiveness\",\r\n  \"Discipline\",\r\n  \"Empathy\",\r\n  \"Enthusiasm\",\r\n  \"Flexibility\",\r\n  \"Frugality\",\r\n  \"Generosity\",\r\n  \"Independence\",\r\n  \"Ingenuity\",\r\n  \"Musicality\",\r\n  \"Loyalty\",\r\n  \"Open-mindedness\",\r\n  \"Optimism\",\r\n  \"Patience\",\r\n  \"Presentation\",\r\n  \"Romance\",\r\n  \"Self-care\",\r\n  \"Spirituality\",\r\n  \"Simplicity\",\r\n  \"Spontaneity\",\r\n  \"Teachability\",\r\n  \"Tradition\",\r\n  \"Vulnerability\",\r\n];\r\n\r\nexport const traitIcons = {\r\n  \"Guess the traits\": <BsQuestionCircle />,\r\n  \"Show the traits\": <AiOutlineOrderedList />,\r\n  Artistry: <GiPalette />,\r\n  Musicality: <BsMusicNoteBeamed />,\r\n  Leadership: <GiFlyingFlag />,\r\n  Excellence: <MdLeaderboard />,\r\n  \"Self Control\": <MdPsychology />,\r\n  Presentation: <GiClothes />,\r\n  Independence: <GiBreakingChain />,\r\n  Flexibility: <GiSplitArrows />,\r\n  \"Personal Space\": <MdSocialDistance />,\r\n  Rest: <GiNightSleep />,\r\n  Kindness: <RiUserHeartFill />,\r\n  Recreation: <MdSportsSoccer />,\r\n  Strength: <MdFitnessCenter />,\r\n  Wisdom: <MdMenuBook />,\r\n  Empathy: <MdConnectWithoutContact />,\r\n  Trust: <SiHandshake />,\r\n  Spontaneity: <BiAlarmOff />,\r\n  Adventure: <GiMountainRoad />,\r\n  Integrity: <MdOutlineVerifiedUser />,\r\n  Generosity: <MdVolunteerActivism />,\r\n  Patience: <MdAccessTime />,\r\n  Perseverance: <GiMountainClimbing />,\r\n  Mercy: <GiGlowingHands />,\r\n  Romance: <GiHeartInside />,\r\n  Athleticism: <GiMedallist />,\r\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\r\n  Productivity: <GiGearHammer />,\r\n  Nature: <BsFillTreeFill />,\r\n  Peace: <BsPeace />,\r\n  Determination: <FaFistRaised />,\r\n  Resourcefulness: <HiPuzzle />,\r\n  Authority: <RiGovernmentLine />,\r\n  Hope: <GiHeartKey />,\r\n  Challenge: <GiCrossedSwords />,\r\n  Decisiveness: <GiChoice />,\r\n  Comfort: <GiPillow />,\r\n  Joy: <BiHappyBeaming />,\r\n  Fairness: <HiOutlineScale />,\r\n  Affection: <FaRegKissWinkHeart />,\r\n  Confidence: <BsFillShieldLockFill />,\r\n  Respect: <FaHandshake />,\r\n  Discipline: <BsFillStopwatchFill />,\r\n  Frugality: <FaPiggyBank />,\r\n  Suffering: <RiEmotionSadLine />,\r\n  \"Child-likeness\": <FaChild />,\r\n  Optimism: <GrLineChart />,\r\n  Ambition: <FiTarget />,\r\n  Craftsmanship: <FaTools />,\r\n  Vulnerability: <BsFillUnlockFill />,\r\n  Family: <MdFamilyRestroom />,\r\n  Boldness: <GiLion />,\r\n  Caution: <RiErrorWarningFill />,\r\n  Directness: <AiOutlineMessage />,\r\n  Charisma: <FaGrinStars />,\r\n  Ingenuity: <HiPuzzle />,\r\n  Teachability: <FaUserGraduate />,\r\n  Pessimism: <FaThumbsDown />,\r\n  Loyalty: <GiSittingDog />,\r\n  \"Self-Improvement\": <GiMeditation />,\r\n  Creativity: <GiPencilBrush />,\r\n  Realism: <BiGlasses />,\r\n  Enthusiasm: <GiFireworkRocket />,\r\n  \"Self-care\": <MdBathtub />,\r\n  Spirituality: <GiMeditation />,\r\n  Detachment: <GiButterfly />,\r\n  Vision: <GiBinoculars />,\r\n  Simplicity: <FaShapes />,\r\n  \"Open-mindedness\": <FaDoorOpen />,\r\n  Contentment: <FaRegSmileBeam />,\r\n  Tradition: <FaScroll />,\r\n};\r\n\r\nexport const traitDefinitions = {\r\n  Adventure:\r\n    \"A willingness to embrace new experiences, take risks, and explore the unknown with excitement.\",\r\n  Ambition:\r\n    \"A strong drive to achieve personal and professional goals, demonstrating determination and commitment.\",\r\n  Athleticism:\r\n    \"Exhibiting physical strength, coordination, and endurance, along with a love for physical challenges and sportsmanship.\",\r\n  Artistry:\r\n    \"The ability to express oneself creatively through various forms of art, demonstrating imagination and originality.\",\r\n  Boldness:\r\n    \"The courage to take initiative and act confidently, even in challenging situations.\",\r\n  Caution:\r\n    \"Exercising thoughtful care and consideration before making decisions, showing responsibility and foresight.\",\r\n  Charisma:\r\n    \"A magnetic charm or appeal that inspires and attracts others, creating positive and influential relationships.\",\r\n  Directness:\r\n    \"The ability to address difficult situations directly and assertively, while maintaining respect and fairness.\",\r\n  Contentment:\r\n    \"A deep sense of satisfaction and peace with one's life, fostering gratitude and happiness.\",\r\n  Craftsmanship:\r\n    \"Dedication to producing high-quality work through skill, attention to detail, and pride in one’s craft.\",\r\n  Creativity:\r\n    \"The ability to think outside the box and come up with innovative solutions or ideas.\",\r\n  Decisiveness:\r\n    \"The quality of making clear and confident decisions, especially in challenging or uncertain situations.\",\r\n  Objectivity:\r\n    \"The ability to remain objective and composed in emotionally charged situations, fostering clear thinking and balance.\",\r\n  Generosity:\r\n    \"The willingness to share one's resources, time, or skills with others, fostering a sense of community and mutual support.\",\r\n  Discipline:\r\n    \"A commitment to maintaining self-control and focus in pursuit of long-term goals, even in the face of distractions or challenges.\",\r\n  Empathy:\r\n    \"The capacity to deeply understand and care for the feelings and experiences of others, promoting kindness and compassion.\",\r\n  Enthusiasm:\r\n    \"A contagious energy and excitement that inspires and motivates others toward shared goals.\",\r\n  Flexibility:\r\n    \"The ability to adapt easily to new circumstances, demonstrating resilience and an open-minded approach to change.\",\r\n  Frugality:\r\n    \"The practice of making thoughtful and resourceful decisions, valuing efficiency and sustainability.\",\r\n  Independence:\r\n    \"The strength to think and act freely, demonstrating self-reliance and confidence in one's own abilities.\",\r\n  Ingenuity:\r\n    \"The ability to be resourceful and inventive, finding creative solutions to challenges and making the most of available resources.\",\r\n  Musicality:\r\n    \"A natural talent or learned proficiency in music, showcasing creativity and emotional expression through sound.\",\r\n  Loyalty:\r\n    \"A strong sense of commitment and devotion to others, characterized by reliability and trustworthiness.\",\r\n  \"Open-mindedness\":\r\n    \"A willingness to consider diverse perspectives and embrace new ideas, fostering growth and understanding.\",\r\n  Optimism:\r\n    \"A hopeful and positive outlook on life, expecting good outcomes and focusing on opportunities rather than obstacles.\",\r\n  Patience:\r\n    \"The ability to remain calm and persistent in the face of delays or difficulties, showing perseverance and emotional maturity.\",\r\n  Perseverance:\r\n    \"The determination to keep going and overcome obstacles, showing resilience and strength of character.\",\r\n  \"Personal Space\":\r\n    \"A healthy respect for one's own boundaries and those of others, promoting self-care and mutual respect.\",\r\n  Presentation:\r\n    \"An appreciation for taking care of one's physical health and presentation, reflecting confidence and self-respect.\",\r\n  Realism:\r\n    \"A balanced and practical approach to life, seeing things as they are while working constructively toward improvement.\",\r\n  Romance:\r\n    \"A deep appreciation for emotional connection and expressing love, fostering warmth and intimacy in relationships.\",\r\n  \"Self-care\":\r\n    \"The practice of tending to one’s mental, emotional, and physical health, prioritizing well-being and balance.\",\r\n  Spontaneity:\r\n    \"The ability to act on impulse and embrace the moment, making decisions without excessive planning, and finding joy in unexpected experiences\",\r\n  Spirituality:\r\n    \"A commitment to personal growth and connection with a higher purpose, fostering inner peace and moral integrity.\",\r\n  Simplicity:\r\n    \"An appreciation for living a life free from unnecessary complexity, focusing on what truly matters.\",\r\n  Tradition:\r\n    \"A deep respect for long-established customs and cultural practices, valuing continuity and heritage.\",\r\n  Teachability:\r\n    \"A willingness and openness to learn from others and experiences, demonstrating humility and a growth mindset.\",\r\n  Vision:\r\n    \"The ability to see the bigger picture and work toward long-term goals with purpose, foresight, and imagination.\",\r\n  Vulnerability:\r\n    \"The strength to be open and honest about one’s feelings, creating deeper connections and emotional authenticity.\",\r\n};\r\n\r\nexport default allTraits;\r\n","export default function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import traits from \"../../utils/listOfAllTraits\";\r\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\n\r\nconst initialTraits = {\r\n  traits,\r\n  columns: {\r\n    column1: {\r\n      id: \"column1\",\r\n      title: \"Not Valued\",\r\n      traitIds: [],\r\n    },\r\n    column2: {\r\n      id: \"column2\",\r\n      title: \"Traits\",\r\n      traitIds: shuffle(listOfAllTraits),\r\n    },\r\n    column3: {\r\n      id: \"column3\",\r\n      title: \"Valued\",\r\n      traitIds: [],\r\n    },\r\n    guessing: {\r\n      id: \"guessing\",\r\n      title: \"guessing\",\r\n      traitIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\r\n};\r\nexport default initialTraits;\r\n","export default function makeId(length) {\r\n  let result = \"\";\r\n  const characters = \"0123456789\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import mixpanel from \"mixpanel-browser\";\r\nimport LogRocket from \"logrocket\";\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\r\nLogRocket.init(\"zwugvl/trait-ranker\");\r\n\r\nLogRocket.getSessionURL(function (sessionURL) {\r\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\r\n});\r\n\r\nexport function makeAndTrackId(len) {\r\n  let Id = makeId(len);\r\n  mixpanel.track(\"Session Start\", { steps: 1 });\r\n  mixpanel.people.increment(\"sessions\", 1);\r\n  return Id;\r\n}\r\n\r\nexport function trackRankingPage(topTraits) {\r\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\r\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\r\n}\r\nexport function trackResultsPage(topTraits) {\r\n  mixpanel.track(\"Results Step\", { steps: 3 });\r\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\r\n}\r\nexport function trackShare() {\r\n  mixpanel.track(\"Shared\");\r\n}\r\nexport function trackShowTraits() {\r\n  mixpanel.track(\"Show Traits\");\r\n}\r\nexport function trackGuessTraits() {\r\n  mixpanel.track(\"Guess Traits\");\r\n}\r\nexport function trackGuessed(guesses) {\r\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\r\n}\r\nexport function trackShareConversion(source) {\r\n  mixpanel.track(\"Share Conversion\", { Source: source });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport {trackShare} from \"../utils/mixpanel\"\r\n\r\nconst CopyableLink = ({ text }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const onCopy = () => {\r\n    trackShare();\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          text: \"Take a look at my most valued traits\",\r\n          url: text,\r\n        })\r\n        .then(() => console.log(\"successful share\"))\r\n        .catch((error) => console.log(\"error sharing\", error));\r\n    } else {\r\n      navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => console.log(\"Copied!\"))\r\n        .catch(() => console.log(\"Copy failed\"));\r\n      setShowTooltip(true);\r\n      setShowLink(true);\r\n    }\r\n  };\r\n  const onTipClose = () => {\r\n    setShowTooltip(false);\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Tooltip\r\n          title={\"Copied to clipboard!\"}\r\n          open={showTooltip}\r\n          leaveDelay={1000}\r\n          onClose={onTipClose}\r\n        >\r\n          <Button variant=\"contained\" onClick={onCopy}>\r\n            Share\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      {showLink && (\r\n        <Grid item>\r\n          <InputLabel>{text}</InputLabel>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default CopyableLink;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\r\n  authDomain: \"trait-ranker.firebaseapp.com\",\r\n  projectId: \"trait-ranker\",\r\n  storageBucket: \"trait-ranker.appspot.com\",\r\n  messagingSenderId: \"387696334301\",\r\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\r\n  measurementId: \"G-K0FPHGRC6R\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function getHash(len) {\r\n  let timeout = false;\r\n  while (timeout === false) {\r\n    const hash = makeId(len);\r\n    const docRef = doc(db, hash);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      console.log(\"repeat hash\");\r\n    } else {\r\n      console.log(\"hash \" + hash);\r\n      return hash;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDBTraits(hash, traitArray) {\r\n  await setDoc(doc(db, \"Traits\", hash), {\r\n    traits: traitArray,\r\n  }).catch((e) => {\r\n    console.log(e);\r\n  });\r\n  console.log(doc(db, \"Traits\", hash), traitArray);\r\n}\r\n\r\nexport async function getDBTraits(hash) {\r\n  const docRef = doc(db, \"Traits\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    const traits = docSnap.data().traits;\r\n    console.log(traits);\r\n    return traits;\r\n  } else {\r\n    console.log(\"no doc\");\r\n  }\r\n}\r\n\r\nexport async function setDBProgress(hash, progress) {\r\n  await setDoc(doc(db, \"Progress\", hash), progress).catch((e) => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\nexport async function getDBProgress(hash) {\r\n  const docRef = doc(db, \"Progress\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    return docSnap.data();\r\n  } else {\r\n    console.log(\"No stored progress found\");\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Grid } from \"@mui/material\";\r\nimport { traitIcons } from \"../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst FlipCard = ({ trait, index }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [flip, setFlip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(true);\r\n      setTimeout(() => setValue(trait), 500);\r\n    }, index * 500);\r\n  });\r\n  return (\r\n    <Card className={`wideCard ${flip && \"flip\"}`} style={{ margin: \".5vw\" }}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          style={{ marginTop: \"-8vw\" }} //for some reason this is the only thing I could vertically center content with\r\n        >\r\n          <Grid item>\r\n            <IconContext.Provider value={{ size: \"9vw\" }}>\r\n              {traitIcons[value]}\r\n            </IconContext.Provider>\r\n          </Grid>\r\n          <Grid item>\r\n            <h3>{value}</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FlipCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nconst SmallTraitList = ({ traits }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      {traits.slice(0, 7).map((trait, index) => {\r\n        return (\r\n          <Grid item>\r\n            <FlipCard trait={trait} index={index} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SmallTraitList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport makeId from \"../utils/makeIdUtil\";\r\nimport CopyableLink from \"./CopyableLink\";\r\nimport { setDBTraits } from \"../utils/Firebase\";\r\nimport SmallTraitList from \"./SmallTraitList\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { trackResultsPage } from \"../utils/mixpanel\";\r\n\r\nconst ResultsPage = ({ topTraits, userID }) => {\r\n  useEffect(() => {\r\n    trackResultsPage(topTraits);\r\n    (async () => {\r\n      console.log(\"setting traits\", topTraits);\r\n      await setDBTraits(userID, topTraits);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Grid item>\r\n        <h3>Top Traits</h3>\r\n      </Grid>\r\n      <Grid item>\r\n        <SmallTraitList traits={topTraits.reverse()} />\r\n      </Grid>\r\n      <Grid item sx={{ padding: \"1rem\" }}>\r\n        <CopyableLink\r\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport FlipIcon from \"@mui/icons-material/Flip\";\r\nimport \"../../style/CardStyle.scss\";\r\n\r\nconst CardHelp = ({ toggleFlipped, flipped, firstCard }) => {\r\n  return (\r\n    <IconButton\r\n      onClick={toggleFlipped}\r\n      style={{ position: \"absolute\", top: -5, right: -5 }}\r\n      className={firstCard ? \"icon-grow\" : \"\"}\r\n    >\r\n      {flipped ? (\r\n        <FlipIcon fontSize=\"large\" />\r\n      ) : (\r\n        <HelpOutlineIcon fontSize=\"large\" />\r\n      )}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default CardHelp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons, traitDefinitions } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid, Typography } from \"@mui/material\";\r\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\r\nimport CardHelp from \"./CardHelp\";\r\n\r\nconst RankingTrait = ({ trait, onClick, className }) => {\r\n  const isMobile = useMediaQuery(\"(max-width:1024px)\");\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const rippleRef = React.useRef(null);\r\n  const onRippleStart = (e) => {\r\n    rippleRef.current.start(e);\r\n  };\r\n  const onRippleStop = (e) => {\r\n    rippleRef.current.stop(e);\r\n  };\r\n\r\n  const toggleFlipped = (e) => {\r\n    setFlipped(!flipped);\r\n    e.stopPropagation(); // Prevent the onClick from triggering\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card rankCard ${flipped ? \"flipped\" : \"\"} ${className || \"\"}`}\r\n      onClick={onClick}\r\n      onMouseDown={onRippleStart}\r\n      onMouseUp={onRippleStop}\r\n    >\r\n      <div className=\"card-inner\">\r\n        {/* Front Side */}\r\n        <div className=\"card-front\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconContext.Provider\r\n                value={isMobile ? { size: \"14vh\" } : { size: \"6vw\" }}\r\n              >\r\n                {traitIcons[trait]}\r\n              </IconContext.Provider>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/* Back Side */}\r\n        <div className=\"card-back\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{traitDefinitions[trait]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <TouchRipple ref={rippleRef} center={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTrait;\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction useMergeSort(initialTraits) {\r\n  // Constants\r\n  const TOP_K = 7;\r\n\r\n  // State Variables\r\n  const history = useRef([]);\r\n  const [currentState, setCurrentState] = useState(null);\r\n\r\n  // Refs to persist state across re-renders\r\n  const isInitializedRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!isInitializedRef.current) {\r\n      initializeSort(initialTraits);\r\n      isInitializedRef.current = true;\r\n    }\r\n  }, [initialTraits]);\r\n\r\n  function initializeSort(traitList) {\r\n    if (!traitList || traitList.length === 0) {\r\n      const initialStateSnapshot = {\r\n        mergeStack: [],\r\n        comparisonStack: [],\r\n        currentMatch: null,\r\n        currentStanding: [],\r\n        isComplete: true,\r\n        progressPercent: 100,\r\n        comparisonsMade: 0,\r\n        totalComparisons: 0,\r\n      };\r\n      history.current = [initialStateSnapshot];\r\n      setCurrentState(initialStateSnapshot);\r\n      return;\r\n    }\r\n\r\n    // Initialize merge stack with individual traits\r\n    const initialSublists = traitList.map((trait) => [trait]);\r\n    const totalComparisons = calculateTotalComparisons(traitList.length);\r\n\r\n    const initialStateSnapshot = {\r\n      mergeStack: [initialSublists],\r\n      comparisonStack: [],\r\n      currentMatch: null,\r\n      currentStanding: [],\r\n      isComplete: false,\r\n      progressPercent: 0,\r\n      comparisonsMade: 0,\r\n      totalComparisons,\r\n    };\r\n\r\n    // Prepare the first comparison without updating history\r\n    prepareNextComparison(initialStateSnapshot);\r\n  }\r\n\r\n  function prepareNextComparison(state) {\r\n    const { mergeStack, comparisonStack } = state;\r\n\r\n    if (\r\n      mergeStack.length === 1 &&\r\n      mergeStack[0].length === 1 &&\r\n      comparisonStack.length === 0\r\n    ) {\r\n      // Sorting complete\r\n      const finalList = mergeStack[0][0];\r\n      const newState = {\r\n        ...state,\r\n        currentStanding: finalList.slice(0, TOP_K),\r\n        isComplete: true,\r\n        progressPercent: 100,\r\n        currentMatch: null,\r\n      };\r\n      setCurrentState(newState);\r\n      return;\r\n    }\r\n\r\n    const currentLevel = mergeStack[mergeStack.length - 1];\r\n\r\n    if (currentLevel.length === 0) {\r\n      // Move to the next level\r\n      const newMergeStack = mergeStack.slice(0, -1);\r\n      const newState = { ...state, mergeStack: newMergeStack };\r\n      prepareNextComparison(newState);\r\n      return;\r\n    }\r\n\r\n    if (currentLevel.length === 1) {\r\n      // Move the last sublist up a level\r\n      const lastSublist = currentLevel[0];\r\n      const newMergeStack = mergeStack.slice(0, -1);\r\n\r\n      if (newMergeStack.length === 0) {\r\n        // Sorting complete\r\n        const newState = {\r\n          ...state,\r\n          currentStanding: lastSublist.slice(0, TOP_K),\r\n          isComplete: true,\r\n          progressPercent: 100,\r\n          currentMatch: null,\r\n        };\r\n        setCurrentState(newState);\r\n        return;\r\n      } else {\r\n        const updatedLevel = [\r\n          ...newMergeStack[newMergeStack.length - 1],\r\n          lastSublist,\r\n        ];\r\n        newMergeStack[newMergeStack.length - 1] = updatedLevel;\r\n        const newState = { ...state, mergeStack: newMergeStack };\r\n        prepareNextComparison(newState);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Prepare the next comparison\r\n    const leftSublist = currentLevel[0];\r\n    const rightSublist = currentLevel[1];\r\n    const remainingSublists = currentLevel.slice(2);\r\n\r\n    const newCurrentLevel = [...remainingSublists];\r\n    const newMergeStack = [...mergeStack.slice(0, -1), newCurrentLevel];\r\n\r\n    const newComparison = {\r\n      leftSublist,\r\n      rightSublist,\r\n      mergedSublist: [],\r\n      leftIndex: 0,\r\n      rightIndex: 0,\r\n    };\r\n\r\n    const newComparisonStack = [...comparisonStack, newComparison];\r\n\r\n    const leftTrait = leftSublist[0];\r\n    const rightTrait = rightSublist[0];\r\n\r\n    const newState = {\r\n      ...state,\r\n      mergeStack: newMergeStack,\r\n      comparisonStack: newComparisonStack,\r\n      currentMatch: { left: leftTrait, right: rightTrait },\r\n    };\r\n\r\n    setCurrentState(newState);\r\n  }\r\n\r\n  function matchWin(winner) {\r\n    if (currentState.comparisonStack.length === 0) {\r\n      prepareNextComparison(currentState);\r\n      history.current = [...history.current, currentState];\r\n      return; // Stop further execution until prepareNextComparison completes\r\n    }\r\n\r\n    const state = currentState;\r\n    const { mergeStack, comparisonStack, comparisonsMade, totalComparisons } =\r\n      state;\r\n    // Clone the comparison stack and merge stack to avoid mutations\r\n    const currentComparisonStack = comparisonStack.map((comp) => ({\r\n      ...comp,\r\n      mergedSublist: [...comp.mergedSublist],\r\n    }));\r\n    const currentMerge = {\r\n      ...currentComparisonStack[currentComparisonStack.length - 1],\r\n    };\r\n\r\n    const { leftSublist, rightSublist, mergedSublist, leftIndex, rightIndex } =\r\n      currentMerge;\r\n\r\n    const leftTrait = leftSublist[leftIndex];\r\n    const rightTrait = rightSublist[rightIndex];\r\n\r\n    if (winner !== leftTrait && winner !== rightTrait) {\r\n      console.warn(\"Winner does not match current traits\");\r\n      return;\r\n    }\r\n\r\n    // Update indices and mergedSublist immutably\r\n    let newLeftIndex = leftIndex;\r\n    let newRightIndex = rightIndex;\r\n\r\n    if (winner === leftTrait) {\r\n      newLeftIndex += 1;\r\n    } else {\r\n      newRightIndex += 1;\r\n    }\r\n\r\n    const newMergedSublist = [...mergedSublist, winner];\r\n\r\n    // Create updated currentMerge\r\n    const newCurrentMerge = {\r\n      ...currentMerge,\r\n      mergedSublist: newMergedSublist,\r\n      leftIndex: newLeftIndex,\r\n      rightIndex: newRightIndex,\r\n    };\r\n\r\n    // Update the comparison stack immutably\r\n    const newComparisonStack = [...currentComparisonStack];\r\n    newComparisonStack[newComparisonStack.length - 1] = newCurrentMerge;\r\n\r\n    let newCurrentMatch = null;\r\n    let newMergeStack = mergeStack.map((level) =>\r\n      level.map((sublist) => [...sublist])\r\n    );\r\n\r\n    const newComparisonsMade = comparisonsMade + 1;\r\n    const progressPercent = Math.min(\r\n      (newComparisonsMade / totalComparisons) * 100,\r\n      100\r\n    );\r\n\r\n    if (\r\n      newLeftIndex < leftSublist.length &&\r\n      newRightIndex < rightSublist.length\r\n    ) {\r\n      // Next comparison in the current merge\r\n      newCurrentMatch = {\r\n        left: leftSublist[newLeftIndex],\r\n        right: rightSublist[newRightIndex],\r\n      };\r\n\r\n      const newState = {\r\n        ...state,\r\n        mergeStack: newMergeStack,\r\n        comparisonStack: newComparisonStack,\r\n        currentMatch: newCurrentMatch,\r\n        comparisonsMade: newComparisonsMade,\r\n        progressPercent,\r\n      }; // Update state and add to history\r\n      setCurrentState(newState);\r\n      history.current = [...history.current, newState];\r\n    } else {\r\n      // One or both sublists are exhausted\r\n      // Add remaining items to mergedSublist\r\n      const remainingLeft = leftSublist.slice(newLeftIndex);\r\n      const remainingRight = rightSublist.slice(newRightIndex);\r\n      const finalMergedSublist = [\r\n        ...newMergedSublist,\r\n        ...remainingLeft,\r\n        ...remainingRight,\r\n      ];\r\n\r\n      // Remove the completed merge from the stack\r\n      newComparisonStack.pop();\r\n\r\n      // Add merged sublist to the next level immutably\r\n      if (newMergeStack.length === 0) {\r\n        newMergeStack = [[finalMergedSublist]];\r\n      } else {\r\n        const updatedLevelIndex = newMergeStack.length - 1;\r\n        const updatedLevel = [\r\n          ...newMergeStack[updatedLevelIndex],\r\n          finalMergedSublist,\r\n        ];\r\n        newMergeStack[updatedLevelIndex] = updatedLevel;\r\n      }\r\n\r\n      const newState = {\r\n        ...state,\r\n        mergeStack: newMergeStack,\r\n        comparisonStack: newComparisonStack,\r\n        comparisonsMade: newComparisonsMade,\r\n        progressPercent,\r\n      };\r\n      // Check if there are more comparisons to make\r\n      if (newComparisonStack.length > 0) {\r\n        const nextMerge = newComparisonStack[newComparisonStack.length - 1];\r\n        newCurrentMatch = {\r\n          left: nextMerge.leftSublist[nextMerge.leftIndex],\r\n          right: nextMerge.rightSublist[nextMerge.rightIndex],\r\n        };\r\n        newState.currentMatch = newCurrentMatch;\r\n      } else {\r\n        // No more comparisons at this level, prepare the next one\r\n        prepareNextComparison(newState);\r\n        history.current = [...history.current, newState];\r\n        return;\r\n      }\r\n\r\n      // Update state and add to history\r\n      setCurrentState(newState);\r\n      history.current = [...history.current, newState];\r\n    }\r\n  }\r\n\r\n  function revertMatch() {\r\n    if (history.current.length < 1) {\r\n      console.error(\"No moves to revert\");\r\n      return;\r\n    }\r\n\r\n    // Retrieve the last state from history, removing the current state\r\n    const previousState = history.current[history.current.length - 1];\r\n    history.current = history.current.slice(0, -1);\r\n\r\n    setCurrentState(previousState);\r\n  }\r\n\r\n  function calculateTotalComparisons(n) {\r\n    return Math.ceil(n * Math.log2(n));\r\n  }\r\n\r\n  const { currentMatch, currentStanding, isComplete, progressPercent } =\r\n    currentState || {};\r\n\r\n  const rankingState = {\r\n    ...currentState,\r\n  };\r\n\r\n  return {\r\n    progressPercent,\r\n    currentStanding,\r\n    currentMatch,\r\n    matchWin,\r\n    revertMatch,\r\n    isComplete,\r\n    rankingState,\r\n  };\r\n}\r\n\r\nexport default useMergeSort;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport RankingTrait from \"./TraitCards/RankingTrait\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport { ProgressContext } from \"./App\";\r\nimport useMergeSort from \"../utils/useMergeSort\";\r\nimport { UndoContext } from \"./App\";\r\nimport \"../style/CardStyle.scss\";\r\n\r\nconst RankingPage = ({ topTraits, setTopTraits, history, initalProgress }) => {\r\n  // Memoize topTraits to prevent unnecessary re-initialization\r\n  const memoizedTopTraits = useMemo(() => topTraits.slice(), [topTraits]);\r\n  useEffect(() => {\r\n    console.log(\"Memoized topTraits:\", memoizedTopTraits);\r\n  }, [memoizedTopTraits]);\r\n\r\n  const {\r\n    progressPercent,\r\n    currentMatch,\r\n    currentStanding,\r\n    matchWin,\r\n    revertMatch,\r\n    isComplete,\r\n  } = useMergeSort(memoizedTopTraits, initalProgress?.data?.ranking);\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const [leftCardClass, setLeftCardClass] = useState(\"\");\r\n  const [rightCardClass, setRightCardClass] = useState(\"\");\r\n  const { undoFunction } = useContext(UndoContext);\r\n\r\n  useEffect(() => {\r\n    if (progressPercent) {\r\n      setProgressState(progressPercent);\r\n    }\r\n  }, [progressPercent, setProgressState]);\r\n\r\n  const handleRoundWin = useCallback(\r\n    (trait) => {\r\n      // Trigger slide-out animation\r\n      if (trait === currentMatch.left) {\r\n        setLeftCardClass(\"slide-out\");\r\n        setRightCardClass(\"fade-out\");\r\n      } else {\r\n        setLeftCardClass(\"fade-out\");\r\n        setRightCardClass(\"slide-out\");\r\n      }\r\n\r\n      // Set timeout to update the match and reset animations after slide-out is complete\r\n      setTimeout(() => {\r\n        matchWin(trait);\r\n        setLeftCardClass(\"slide-in\");\r\n        setRightCardClass(\"slide-in\");\r\n\r\n        // Set another timeout to reset the classes after the slide-in animation\r\n        setTimeout(() => {\r\n          setLeftCardClass(\"\");\r\n          setRightCardClass(\"\");\r\n        }, 600);\r\n      }, 600); // Timeout matches the slide-out animation duration\r\n    },\r\n    [currentMatch, matchWin]\r\n  );\r\n\r\n  const handleRevertMatch = useCallback(() => {\r\n    revertMatch();\r\n    setLeftCardClass(\"slide-in\");\r\n    setRightCardClass(\"slide-in\");\r\n    setTimeout(() => {\r\n      setLeftCardClass(\"\");\r\n      setRightCardClass(\"\");\r\n    }, 600);\r\n  }, [revertMatch]);\r\n\r\n  useEffect(() => {\r\n    undoFunction.current = handleRevertMatch;\r\n  }, [handleRevertMatch, undoFunction]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"isComplete:\", isComplete);\r\n    if (isComplete) {\r\n      setTopTraits(currentStanding);\r\n      setActiveStepState(3);\r\n      history.push(\"/Results\");\r\n    }\r\n  }, [isComplete]);\r\n\r\n  // Ensure topTraits is populated before rendering\r\n  if (!topTraits || topTraits.length === 0) {\r\n    return <div>Loading traits...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={isMobile ? 60 : 3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        direction={isMobile ? \"row\" : \"column\"}\r\n      >\r\n        {currentMatch && currentMatch.left && (\r\n          <Grid item>\r\n            <RankingTrait\r\n              className={leftCardClass}\r\n              trait={currentMatch.left}\r\n              onClick={() => handleRoundWin(currentMatch.left)}\r\n              key={currentMatch.left}\r\n            />\r\n          </Grid>\r\n        )}\r\n        {currentMatch && currentMatch.right && (\r\n          <Grid item>\r\n            <RankingTrait\r\n              className={rightCardClass}\r\n              trait={currentMatch.right}\r\n              onClick={() => handleRoundWin(currentMatch.right)}\r\n              key={currentMatch.right}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n","import React, { forwardRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst HelpDialogBox = ({ currentPage }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [grow, setGrow] = React.useState(false);\r\n\r\n  const doGrow = () => {\r\n    setGrow(true);\r\n    setTimeout(() => {\r\n      setGrow(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    doGrow();\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  const helpData = {\r\n    Selection: {\r\n      title: \"Selection\",\r\n      description: `Trait Ranker helps you discover and prioritize your most important personality traits. ${\r\n        isMobile ? \"Drag\" : \"Swipe \"\r\n      } right to mark a trait as valuable or left to skip it. Press the help button anytime for guidance.`,\r\n      Media: \"https://i.imgur.com/7G5Jwbk.gif\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleOpen} className={`${grow && \"grow\"}`}>\r\n        <HelpOutlineIcon fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Dialog\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        open={open}\r\n        fullScreen\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          marginLeft: \"1vw\",\r\n          marginRight: \"1vw\",\r\n        }}\r\n        PaperProps={{\r\n          style: { borderTopLeftRadius: 6, borderTopRightRadius: 6 },\r\n        }}\r\n      >\r\n        <DialogTitle>{helpData[\"Selection\"].title}</DialogTitle>\r\n        <IconButton\r\n          style={{ position: \"absolute\", right: \"0\" }}\r\n          color=\"inherit\"\r\n          onClick={handleClose}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContentText paragraph={false} style={{ margin: 10 }}>\r\n          {helpData[\"Selection\"].description}\r\n        </DialogContentText>\r\n        <img\r\n          src={helpData[\"Selection\"].Media}\r\n          style={{ width: \"100%\" }}\r\n          alt=\"GIF of swiping on mobile\"\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialogBox;\r\n","export default __webpack_public_path__ + \"static/media/logo512.3b8a96fd.png\";","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport logo512 from \"../../Assets/logo512.png\";\r\n\r\nconst HomeButton = ({ history }) => {\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleHome = () => {\r\n    setOpenDialog(true);\r\n  };\r\n  const ConfirmDialog = () => (\r\n    <Dialog\r\n      open={openDialog}\r\n      onClose={handleCancel}\r\n      aria-labelledby=\"confirm-dialog-title\"\r\n      aria-describedby=\"confirm-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"confirm-dialog-title\">{\"Return to Home?\"}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"confirm-dialog-description\">\r\n          Are you sure you want to return to the home page? Your current\r\n          progress will be lost.\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={handleCancel}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          autoFocus\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleConfirm} color=\"warning\" variant=\"contained\">\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  const handleConfirm = () => {\r\n    setOpenDialog(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <ConfirmDialog />\r\n      <IconButton\r\n        color=\"inherit\"\r\n        onClick={handleHome}\r\n        style={{ maxWidth: \"7vh\", maxHeight: \"7vh\" }}\r\n      >\r\n        <img\r\n          src={logo512}\r\n          alt=\"The trait ranker icon\"\r\n          style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n        />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\nexport default HomeButton;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nconst appTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#caf0f9\",\r\n    },\r\n    secondary: {\r\n      main: \"#90e0ef\",\r\n    },\r\n    warning: {\r\n      main: \"#fa4d4d\",\r\n    },\r\n  },\r\n});\r\nexport default appTheme;\r\n","//Taken from https://stackoverflow.com/questions/65042023/how-to-do-an-stepper-with-progress-bars-material-ui\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport styled from \"@emotion/styled\";\r\nimport CompareArrowsOutlinedIcon from \"@mui/icons-material/CompareArrowsOutlined\";\r\nimport SortOutlinedIcon from \"@mui/icons-material/SortOutlined\";\r\nimport WorkspacePremiumOutlinedIcon from \"@mui/icons-material/WorkspacePremiumOutlined\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport appTheme from \"../../style/appTheme\";\r\n\r\nfunction CustomStepper(props) {\r\n  const StyledStepper = styled(\"ul\")({\r\n    display: \"flex\",\r\n    flexFlow: \"row nowrap\",\r\n    justifyContent: \"space-around\",\r\n    padding: 0,\r\n    width: \"100%\",\r\n  });\r\n  const StyledStepperStep = styled(\"li\")({\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexFlow: \"row nowrap\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  });\r\n  const StyledStepperStepIndex = styled(\"div\")(({ currentStep, done }) => ({\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    lineHeight: \"30px\",\r\n    borderRadius: \"50%\",\r\n    background:\r\n      currentStep || done ? appTheme.palette.secondary.main : \"#dedede\",\r\n    color: currentStep || done ? \"#000\" : \"#999\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledLabelContainer = styled(\"div\")({\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"center\",\r\n  });\r\n\r\n  const { steps, current, progress } = props;\r\n\r\n  const theme = useTheme();\r\n  function StepContent({ done, index }) {\r\n    return done ? \"✓\" : index + 1;\r\n  }\r\n\r\n  const ProgressBar = ({ current, step, progress }) => {\r\n    console.log(progress);\r\n    let value = 0;\r\n    if (current + 1 === step) {\r\n      value = progress;\r\n    } else if (current >= step) {\r\n      value = 100;\r\n    }\r\n\r\n    return (\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={value}\r\n        sx={{\r\n          \"&.MuiLinearProgress-root\": {\r\n            flex: \"1 1 auto\",\r\n            position: \"absolute\",\r\n            top: 12,\r\n            left: \"calc(-50% + 20px)\",\r\n            right: \"calc(50% + 20px)\",\r\n            backgroundColor: \"#ffd8ba61\",\r\n          },\r\n          \"& .MuiLinearProgress-bar\": {\r\n            backgroundColor: appTheme.palette.secondary.main,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function getStepIcon(currentStep) {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <CompareArrowsOutlinedIcon />;\r\n      case 1:\r\n        return <SortOutlinedIcon />;\r\n      case 2:\r\n        return <WorkspacePremiumOutlinedIcon />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function renderStep(label, key) {\r\n    const { current, progress } = this;\r\n    const done = key < current;\r\n    const currentStep = key === current;\r\n    return (\r\n      <StyledStepperStep key={key}>\r\n        <StyledLabelContainer>\r\n          <StyledStepperStepIndex currentStep={currentStep} done={done}>\r\n            {getStepIcon(key)}\r\n          </StyledStepperStepIndex>\r\n        </StyledLabelContainer>\r\n        {!!key && (\r\n          <ProgressBar current={current} step={key} progress={progress} />\r\n        )}\r\n      </StyledStepperStep>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledStepper>\r\n      {steps.map(renderStep, { current, progress })}\r\n    </StyledStepper>\r\n  );\r\n}\r\n\r\nCustomStepper.propTypes = {\r\n  steps: PropTypes.array.isRequired,\r\n  current: PropTypes.number.isRequired,\r\n  progress: PropTypes.number,\r\n};\r\n\r\nexport default CustomStepper;\r\n","import React, { useContext } from \"react\";\r\nimport { AppBar, Box, Toolbar, IconButton, Grid } from \"@mui/material\";\r\nimport { FaUndo } from \"react-icons/fa\";\r\n\r\nimport HelpDialogBox from \"./HelpDialogBox\";\r\nimport HomeButton from \"./HomeButton\";\r\nimport CustomStepper from \"./CustomStepper\";\r\nimport { ProgressContext } from \"../App\";\r\nimport { UndoContext } from \"../App\";\r\nconst steps = [\"Label 1\", \"Label 2\", \"Label 3\"];\r\nconst NavBar = ({ history }) => {\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const { undoFunction } = useContext(UndoContext);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <HomeButton history={history} />\r\n            </Grid>\r\n            <Grid item flexGrow={1}>\r\n              <CustomStepper\r\n                steps={steps}\r\n                current={activeStepState}\r\n                progress={progressState}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <HelpDialogBox />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <IconButton onClick={undoFunction.current}>\r\n                    <FaUndo />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default NavBar;\r\n","// SelectionTrait.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons, traitDefinitions } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid, Typography } from \"@mui/material\";\r\nimport CardHelp from \"./CardHelp\";\r\n\r\nconst SelectionTrait = ({ trait, isStarter, provided }) => {\r\n  const isMobile = useMediaQuery(\"(max-width:1024px)\");\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const toggleFlipped = () => {\r\n    setFlipped(!flipped);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card selection ${flipped ? \"flipped\" : \"\"}`}\r\n      {...provided.dragHandleProps}\r\n      draggable={true}\r\n      id={trait}\r\n    >\r\n      <div className=\" card-inner\">\r\n        {/* Front Side */}\r\n        <div className=\"card-front\">\r\n          <CardHelp\r\n            toggleFlipped={toggleFlipped}\r\n            flipped={flipped}\r\n            isStarter={isStarter}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconContext.Provider\r\n                value={isMobile ? { size: \"60vw\" } : { size: \"6vw\" }}\r\n              >\r\n                {traitIcons[trait]}\r\n              </IconContext.Provider>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/* Back Side */}\r\n        <div className=\"card-back\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{traitDefinitions[trait]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionTrait;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport SelectionTrait from \"./SelectionTrait\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\r\n  if (style?.transform) {\r\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\r\n    return {\r\n      ...style,\r\n      transform: axisLockX,\r\n    };\r\n  }\r\n  return style;\r\n};\r\n\r\nfunction getStyle(style, snapshot) {\r\n  style = draggingCustomStyle(style);\r\n  if (!snapshot.isDropAnimating) {\r\n    return style;\r\n  }\r\n  const { moveTo, duration } = snapshot.dropAnimation;\r\n  const draggingOver = snapshot.draggingOver;\r\n  console.log(draggingOver);\r\n  let offset = 0;\r\n  if (draggingOver === \"column1\") {\r\n    offset = -100;\r\n  } else if (draggingOver === \"column3\") {\r\n    offset = 100;\r\n  }\r\n  // move to the right spot\r\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\r\n\r\n  // patching the existing style\r\n  return {\r\n    ...style,\r\n    transform: translate,\r\n    // slowing down the drop\r\n    transition: `all  ${duration + 0.2}s`,\r\n  };\r\n}\r\n\r\nconst TraitDraggable = ({ trait, index, wiggle, firstCard, slideUp }) => {\r\n  return (\r\n    <Draggable draggableId={trait} key={trait} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n          style={getStyle(provided.draggableProps.style, snapshot)}\r\n          className={`${wiggle ? \"wiggle-animation\" : \"\"}${\r\n            slideUp ? \" slide-up\" : \"\"\r\n          }`}\r\n        >\r\n          <SelectionTrait\r\n            trait={trait}\r\n            firstCard={firstCard}\r\n            provided={provided}\r\n          />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default TraitDraggable;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { Grid } from \"@mui/material\";\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TraitList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? props.hoverColor : \"white\"};\r\n  display: flex;\r\n  align-items: center;\r\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\r\n  min-height: 100vh;\r\n  max-width: ${(props) => props.isStarter && \"1px\"};\r\n  ${(props) =>\r\n    props.showHoverColor &&\r\n    `\r\n    background-color: ${props.hoverColor};\r\n  `}\r\n`;\r\n\r\nconst SelectionDroppable = ({\r\n  column,\r\n  isStarter = false,\r\n  slideUp = false,\r\n  hoverColor = \"lightBlue\",\r\n}) => {\r\n  const [shouldWiggle, setShouldWiggle] = useState(isStarter);\r\n  const [showHoverColor, setShowHoverColor] = useState(false);\r\n  const [firstCard, setFirstCard] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (isStarter) {\r\n      const timer = setTimeout(() => {\r\n        setShouldWiggle(false);\r\n        setFirstCard(false);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setShowHoverColor(true);\r\n      const timer = setTimeout(() => {\r\n        setShowHoverColor(false);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isStarter]);\r\n\r\n  return (\r\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\r\n      {(provided, snapshot) => (\r\n        <TraitList\r\n          classname=\"cards stack\"\r\n          ref={provided.innerRef}\r\n          isStarter={isStarter}\r\n          hoverColor={hoverColor}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n          showHoverColor={showHoverColor}\r\n          {...provided.droppableProps}\r\n        >\r\n          {isStarter && (\r\n            <TraitDraggable\r\n              key={column?.traitIds[0]}\r\n              trait={column?.traitIds[0]}\r\n              index={column?.traitIds.indexOf(column?.traitIds[0])}\r\n              wiggle={shouldWiggle}\r\n              firstCard={firstCard}\r\n              slideUp={slideUp}\r\n            />\r\n          )}\r\n          {provided.placeholder}\r\n        </TraitList>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default SelectionDroppable;\r\n","import React from \"react\";\r\nimport allTraits from \"../utils/listOfAllTraits\";\r\n\r\nconst skipSelection = (\r\n  setTopTraits,\r\n  allTraits,\r\n  history,\r\n  setActiveStepState\r\n) => {\r\n  // Select half of the topTraits\r\n  const halfLength = Math.ceil(allTraits.length / 2);\r\n  const selectedTraits = allTraits.slice(0, halfLength);\r\n\r\n  // Set the selected traits\r\n  setTopTraits(selectedTraits);\r\n  setActiveStepState(1);\r\n\r\n  console.log(\"Skipping to ranking with traits:\", selectedTraits);\r\n\r\n  // Navigate to the Rank page\r\n  history.push(\"/Rank\");\r\n};\r\n\r\nexport const SkipSelectionButton = ({\r\n  setTopTraits,\r\n  history,\r\n  setActiveStepState,\r\n}) => {\r\n  const handleSkipSelection = () => {\r\n    skipSelection(setTopTraits, allTraits, history, setActiveStepState);\r\n  };\r\n\r\n  if (process.env.NODE_ENV !== \"development\") {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ position: \"fixed\", bottom: \"10px\", right: \"10px\", zIndex: 9999 }}\r\n    >\r\n      <button\r\n        onClick={handleSkipSelection}\r\n        style={{\r\n          padding: \"10px\",\r\n          backgroundColor: \"#ff4081\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Skip Selection\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","// @flow\r\nimport React, {\r\n  useEffect,\r\n  useContext,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport SelectionDroppable from \"./SelectionDroppable\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport { ProgressContext } from \"../App\";\r\nimport { TutorialContext } from \"../App\";\r\nimport { SkipSelectionButton } from \"../../utils/devTools\";\r\nimport { UndoContext } from \"../App\";\r\nconst SelectionPage = ({\r\n  columnData,\r\n  setColumnData,\r\n  setTopTraits,\r\n  history,\r\n  swipeHandlers,\r\n  topTraits,\r\n}) => {\r\n  useEffect(() => {\r\n    if (columnData.columns.column2.traitIds.length === 0) {\r\n      handleClearStack(columnData.columns.column3.traitIds);\r\n    }\r\n  }, [columnData, history, setTopTraits, topTraits]);\r\n\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const { tutorialStrings } = useContext(TutorialContext);\r\n  const [tutorialStringsState, setTutorialStringsState] = tutorialStrings;\r\n  const numberOfTraits = useRef(columnData.columns.column2.traitIds.length);\r\n  const { undoFunction } = useContext(UndoContext);\r\n  const isUndoing = useRef(false);\r\n  const [shouldSlideUp, setShouldSlideUp] = useState(false);\r\n\r\n  const [selectionHistory, setSelectionHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (columnData.columns.column2.traitIds.length === 0) return;\r\n    const remainingTraits = columnData.columns.column2.traitIds.length;\r\n    const completedTraits = numberOfTraits.current - remainingTraits;\r\n    const percentComplete = (completedTraits / numberOfTraits.current) * 100;\r\n    setProgressState(percentComplete);\r\n  }, [columnData, progressState, setProgressState, numberOfTraits]);\r\n\r\n  useEffect(() => {\r\n    // Store the current columnData in history when it changes\r\n    if (!isUndoing.current) {\r\n      setSelectionHistory((prevHistory) => [\r\n        ...prevHistory,\r\n        { ...columnData }, // Create a copy to avoid mutation\r\n      ]);\r\n    }\r\n  }, [columnData]);\r\n\r\n  const undoLastSelection = useCallback(() => {\r\n    setShouldSlideUp(true);\r\n    isUndoing.current = true;\r\n    setTimeout(() => {\r\n      setShouldSlideUp(false);\r\n      isUndoing.current = false;\r\n    }, 600);\r\n    setSelectionHistory((prevHistory) => {\r\n      if (prevHistory.length <= 1) return prevHistory; // Prevent undo when no history exists\r\n\r\n      // Create a new history array without the last entry\r\n      const newHistory = prevHistory.slice(0, -1);\r\n\r\n      // Restore the column data to the previous state (second to last entry)\r\n      const lastSelection = newHistory[newHistory.length - 1];\r\n\r\n      // Update the columnData to the previous state\r\n      setColumnData(lastSelection);\r\n      return newHistory; // Return updated history\r\n    });\r\n  }, [setColumnData]);\r\n\r\n  // Set the undo function in the context whenever selection history changes\r\n  useEffect(() => {\r\n    undoFunction.current = undoLastSelection;\r\n  }, [undoLastSelection, undoFunction]);\r\n\r\n  function handleClearStack(topTraits) {\r\n    if (topTraits.length < 7) {\r\n      // Encourage user to add more traits\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          column2: {\r\n            ...columnData.columns.column2,\r\n            traitIds: [...columnData.columns.column1.traitIds],\r\n          },\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      setTutorialStringsState(\"Let's try adding a few more traits.\");\r\n    } else if (topTraits.length > 24) {\r\n      // Encourage user to remove traits\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          column2: {\r\n            ...columnData.columns.column2,\r\n            traitIds: [...columnData.columns.column3.traitIds],\r\n          },\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      setTutorialStringsState(\r\n        \"Let's try removing a few traits to narrow it down.\"\r\n      );\r\n    } else {\r\n      // Progress to ranking page\r\n      setTopTraits(columnData.columns.column3.traitIds);\r\n      setActiveStepState(1);\r\n      setProgressState(0);\r\n      history.push(\"/Rank\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <SkipSelectionButton\r\n        setTopTraits={setTopTraits}\r\n        history={history}\r\n        setActiveStepState={setActiveStepState}\r\n      />\r\n      <div {...swipeHandlers}>\r\n        <Grid container spacing={0} wrap=\"nowrap\">\r\n          <SelectionDroppable\r\n            key={columnData.columns.column1.id}\r\n            column={columnData.columns.column1}\r\n            hoverColor={\"LightPink\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column2.id}\r\n            column={columnData.columns.column2}\r\n            isStarter={true}\r\n            slideUp={shouldSlideUp}\r\n            hoverColor={\"\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column3.id}\r\n            column={columnData.columns.column3}\r\n            hoverColor={\"LightGreen\"}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default SelectionPage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Card, Grid } from \"@mui/material\";\r\n\r\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\r\n  const [isBouncing, setIsBouncing] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  useEffect(() => {\r\n    if (firstUpdate.current == true) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setIsBouncing(true);\r\n      setTimeout(() => setCurrentColor(color), 250); //timeout set to half bounce time to time color change to apex\r\n    }, 500 * index); //timeout set to total bounce time to have items bounce one at a time\r\n    setIsBouncing(false);\r\n  }, [color]);\r\n\r\n  return (\r\n    <Draggable draggableId={trait} index={index} isDragDisabled={!isDraggable}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Card\r\n            className={`wideCard ${isBouncing ? \"bounce\" : \"\"}`}\r\n            sx={{ backgroundColor: currentColor }}\r\n          >\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <h3>{trait}</h3>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default FreeDragTrait;\r\n","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DragColumn = styled.div``;\r\n\r\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\r\n  return (\r\n    <div>\r\n      <Droppable key={column.id} droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <DragColumn\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {column.traitIds.map((trait, index) => {\r\n                return (\r\n                  <Grid item key={trait}>\r\n                    <FreeDragTrait\r\n                      trait={trait}\r\n                      index={column.traitIds.indexOf(trait)}\r\n                      color={colors[index]}\r\n                      isDraggable={isDraggable}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </DragColumn>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default ReorderableColumn;\r\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.replace('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport TryItButton from \"./TryItButton\";\r\n\r\nconst ReorderGuess = ({\r\n  column,\r\n  onDone,\r\n  colors,\r\n  showTryIt,\r\n  history,\r\n  isDraggable,\r\n  showLockIn,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Grid item>\r\n        <ReorderableColumn\r\n          column={column}\r\n          colors={colors}\r\n          isDraggable={isDraggable}\r\n        />\r\n      </Grid>\r\n      <Grid item sx={{ paddingTop: \"4vh\" }}>\r\n        {showLockIn && (\r\n          <Button onClick={onDone} variant=\"contained\">\r\n            Lock in\r\n          </Button>\r\n        )}\r\n        {showTryIt && <TryItButton history={history} />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ReorderGuess;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport initialTraits from \"../Selection/initialTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport ReorderGuess from \"./ReorderGuess\";\r\nimport { trackGuessed } from \"../../utils/mixpanel\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\r\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\r\n  let wrongTraits = useRef([]);\r\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\r\n  let finalList = useRef([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n  const [currentTraits, setCurrentTraits] = useState([]);\r\n  const [showPicks, setShowPicks] = useState(true);\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [showTryIt, setShowIt] = useState(false);\r\n  const [showLockIn, setShowLockIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    while (wrongTraits.current.length < 7) {\r\n      //get eligible red herrings\r\n      if (!traitsLeft.current.includes(traitPool[0])) {\r\n        wrongTraits.current.push(traitPool[0]);\r\n      }\r\n      traitPool = traitPool.splice(1, traitPool.length);\r\n    }\r\n    loadNextTraits();\r\n  }, [traitPool]);\r\n\r\n  const handlePick = (pick) => {\r\n    finalList.current.push(pick);\r\n    if (traitsLeft.current.length === 0) {\r\n      const newTraits = {\r\n        ...columnData.columns.guessing,\r\n        traitIds: finalList.current,\r\n      };\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          guessing: newTraits,\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      trackGuessed(newColumnData.columns.guessing);\r\n      setShowColumn(true);\r\n      setShowPicks(false);\r\n    }\r\n    loadNextTraits();\r\n  };\r\n  const loadNextTraits = () => {\r\n    setCurrentTraits(\r\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\r\n    );\r\n    console.log(\"TraitsLeft: \", traitsLeft.current);\r\n    console.log(\"WrongTaits: \", wrongTraits.current);\r\n    console.log(finalList.current);\r\n  };\r\n  const onDone = () => {\r\n    console.log(\"done!\");\r\n    let guessColors = [];\r\n    const correctTraits = traits.slice(0, 7);\r\n    const guess = columnData.columns.guessing.traitIds;\r\n    for (let i = 0; i < correctTraits.length; i++) {\r\n      if (correctTraits[i] === guess[i]) {\r\n        guessColors.push(\"green\");\r\n        console.log(\"correct\", correctTraits[i], guess[i]);\r\n      } else if (correctTraits.includes(guess[i])) {\r\n        guessColors.push(\"gold\");\r\n        console.log(\"in there\", correctTraits[i], guess[i]);\r\n      } else {\r\n        guessColors.push(\"LightGray\");\r\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\r\n      }\r\n    }\r\n    setColors(guessColors);\r\n    setShowIt(true);\r\n    setShowLockIn(false);\r\n    setIsDraggable(false);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const guessTutorial = [\r\n    \"Select the traits actually in the list.\",\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n  return (\r\n    <div>\r\n      {showPicks && (\r\n        <Grid\r\n          container\r\n          spacing={isMobile ? 60 : 3}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          direction={isMobile ? \"row\" : \"column\"}\r\n        >\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[0])}\r\n              trait={currentTraits[0]}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[1])}\r\n              trait={currentTraits[1]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showColumn && (\r\n        <ReorderGuess\r\n          column={columnData.columns.guessing}\r\n          onDone={onDone}\r\n          colors={colors}\r\n          showTryIt={showTryIt}\r\n          showLockIn={showLockIn}\r\n          history={history}\r\n          isDraggable={isDraggable}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GuessPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDBTraits } from \"../../utils/Firebase\";\r\nimport { Grid, Typography, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport SmallTraitList from \"../SmallTraitList\";\r\nimport GuessPage from \"./GuessPage\";\r\nimport TryItButton from \"./TryItButton\";\r\nimport { trackShowTraits, trackGuessTraits } from \"../../utils/mixpanel\";\r\n\r\nconst SharedPage = ({ columnData, setColumnData, history }) => {\r\n  let { id } = useParams();\r\n  const [storedTraits, setStoredTraits] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [showGuessing, setShowGuessing] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getDBTraits(id).then((result) => {\r\n        setStoredTraits(result);\r\n      });\r\n    })();\r\n  }, [id]);\r\n  const showTraits = () => {\r\n    trackShowTraits();\r\n    setShowList(true);\r\n    setShowOptions(false);\r\n  };\r\n  const showGuess = () => {\r\n    trackGuessTraits();\r\n    setShowGuessing(true);\r\n    setShowOptions(false);\r\n  };\r\n  console.log(\"storedTraits\", storedTraits);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={isMobile ? 60 : 3}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction={isMobile ? \"row\" : \"column\"}\r\n    >\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\r\n        </Grid>\r\n      )}\r\n\r\n      {showList && (\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant={isMobile ? \"h3\" : \"h5\"} color=\"black\">\r\n                Top traits\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <SmallTraitList traits={storedTraits} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5vw\" }}>\r\n              <TryItButton history={history} source=\"Guess\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showGuessing && (\r\n        <Grid item>\r\n          <GuessPage\r\n            traits={storedTraits}\r\n            columnData={columnData}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SharedPage;\r\n","// @flow\r\nimport React, { useEffect, useRef, useState, createContext } from \"react\";\r\nimport initialTraits from \"./Selection/initialTraits\";\r\nimport ResultsPage from \"./ResultsPage\";\r\nimport RankingPage from \"./RankingPage\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport { HashRouter, Route, useHistory, Redirect } from \"react-router-dom\";\r\nimport SelectionPage from \"./Selection/SelectionPage\";\r\nimport ReactGA from \"react-ga\";\r\nimport SharedPage from \"./Share/SharedPage\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport tweenFunctions from \"tween-functions\";\r\nimport { makeAndTrackId } from \"../utils/mixpanel\";\r\nimport appTheme from \"../style/appTheme\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\n\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nexport const ProgressContext = createContext();\r\nexport const TutorialContext = createContext();\r\nexport const UndoContext = createContext();\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const [columnData, setColumnData] = useState(initialTraits);\r\n  const [topTraits, setTopTraits] = useState(\r\n    initialTraits.columns.column2.traitIds.slice(0, 18)\r\n  );\r\n  const [userId, setUserId] = useState(makeAndTrackId(6));\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [tutorialStrings, setTutorialStrings] = useState([]);\r\n  const undoFunction = useRef(null);\r\n  const sensorAPIRef = useRef<?SensorAPI>(null);\r\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\r\n  ReactGA.initialize(TRACKING_ID);\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //make sure the draggable moved\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = columnData.columns[source.droppableId];\r\n    const finish = columnData.columns[destination.droppableId];\r\n\r\n    //if moving within the same column\r\n    if (start === finish) {\r\n      const newTraitIds = Array.from(start.traitIds);\r\n      newTraitIds.splice(source.index, 1);\r\n      newTraitIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        traitIds: newTraitIds,\r\n      };\r\n\r\n      //override existing column\r\n      const newData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setColumnData(newData);\r\n      return;\r\n    }\r\n    //cross column moving\r\n    const startTraitIds = Array.from(start.traitIds);\r\n    startTraitIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      traitIds: startTraitIds,\r\n    };\r\n\r\n    const finishTraitIds = Array.from(finish.traitIds);\r\n    finishTraitIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      traitIds: finishTraitIds,\r\n    };\r\n\r\n    const newData = {\r\n      ...columnData,\r\n      columns: {\r\n        ...columnData.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n    setColumnData(newData);\r\n  };\r\n\r\n  function swipe(direction) {\r\n    const api: ?SensorAPI = sensorAPIRef.current;\r\n    if (!api) {\r\n      console.warn(\"unable to find sensor api\");\r\n      return null;\r\n    }\r\n    let endX;\r\n    if (direction === \"right\") {\r\n      endX = 100;\r\n    } else {\r\n      endX = -100;\r\n    }\r\n    const start = { x: 0, y: 0 };\r\n    const end = { x: endX, y: 0 };\r\n\r\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\r\n\r\n    if (!preDrag) {\r\n      console.warn(\"unable to start capturing\");\r\n      return null;\r\n    }\r\n\r\n    const drag = preDrag.fluidLift(start);\r\n\r\n    const points = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      points.push({\r\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\r\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\r\n      });\r\n    }\r\n    moveStepByStep(drag, points);\r\n  }\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      console.log(\"left swiped\");\r\n      swipe(\"left\");\r\n    },\r\n    onSwipedRight: () => {\r\n      console.log(\"right swiped\");\r\n      swipe(\"right\");\r\n    },\r\n  });\r\n\r\n  function moveStepByStep(drag, values) {\r\n    requestAnimationFrame(() => {\r\n      const newPosition = values.shift();\r\n      drag.move(newPosition);\r\n      if (values.length) {\r\n        moveStepByStep(drag, values);\r\n      } else {\r\n        drag.drop();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        sensors={[\r\n          (api) => {\r\n            sensorAPIRef.current = api;\r\n          },\r\n        ]}\r\n      >\r\n        <ProgressContext.Provider\r\n          value={{\r\n            progress: [progress, setProgress],\r\n            activeStep: [activeStep, setActiveStep],\r\n          }}\r\n        >\r\n          <TutorialContext.Provider\r\n            value={{ tutorialStrings: [tutorialStrings, setTutorialStrings] }}\r\n          >\r\n            <UndoContext.Provider value={{ undoFunction }}>\r\n              <ThemeProvider theme={appTheme}>\r\n                <NavBar history={history} />\r\n                <Route exact path=\"/\">\r\n                  <Redirect to=\"/Selection\" />\r\n                </Route>\r\n                <Route\r\n                  exact\r\n                  path=\"/Selection/:id?\"\r\n                  children={\r\n                    <SelectionPage\r\n                      columnData={columnData}\r\n                      setColumnData={setColumnData}\r\n                      topTraits={topTraits}\r\n                      setTopTraits={setTopTraits}\r\n                      history={history}\r\n                      swipeHandlers={swipeHandlers}\r\n                    />\r\n                  }\r\n                />\r\n                <Route path=\"/Rank\">\r\n                  <RankingPage\r\n                    topTraits={topTraits}\r\n                    setTopTraits={setTopTraits}\r\n                    history={history}\r\n                    initalProgress={progress}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/Results\">\r\n                  <ResultsPage\r\n                    topTraits={topTraits}\r\n                    setTopTraits={setTopTraits}\r\n                    userID={userId}\r\n                  />\r\n                </Route>\r\n                <Route\r\n                  path=\"/Share/:id\"\r\n                  children={\r\n                    <SharedPage\r\n                      columnData={columnData}\r\n                      setColumnData={setColumnData}\r\n                      history={history}\r\n                    />\r\n                  }\r\n                />\r\n              </ThemeProvider>\r\n            </UndoContext.Provider>\r\n          </TutorialContext.Provider>\r\n        </ProgressContext.Provider>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <HashRouter basename={\"/trait-ranker\"}>\r\n      <App />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport AppWrapper from \"./components/App\";\r\n\r\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}