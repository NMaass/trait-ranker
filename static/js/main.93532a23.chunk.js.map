{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/FlipCard.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/CardHelp.js","components/TraitCards/RankingTrait.js","utils/useMergeSort.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","Assets/logo512.png","components/NavBar/HomeButton.js","style/appTheme.js","components/NavBar/CustomStepper.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","utils/devTools.js","utils/FadeTextSeries.js","components/Selection/SelectionPage.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","_jsx","BsQuestionCircle","AiOutlineOrderedList","Artistry","GiPalette","Musicality","BsMusicNoteBeamed","Leadership","GiFlyingFlag","Excellence","MdLeaderboard","MdPsychology","Presentation","GiClothes","Independence","GiBreakingChain","Flexibility","GiSplitArrows","MdSocialDistance","Rest","GiNightSleep","Kindness","RiUserHeartFill","Recreation","MdSportsSoccer","Strength","MdFitnessCenter","Wisdom","MdMenuBook","Empathy","MdConnectWithoutContact","Trust","SiHandshake","Spontaneity","BiAlarmOff","Adventure","GiMountainRoad","Integrity","MdOutlineVerifiedUser","Generosity","MdVolunteerActivism","Patience","MdAccessTime","Perseverance","GiMountainClimbing","Mercy","GiGlowingHands","Romance","GiHeartInside","Athleticism","GiMedallist","MdOutlineThumbsUpDown","Productivity","GiGearHammer","Nature","BsFillTreeFill","Peace","BsPeace","Determination","FaFistRaised","Resourcefulness","HiPuzzle","Authority","RiGovernmentLine","Hope","GiHeartKey","Challenge","GiCrossedSwords","Decisiveness","GiChoice","Comfort","GiPillow","Joy","BiHappyBeaming","Fairness","HiOutlineScale","Affection","FaRegKissWinkHeart","Confidence","BsFillShieldLockFill","Respect","FaHandshake","Discipline","BsFillStopwatchFill","Frugality","FaPiggyBank","Suffering","RiEmotionSadLine","FaChild","Optimism","GrLineChart","Ambition","FiTarget","Craftsmanship","FaTools","Vulnerability","BsFillUnlockFill","Family","MdFamilyRestroom","Boldness","GiLion","Caution","RiErrorWarningFill","Directness","AiOutlineMessage","Charisma","FaGrinStars","Ingenuity","Teachability","FaUserGraduate","Pessimism","FaThumbsDown","Loyalty","GiSittingDog","GiMeditation","Creativity","GiPencilBrush","Realism","BiGlasses","Enthusiasm","GiFireworkRocket","MdBathtub","Spirituality","Detachment","GiButterfly","Vision","GiBinoculars","Simplicity","FaShapes","FaDoorOpen","Contentment","FaRegSmileBeam","Tradition","FaScroll","traitDefinitions","Objectivity","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","_ref","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","_useState","useState","_useState2","_slicedToArray","showTooltip","setShowTooltip","_useState3","_useState4","showLink","setShowLink","_jsxs","Grid","container","direction","alignItems","justifyContent","spacing","children","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","_x2","_x3","_setDBTraits","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","hash","traitArray","wrap","_context2","prev","next","setDoc","doc","e","stop","getDBTraits","_x4","_getDBTraits","_callee3","docRef","docSnap","_context3","getDoc","sent","exists","data","abrupt","FlipCard","trait","index","value","setValue","flip","setFlip","useEffect","setTimeout","Card","className","concat","style","margin","CardContent","marginTop","IconContext","Provider","size","SmallTraitList","slice","map","ResultsPage","topTraits","userID","steps","trackResultsPage","_callee","_context","height","reverse","sx","padding","CardHelp","toggleFlipped","flipped","firstCard","IconButton","position","top","right","FlipIcon","fontSize","HelpOutlineIcon","RankingTrait","isMobile","useMediaQuery","setFlipped","rippleRef","React","useRef","stopPropagation","onMouseDown","current","start","onMouseUp","Typography","TouchRipple","ref","center","useMergeSort","initialState","undefined","TOP_K","currentMatch","setCurrentMatch","currentStanding","setCurrentStanding","_useState5","isComplete","_useState6","setIsComplete","_useState7","progressPercent","_useState8","setProgressPercent","_useState9","comparisonStack","_useState10","setComparisonStack","_useState11","mergeStack","_useState12","setMergeStack","_useState13","totalComparisons","_useState14","setTotalComparisons","_useState15","comparisonsMade","_useState16","setComparisonsMade","initializeSort","traitList","initialSublists","calculateTotalComparisons","prepareNextComparison","currentMergeStack","currentComparisonStack","currentLevel","pop","_toConsumableArray","mergedSublist","shift","push","leftSublist","rightSublist","leftIndex","rightIndex","getNextComparison","finalizeSort","currentMerge","leftTrait","rightTrait","left","_currentMerge$mergedS","_currentMerge$mergedS2","addMergedSublistToNextLevel","matchWin","winner","selectionHistory","newComparisonsMade","updateProgress","warn","unshift","finalList","progress","min","n","levelSize","ceil","revertMatch","lastWinnerSide","previousMerge","prevLeftTrait","prevRightTrait","rankingState","RankingPage","_initalProgress$data","setTopTraits","history","initalProgress","memoizedTopTraits","useMemo","_useMergeSort","ranking","_useContext","useContext","ProgressContext","activeStep","_progress","setProgressState","_activeStep","setActiveStepState","leftCardClass","setLeftCardClass","rightCardClass","setRightCardClass","handleRoundWin","useCallback","Transition","forwardRef","props","Slide","_objectSpread","HelpDialogBox","currentPage","_React$useState","_React$useState2","setOpen","_React$useState3","_React$useState4","grow","setGrow","handleClose","helpData","Selection","description","Media","Dialog","TransitionComponent","fullScreen","marginLeft","marginRight","PaperProps","borderTopLeftRadius","borderTopRightRadius","DialogTitle","color","CloseIcon","DialogContentText","paragraph","src","width","alt","HomeButton","maxWidth","maxHeight","logo512","appTheme","createTheme","palette","primary","main","secondary","CustomStepper","StyledStepper","styled","display","flexFlow","StyledStepperStep","StyledStepperStepIndex","currentStep","done","lineHeight","borderRadius","background","textAlign","StyledLabelContainer","useTheme","ProgressBar","_ref3","step","LinearProgress","flex","backgroundColor","getStepIcon","CompareArrowsOutlinedIcon","SortOutlinedIcon","WorkspacePremiumOutlinedIcon","label","key","this","NavBar","progressState","activeStepState","undoFunction","UndoContext","Box","flexGrow","AppBar","Toolbar","FaUndo","SelectionTrait","isStarter","provided","dragHandleProps","draggable","Container","div","_templateObject","_taggedTemplateLiteral","getStyle","snapshot","transform","axisLockX","split","draggingCustomStyle","isDropAnimating","_snapshot$dropAnimati","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","wiggle","Draggable","draggableId","draggableProps","innerRef","isDragging","TraitList","_templateObject2","isDraggingOver","hoverColor","showHoverColor","SelectionDroppable","column","_ref$isStarter","_ref$hoverColor","shouldWiggle","setShouldWiggle","setShowHoverColor","setFirstCard","timer","clearTimeout","Droppable","droppableId","classname","droppableProps","indexOf","placeholder","SkipSelectionButton","FadeTextSeries","_ref$stringArray","stringArray","currentText","setCurrentText","checked","setChecked","fadeTime","count","setInterval","Fade","in","timeout","enter","exit","minHeight","align","SelectionPage","columnData","setColumnData","swipeHandlers","setTutorialStringsState","handleClearStack","tutorialStrings","TutorialContext","_tutorialStrings","numberOfTraits","setUndoFunction","setSelectionHistory","undoLastSelection","prevHistory","newHistory","lastSelection","FreeDragTrait","isDraggable","isBouncing","setIsBouncing","currentColor","setCurrentColor","firstUpdate","isDragDisabled","DragColumn","ReorderableColumn","colors","TryItButton","source","Source","trackShareConversion","replace","ReorderGuess","onDone","showTryIt","showLockIn","paddingTop","GuessPage","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","currentTraits","setCurrentTraits","showPicks","setShowPicks","showColumn","setShowColumn","setShowIt","setShowLockIn","includes","splice","loadNextTraits","handlePick","pick","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","createContext","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","setActiveStep","setProgress","setTutorialStrings","sensorAPIRef","ReactGA","initialize","swipe","api","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","DragDropContext","onDragEnd","_objectSpread3","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","_defineProperty","newTraitIds","newColumn","sensors","ThemeProvider","theme","Route","exact","path","Redirect","to","AppWrapper","HashRouter","basename","ReactDOM","render","document","querySelector"],"mappings":"iSA6GaA,EAAa,CACxB,mBAAoBC,cAACC,IAAgB,IACrC,kBAAmBD,cAACE,IAAoB,IACxCC,SAAUH,cAACI,IAAS,IACpBC,WAAYL,cAACM,IAAiB,IAC9BC,WAAYP,cAACQ,IAAY,IACzBC,WAAYT,cAACU,IAAa,IAC1B,eAAgBV,cAACW,IAAY,IAC7BC,aAAcZ,cAACa,IAAS,IACxBC,aAAcd,cAACe,IAAe,IAC9BC,YAAahB,cAACiB,IAAa,IAC3B,iBAAkBjB,cAACkB,IAAgB,IACnCC,KAAMnB,cAACoB,IAAY,IACnBC,SAAUrB,cAACsB,IAAe,IAC1BC,WAAYvB,cAACwB,IAAc,IAC3BC,SAAUzB,cAAC0B,IAAe,IAC1BC,OAAQ3B,cAAC4B,IAAU,IACnBC,QAAS7B,cAAC8B,IAAuB,IACjCC,MAAO/B,cAACgC,IAAW,IACnBC,YAAajC,cAACkC,IAAU,IACxBC,UAAWnC,cAACoC,IAAc,IAC1BC,UAAWrC,cAACsC,IAAqB,IACjCC,WAAYvC,cAACwC,IAAmB,IAChCC,SAAUzC,cAAC0C,IAAY,IACvBC,aAAc3C,cAAC4C,IAAkB,IACjCC,MAAO7C,cAAC8C,IAAc,IACtBC,QAAS/C,cAACgD,IAAa,IACvBC,YAAajD,cAACkD,IAAW,IACzB,yBAA0BlD,cAACmD,IAAqB,IAChDC,aAAcpD,cAACqD,IAAY,IAC3BC,OAAQtD,cAACuD,IAAc,IACvBC,MAAOxD,cAACyD,IAAO,IACfC,cAAe1D,cAAC2D,IAAY,IAC5BC,gBAAiB5D,cAAC6D,IAAQ,IAC1BC,UAAW9D,cAAC+D,IAAgB,IAC5BC,KAAMhE,cAACiE,IAAU,IACjBC,UAAWlE,cAACmE,IAAe,IAC3BC,aAAcpE,cAACqE,IAAQ,IACvBC,QAAStE,cAACuE,IAAQ,IAClBC,IAAKxE,cAACyE,IAAc,IACpBC,SAAU1E,cAAC2E,IAAc,IACzBC,UAAW5E,cAAC6E,IAAkB,IAC9BC,WAAY9E,cAAC+E,IAAoB,IACjCC,QAAShF,cAACiF,IAAW,IACrBC,WAAYlF,cAACmF,IAAmB,IAChCC,UAAWpF,cAACqF,IAAW,IACvBC,UAAWtF,cAACuF,IAAgB,IAC5B,iBAAkBvF,cAACwF,IAAO,IAC1BC,SAAUzF,cAAC0F,IAAW,IACtBC,SAAU3F,cAAC4F,IAAQ,IACnBC,cAAe7F,cAAC8F,IAAO,IACvBC,cAAe/F,cAACgG,IAAgB,IAChCC,OAAQjG,cAACkG,IAAgB,IACzBC,SAAUnG,cAACoG,IAAM,IACjBC,QAASrG,cAACsG,IAAkB,IAC5BC,WAAYvG,cAACwG,IAAgB,IAC7BC,SAAUzG,cAAC0G,IAAW,IACtBC,UAAW3G,cAAC6D,IAAQ,IACpB+C,aAAc5G,cAAC6G,IAAc,IAC7BC,UAAW9G,cAAC+G,IAAY,IACxBC,QAAShH,cAACiH,IAAY,IACtB,mBAAoBjH,cAACkH,IAAY,IACjCC,WAAYnH,cAACoH,IAAa,IAC1BC,QAASrH,cAACsH,IAAS,IACnBC,WAAYvH,cAACwH,IAAgB,IAC7B,YAAaxH,cAACyH,IAAS,IACvBC,aAAc1H,cAACkH,IAAY,IAC3BS,WAAY3H,cAAC4H,IAAW,IACxBC,OAAQ7H,cAAC8H,IAAY,IACrBC,WAAY/H,cAACgI,IAAQ,IACrB,kBAAmBhI,cAACiI,IAAU,IAC9BC,YAAalI,cAACmI,IAAc,IAC5BC,UAAWpI,cAACqI,IAAQ,KAGTC,EAAmB,CAC9BnG,UACE,iGACFwD,SACE,yGACF1C,YACE,0HACF9C,SACE,qHACFgG,SACE,sFACFE,QACE,8GACFI,SACE,iHACFF,WACE,gHACF2B,YACE,6FACFrC,cACE,+GACFsB,WACE,uFACF/C,aACE,0GACFmE,YACE,wHACFhG,WACE,4HACF2C,WACE,oIACFrD,QACE,4HACF0F,WACE,6FACFvG,YACE,oHACFoE,UACE,sGACFtE,aACE,2GACF6F,UACE,oIACFtG,WACE,kHACF2G,QACE,yGACF,kBACE,4GACFvB,SACE,uHACFhD,SACE,gIACFE,aACE,wGACF,iBACE,0GACF/B,aACE,qHACFyG,QACE,wHACFtE,QACE,oHACF,YACE,qHACF2E,aACE,mHACFK,WACE,sGACFK,UACE,uGACFxB,aACE,gHACFiB,OACE,kHACF9B,cACE,yHAGWyC,EA9LG,CAChB,WACA,cACA,WACA,WACA,UACA,WACA,aACA,cACA,gBACA,aACA,eACA,aACA,UACA,aACA,cACA,YACA,aACA,eACA,YACA,aACA,UACA,kBACA,WACA,WACA,eACA,UACA,YACA,eACA,aACA,cACA,eACA,YACA,iBC1Ga,SAASC,EAAQC,GAK9B,IAJA,IACEC,EADEC,EAAeF,EAAMG,OAID,IAAjBD,GAAoB,CAEzBD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAEA,IAAAK,EAC4C,CAC1CP,EAAMC,GACND,EAAME,IAFPF,EAAME,GAAaK,EAAA,GAAEP,EAAMC,GAAYM,EAAA,GAM1C,OAAOP,ECbT,IA0BeQ,EA1BO,CACpBC,SACAC,QAAS,CACPC,QAAS,CACPC,GAAI,UACJC,MAAO,aACPC,SAAU,IAEZC,QAAS,CACPH,GAAI,UACJC,MAAO,SACPC,SAAUf,EAAQiB,IAEpBC,QAAS,CACPL,GAAI,UACJC,MAAO,SACPC,SAAU,IAEZI,SAAU,CACRN,GAAI,WACJC,MAAO,WACPC,SAAU,KAGdK,YAAa,CAAC,UAAW,UAAW,Y,cC5BvB,SAASC,EAAOjB,GAI7B,IAHA,IAAIkB,EAAS,GACPC,EAAa,aACbC,EAAmBD,EAAWnB,OAC3BqB,EAAI,EAAGA,EAAIrB,EAAQqB,IAC1BH,GAAUC,EAAWG,OAAOrB,KAAKC,MAAMD,KAAKE,SAAWiB,IAEzD,OAAOF,E,2ECHTK,IAASC,KAAK,mCAAoC,CAAEC,OAAO,IAC3DC,IAAUF,KAAK,uBAEfE,IAAUC,eAAc,SAAUC,GAChCL,IAASM,MAAM,YAAa,CAAED,WAAYA,OCJ5C,IAqDeE,EArDM,SAAH1B,GAAkB,IAAZ2B,EAAI3B,EAAJ2B,KACtBC,EAAsCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,EAAgCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAuB5B,OACEG,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,QAAS,EAAEC,SAAA,CAEX9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACgM,IAAO,CACNzC,MAAO,uBACP0C,KAAMhB,EACNiB,WAAY,IACZC,QAhBW,WACjBjB,GAAe,IAeWY,SAEpB9L,cAACoM,IAAM,CAACC,QAAQ,YAAYC,QArCrB,WDoBflC,IAASM,MAAM,UClBT6B,UAAUC,MACZD,UACGC,MAAM,CACL5B,KAAM,uCACN6B,IAAK7B,IAEN8B,MAAK,kBAAMC,QAAQC,IAAI,uBACvBC,OAAM,SAACC,GAAK,OAAKH,QAAQC,IAAI,gBAAiBE,OAEjDP,UAAUQ,UACPC,UAAUpC,GACV8B,MAAK,kBAAMC,QAAQC,IAAI,cACvBC,OAAM,kBAAMF,QAAQC,IAAI,kBAC3B1B,GAAe,GACfI,GAAY,KAqBoCQ,SAAC,cAKhDT,GACCrL,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACiN,IAAU,CAAAnB,SAAElB,U,iBClCjBsC,EAAMC,YAZW,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAKC,YAAaV,GAiBjB,SAAeW,EAAWC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,WAOhC,SAAAF,IAAA,OAAAA,EAAAG,YAAAC,cAAAC,MAPM,SAAAC,EAA2BC,EAAMC,GAAU,OAAAJ,cAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC1CC,YAAOC,YAAInB,EAAI,SAAUY,GAAO,CACpCpF,OAAQqF,IACP3B,OAAM,SAACkC,GACRpC,QAAQC,IAAImC,MACX,KAAD,EACFpC,QAAQC,IAAIkC,YAAInB,EAAI,SAAUY,GAAOC,GAAY,wBAAAE,EAAAM,UAAAV,QAClDL,MAAA,KAAAC,WAEM,SAAee,EAAWC,GAAA,OAAAC,EAAAlB,MAAC,KAADC,WAUhC,SAAAiB,IAAA,OAAAA,EAAAhB,YAAAC,cAAAC,MAVM,SAAAe,EAA2Bb,GAAI,IAAAc,EAAAC,EAAAnG,EAAA,OAAAiF,cAAAK,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACE,OAAhCS,EAASP,YAAInB,EAAI,SAAUY,GAAKgB,EAAAX,KAAA,EAChBY,YAAOH,GAAQ,KAAD,EAAvB,KAAPC,EAAOC,EAAAE,MACDC,SAAS,CAADH,EAAAX,KAAA,SAEE,OADdzF,EAASmG,EAAQK,OAAOxG,OAC9BwD,QAAQC,IAAIzD,GAAQoG,EAAAK,OAAA,SACbzG,GAAM,QAEbwD,QAAQC,IAAI,UAAU,yBAAA2C,EAAAP,UAAAI,QAEzBnB,MAAA,KAAAC,W,6BChBc2B,EAlCE,SAAH5G,GAA0B,IAApB6G,EAAK7G,EAAL6G,MAAOC,EAAK9G,EAAL8G,MACzBlF,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BmF,EAAKjF,EAAA,GAAEkF,EAAQlF,EAAA,GACtBI,EAAwBL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAhC+E,EAAI9E,EAAA,GAAE+E,EAAO/E,EAAA,GAQpB,OANAgF,qBAAU,WACRC,YAAW,WACTF,GAAQ,GACRE,YAAW,kBAAMJ,EAASH,KAAQ,OACzB,IAARC,MAGH/P,cAACsQ,IAAI,CAACC,UAAS,YAAAC,OAAcN,GAAQ,QAAUO,MAAO,CAAEC,OAAQ,QAAS5E,SACvE9L,cAAC2Q,IAAW,CAAA7E,SACVP,eAACC,IAAI,CACHC,WAAS,EACTI,QAAS,EACTF,WAAW,SACXC,eAAe,aACf6E,MAAO,CAAEG,UAAW,QAAU9E,SAAA,CAE9B9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAC6Q,IAAYC,SAAQ,CAACd,MAAO,CAAEe,KAAM,OAAQjF,SAC1C/L,EAAWiQ,OAGhBhQ,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAKkE,cCdFgB,EAbQ,SAAH/H,GAAoB,IAAdE,EAAMF,EAANE,OACxB,OACEnJ,cAACwL,IAAI,CAACC,WAAS,EAACG,eAAe,SAASD,WAAW,SAAQG,SACxD3C,EAAO8H,MAAM,EAAG,GAAGC,KAAI,SAACpB,EAAOC,GAC9B,OACE/P,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAC6P,EAAQ,CAACC,MAAOA,EAAOC,MAAOA,YC8B5BoB,EAhCK,SAAHlI,GAA+B,IAAzBmI,EAASnI,EAATmI,UAAWC,EAAMpI,EAANoI,OAShC,OARAjB,qBAAU,YLaL,SAA0BgB,GAC/BhH,IAASM,MAAM,eAAgB,CAAE4G,MAAO,IACxClH,IAASM,MAAM,gBAAiB,CAAE,aAAc0G,IKd9CG,CAAiBH,GACjBjD,YAAAC,cAAAC,MAAC,SAAAmD,IAAA,OAAApD,cAAAK,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAC0C,OAAzCjC,QAAQC,IAAI,iBAAkBwE,GAAWK,EAAA7C,KAAA,EACnCf,EAAYwD,EAAQD,GAAW,KAAD,mBAAAK,EAAAzC,UAAAwC,MAFtCrD,KAIC,IAGD5C,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACf6E,MAAO,CAAEiB,OAAQ,SAAU5F,SAAA,CAE3B9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAI,iBAEN9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACgR,EAAc,CAAC7H,OAAQiI,EAAUO,cAEpC3R,cAACwL,IAAI,CAACO,MAAI,EAAC6F,GAAI,CAAEC,QAAS,QAAS/F,SACjC9L,cAAC2K,EAAY,CACXC,KAAM,iDAAmDyG,U,uFCXpDS,GAhBE,SAAH7I,GAA+C,IAAzC8I,EAAa9I,EAAb8I,cAAeC,EAAO/I,EAAP+I,QAASC,EAAShJ,EAATgJ,UAC1C,OACEjS,cAACkS,KAAU,CACT5F,QAASyF,EACTtB,MAAO,CAAE0B,SAAU,WAAYC,KAAM,EAAGC,OAAQ,GAChD9B,UAAW0B,EAAY,YAAc,GAAGnG,SAEvCkG,EACChS,cAACsS,KAAQ,CAACC,SAAS,UAEnBvS,cAACwS,KAAe,CAACD,SAAS,aC6DnBE,GArEM,SAAHxJ,GAAuC,IAAjC6G,EAAK7G,EAAL6G,MAAOxD,EAAOrD,EAAPqD,QAASiE,EAAStH,EAATsH,UAChCmC,EAAWC,YAAc,sBAC/B9H,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCmH,EAAOjH,EAAA,GAAE6H,EAAU7H,EAAA,GAEpB8H,EAAYC,IAAMC,OAAO,MAQzBhB,EAAgB,SAAChD,GACrB6D,GAAYZ,GACZjD,EAAEiE,mBAGJ,OACEzH,eAAA,OACEgF,UAAS,iBAAAC,OAAmBwB,EAAU,UAAY,GAAE,KAAAxB,OAAID,GAAa,IACrEjE,QAASA,EACT2G,YAhBkB,SAAClE,GACrB8D,EAAUK,QAAQC,MAAMpE,IAgBtBqE,UAdiB,SAACrE,GACpB8D,EAAUK,QAAQlE,KAAKD,IAaGjD,SAAA,CAExBP,eAAA,OAAKgF,UAAU,aAAYzE,SAAA,CAEzBP,eAAA,OAAKgF,UAAU,aAAYzE,SAAA,CACzB9L,cAAC8R,GAAQ,CAACC,cAAeA,EAAeC,QAASA,IACjDzG,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElB9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAKgE,MAEP9P,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAC6Q,IAAYC,SAAQ,CACnBd,MAAO0C,EAAW,CAAE3B,KAAM,QAAW,CAAEA,KAAM,OAAQjF,SAEpD/L,EAAW+P,aAMpBvE,eAAA,OAAKgF,UAAU,YAAWzE,SAAA,CACxB9L,cAAC8R,GAAQ,CAACC,cAAeA,EAAeC,QAASA,IACjDzG,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElB9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAKgE,MAEP9P,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACqT,KAAU,CAAChH,QAAQ,KAAIP,SAAExD,EAAiBwH,gBAKnD9P,cAACsT,KAAW,CAACC,IAAKV,EAAWW,QAAQ,Q,SC8S5BC,OApXf,SAAsBvK,GAAqC,IAAtBwK,EAAYxF,UAAArF,OAAA,QAAA8K,IAAAzF,UAAA,GAAAA,UAAA,GAAG,KAE5C0F,EAAQ,EAGd/I,EAAwCC,oBAC1B,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcG,eAAgB,MAC/B9I,EAAAC,YAAAH,EAAA,GAFMgJ,EAAY9I,EAAA,GAAE+I,EAAe/I,EAAA,GAGpCI,EAA8CL,oBAChC,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcK,kBAAmB,IAClC3I,EAAAJ,YAAAG,EAAA,GAFM4I,EAAe3I,EAAA,GAAE4I,EAAkB5I,EAAA,GAG1C6I,EAAoCnJ,oBACtB,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,cAAc,GAC7BC,EAAAnJ,YAAAiJ,EAAA,GAFMC,EAAUC,EAAA,GAAEC,EAAaD,EAAA,GAGhCE,EAA8CvJ,oBAChC,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcY,kBAAmB,GAClCC,EAAAvJ,YAAAqJ,EAAA,GAFMC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,GAG1CE,EAA8C3J,oBAChC,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcgB,kBAAmB,IAClCC,EAAA3J,YAAAyJ,EAAA,GAFMC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,GAG1CE,EAAoC/J,oBAAqB,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcoB,aAAc,IAAGC,EAAA/J,YAAA6J,EAAA,GAArEC,EAAUC,EAAA,GAAEC,EAAaD,EAAA,GAChCE,EAAgDnK,oBAClC,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAcwB,mBAAoB,GACnCC,EAAAnK,YAAAiK,EAAA,GAFMC,EAAgBC,EAAA,GAAEC,EAAmBD,EAAA,GAG5CE,EAA8CvK,oBAChC,OAAZ4I,QAAY,IAAZA,OAAY,EAAZA,EAAc4B,kBAAmB,GAClCC,EAAAvK,YAAAqK,EAAA,GAFMC,EAAeC,EAAA,GAAEC,EAAkBD,EAAA,GAW1C,SAASE,EAAeC,GACtB,IAAKA,GAAkC,IAArBA,EAAU7M,OAK1B,OAJAuL,GAAc,GACdI,EAAmB,KACnBR,EAAmB,SACnBF,EAAgB,MAKlB,IAAM6B,EAAkBD,EAAUxE,KAAI,SAACpB,GAAK,MAAK,CAACA,MAElDkF,EAAc,CAACW,IACfP,EAAoBQ,EAA0BF,EAAU7M,SACxD2M,EAAmB,GACnBhB,EAAmB,GACnBJ,GAAc,GACdJ,EAAmB,IAEnB6B,EAAsB,CAACF,GAAkB,IAG3C,SAASE,EAAsBC,EAAmBC,GAChD,GAC+B,IAA7BD,EAAkBjN,QACc,IAAhCiN,EAAkB,GAAGjN,QACa,IAAlCkN,EAAuBlN,OAHzB,CAUA,IAAMmN,EAAeF,EAAkBA,EAAkBjN,OAAS,GAGlE,GAA4B,IAAxBmN,EAAanN,OAIf,OAHAiN,EAAkBG,MAClBjB,EAAakB,aAAKJ,SAClBD,EAAsBC,EAAmBC,GAK3C,GAA4B,IAAxBC,EAAanN,OAAc,CAC7B,IAAMsN,EAAgBH,EAAaI,QAInC,OAFAN,EAAkBG,MAEe,IAA7BH,EAAkBjN,QAEpBmL,EAAmBmC,EAAclF,MAAM,EAAG2C,IAC1CQ,GAAc,GACdI,EAAmB,UACnBV,EAAgB,QAIXgC,EAAkBA,EAAkBjN,OAAS,IAChDiN,EAAkBO,KAAK,IAEPP,EAAkBA,EAAkBjN,OAAS,GACrDwN,KAAKF,GACfnB,EAAakB,aAAKJ,SAClBD,EAAsBC,EAAmBC,IAM7C,IAAMO,EAAcN,EAAaI,QAC3BG,EAAeP,EAAaI,QAMlCL,EAAuBM,KAAK,CAC1BC,cACAC,eACAJ,cANoB,GAOpBK,UAAW,EACXC,WAAY,IAGdzB,EAAakB,aAAKJ,IAClBlB,EAAkBsB,aAAKH,IAGvBW,EAAkBX,QA5DhBY,EAAab,GA+DjB,SAASY,EAAkBX,GACzB,IAAMa,EACJb,EAAuBA,EAAuBlN,OAAS,GAEzD,GAAK+N,EAAL,CAMA,IAAQN,EAAqDM,EAArDN,YAAaC,EAAwCK,EAAxCL,aAAcC,EAA0BI,EAA1BJ,UAAWC,EAAeG,EAAfH,WAExCI,EACJP,GAAeE,EAAYF,EAAYzN,OACnCyN,EAAYE,GACZ,KACAM,EACJP,GAAgBE,EAAaF,EAAa1N,OACtC0N,EAAaE,GACb,KAEN,GAAII,GAAaC,EACfhD,EAAgB,CAAEiD,KAAMF,EAAWxE,MAAOyE,QACrC,CAEgC,IAADE,EAGEC,EAHtC,GAAIT,EAAYF,EAAYzN,QAC1BmO,EAAAJ,EAAaT,eAAcE,KAAIpI,MAAA+I,EAAAd,aAAII,EAAYrF,MAAMuF,KAEvD,GAAIC,EAAaF,EAAa1N,QAC5BoO,EAAAL,EAAaT,eAAcE,KAAIpI,MAAAgJ,EAAAf,aAAIK,EAAatF,MAAMwF,KAIxDV,EAAuBE,MACvBrB,EAAkBsB,aAAKH,IAGvBmB,EAA4BN,EAAaT,cAAerB,GAGxDe,EAAsBf,EAAYiB,SAlClCF,EAAsBf,EAAYiB,GAqCtC,SAASoB,EAASC,GAChB,IAAMrB,EAAsBG,aAAOxB,GAC7BkC,EACJb,EAAuBA,EAAuBlN,OAAS,GAEzD,GAAK+N,EAAL,CAKA,IAAQN,EACNM,EADMN,YAAaC,EACnBK,EADmBL,aAAcJ,EACjCS,EADiCT,cAAeK,EAChDI,EADgDJ,UAAWC,EAC3DG,EAD2DH,WAGvDI,EAAYP,GAAeA,EAAYE,GACvCM,EAAaP,GAAgBA,EAAaE,GAGhDN,EAAcE,KAAKe,GAGdR,EAAaS,mBAChBT,EAAaS,iBAAmB,IAI9BD,IAAWP,GACbD,EAAaJ,WAAa,EAC1BI,EAAaS,iBAAiBhB,KAAK,SAC1Be,IAAWN,IACpBF,EAAaH,YAAc,EAC3BG,EAAaS,iBAAiBhB,KAAK,UAGrCzB,EAAmBmB,GAGnBP,GAAmB,SAAC7G,GAClB,IAAM2I,EAAqB3I,EAAO,EAElC,OADA4I,EAAeD,GACRA,KAITZ,EAAkBX,QArChBpJ,QAAQ6K,KAAK,6CAwCjB,SAASN,EAA4Bf,EAAeL,GAEjB,IAA7BA,EAAkBjN,QACpBiN,EAAkB2B,QAAQ,IAIV3B,EADKA,EAAkBjN,OAAS,GAExCwN,KAAKF,GAEgD,IAA3DL,EAAkBA,EAAkBjN,OAAS,GAAGA,QAElDiN,EAAkBG,MAGpBjB,EAAakB,aAAKJ,IAEpB,SAASa,EAAab,GACpB,IAAI4B,EAAY,GAEZ5B,EAAkBjN,OAAS,GAAKiN,EAAkB,GAAGjN,OAAS,IAChE6O,EAAY5B,EAAkB,GAAG,IAGnCnJ,QAAQC,IAAI,cAAe8K,GAE3B1D,EAAmB0D,EAAUzG,MAAM,EAAG2C,IACtCQ,GAAc,GACdI,EAAmB,KACnBV,EAAgB,MAGlB,SAASyD,EAAeD,GACtB,IAAMK,EAAW7O,KAAK8O,IACnBN,EAAqBpC,EAAoB,IAC1C,KAEFV,EAAmBmD,GAGrB,SAAS/B,EAA0BiC,GAIjC,IAHA,IAAI3C,EAAmB,EACnB4C,EAAY,EAETA,EAAYD,GACjB3C,GAAoBpM,KAAKiP,KAAKF,GAAK,EAAIC,IAAcA,EACrDA,GAAa,EAGf,OAAO5C,EAGT,SAAS8C,IACP,GAA+B,IAA3BtD,EAAgB7L,OAApB,CAKA,IAAMkN,EAAsBG,aAAOxB,GAC7BkC,EACJb,EAAuBA,EAAuBlN,OAAS,GAEjDsN,EAAoCS,EAApCT,cAAekB,EAAqBT,EAArBS,iBAEvB,GAAKA,GAAgD,IAA5BA,EAAiBxO,OAA1C,CAuBAsN,EAAcF,MAGd,IAAMgC,EAAiBZ,EAAiBpB,MAGxCT,GAAmB,SAAC7G,GAClB,IAAM2I,EAAqB3I,EAAO,EAAIA,EAAO,EAAI,EAEjD,OADA4I,EAAeD,GACRA,KAIc,SAAnBW,EACFrB,EAAaJ,WAAa,EACE,UAAnByB,IACTrB,EAAaH,YAAc,GAG7B7B,EAAmBmB,GAGf7B,IACFE,GAAc,GACdI,EAAoBc,EAAkBJ,EAAoB,MAI5D,IAAM2B,EAAYD,EAAaN,YAAYM,EAAaJ,YAAc,KAChEM,EACJF,EAAaL,aAAaK,EAAaH,aAAe,KAEpDI,GAAaC,EACfhD,EAAgB,CAAEiD,KAAMF,EAAWxE,MAAOyE,KAG1Cf,EAAuBE,MACvBrB,EAAmBmB,GAEfA,EAAuBlN,OAAS,EAClC6N,EAAkBX,GAElBjC,EAAgB,YA3DlB,GAJAiC,EAAuBE,MACvBrB,EAAmBmB,GAGfA,EAAuBlN,OAAS,EAAG,CACrC,IAAMqP,EACJnC,EAAuBA,EAAuBlN,OAAS,GACnDsP,EACJD,EAAc5B,YAAY4B,EAAc1B,WACpC4B,EACJF,EAAc3B,aAAa2B,EAAczB,YAC3C3C,EAAgB,CAAEiD,KAAMoB,EAAe9F,MAAO+F,SAG9CtE,EAAgB,WA1BlBnH,QAAQ6K,KAAK,sBAlPjBpH,qBAAU,WACHsD,GACH+B,EAAevM,KAGhB,CAACA,IA6TJ,IAAMmP,EAAe,CACnBxE,eACAE,kBACAG,aACAI,kBACAI,kBACAI,aACAI,mBACAI,mBAGF,MAAO,CACLhB,kBACAP,kBACAF,eACAsD,WACAa,cACA9D,aACAmE,iBC5PWC,GAxGK,SAAHrP,GAA8D,IAADsP,EAAvDnH,EAASnI,EAATmI,UAAWoH,EAAYvP,EAAZuP,aAAcC,EAAOxP,EAAPwP,QAASC,EAAczP,EAAdyP,eAEjDC,EAAoBC,mBAAQ,kBAAMxH,EAAUH,UAAS,CAACG,IAC5DhB,qBAAU,WACRzD,QAAQC,IAAI,sBAAuB+L,KAClC,CAACA,IAEJ,IAAAE,EAOIpF,GAAakF,EAAiC,OAAdD,QAAc,IAAdA,GAAoB,QAANH,EAAdG,EAAgB/I,YAAI,IAAA4I,OAAN,EAAdA,EAAsBO,SANxDxE,EAAeuE,EAAfvE,gBACAT,EAAYgF,EAAZhF,aACAE,EAAe8E,EAAf9E,gBACAoD,EAAQ0B,EAAR1B,SAEAjD,GADW2E,EAAXb,YACUa,EAAV3E,YAGIxB,EAAWC,YAAc,sBAE/BoG,EAAiCC,qBAAWC,IAApCtB,EAAQoB,EAARpB,SAAUuB,EAAUH,EAAVG,WAClBC,EAAAnO,YAA0C2M,EAAQ,GAA5ByB,GAAFD,EAAA,GAAkBA,EAAA,IACtCE,EAAArO,YAA8CkO,EAAU,GAAhCI,GAAFD,EAAA,GAAoBA,EAAA,IAC1CxO,EAA0CC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/C0O,EAAaxO,EAAA,GAAEyO,EAAgBzO,EAAA,GACtCI,EAA4CL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjDsO,EAAcrO,EAAA,GAAEsO,EAAiBtO,EAAA,GAClCuO,EAAiBC,uBACrB,SAAC9J,GAEKA,IAAU+D,EAAakD,MACzByC,EAAiB,aACjBE,EAAkB,cAElBF,EAAiB,YACjBE,EAAkB,cAIpBrJ,YAAW,WACT8G,EAASrH,GACTsJ,EAAiB9E,GACjBkF,EAAiB,YACjBE,EAAkB,YAGlBrJ,YAAW,WACTmJ,EAAiB,IACjBE,EAAkB,MACjB,OACF,OAEL,CAAC7F,EAAcsD,EAAU7C,EAAiB8E,IAG5ChJ,qBAAU,WACRzD,QAAQC,IAAI,cAAesH,GACvBA,IACFsE,EAAazE,GACbuF,EAAmB,GACnBb,EAAQpC,KAAK,eAEd,CAACnC,IAQJ,OAAK9C,GAAkC,IAArBA,EAAUvI,OAK1B7I,cAAA,OAAA8L,SACEP,eAACC,IAAI,CACHC,WAAS,EACTI,QAAS6G,EAAW,GAAK,EACzB/G,WAAW,SACXC,eAAe,SACfF,UAAWgH,EAAW,MAAQ,SAAS5G,SAAA,CAEtC+H,GAAgBA,EAAakD,MAC5B/W,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACyS,GAAY,CACXlC,UAAWgJ,EACXzJ,MAAO+D,EAAakD,KACpBzK,QAAS,kBAAMqN,EAAe9F,EAAakD,QACtClD,EAAakD,QAIvBlD,GAAgBA,EAAaxB,OAC5BrS,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACyS,GAAY,CACXlC,UAAWkJ,EACX3J,MAAO+D,EAAaxB,MACpB/F,QAAS,kBAAMqN,EAAe9F,EAAaxB,SACtCwB,EAAaxB,cA5BrBrS,cAAA,OAAA8L,SAAK,uB,2FCrEV+N,GAAaC,sBAAW,SAAoBC,EAAOxG,GACvD,OAAOvT,cAACga,KAAKC,YAAA,CAACvO,UAAU,KAAK6H,IAAKA,GAASwG,OA0E9BG,GAvEO,SAAHjR,GAAiBA,EAAXkR,YAAmB,IAC1CC,EAAwBtH,IAAMhI,UAAS,GAAMuP,EAAArP,YAAAoP,EAAA,GAAtCnO,EAAIoO,EAAA,GAAEC,EAAOD,EAAA,GACpBE,EAAwBzH,IAAMhI,UAAS,GAAM0P,EAAAxP,YAAAuP,EAAA,GAAtCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GASdG,EAAc,WAClBL,GAAQ,GAPRI,GAAQ,GACRrK,YAAW,WACTqK,GAAQ,KACP,MAWChI,EAAWC,YAAc,sBACzBiI,EAAW,CACfC,UAAW,CACTtR,MAAO,YACPuR,YAAY,0FAADtK,OACTkC,EAAW,OAAS,SAAQ,sGAE9BqI,MAAO,oCAIX,OACExP,eAAA,OAAAO,SAAA,CACE9L,cAACkS,KAAU,CAAC5F,QAjBG,WACjBgO,GAAQ,IAgB2B/J,UAAS,GAAAC,OAAKiK,GAAQ,QAAS3O,SAC9D9L,cAACwS,KAAe,CAACD,SAAS,YAG5BhH,eAACyP,KAAM,CACL7O,QAASwO,EACTM,oBAAqBpB,GACrB5N,KAAMA,EACNiP,YAAU,EACVzK,MAAO,CACLG,UAAW,OACXuK,WAAY,MACZC,YAAa,OAEfC,WAAY,CACV5K,MAAO,CAAE6K,oBAAqB,EAAGC,qBAAsB,IACvDzP,SAAA,CAEF9L,cAACwb,KAAW,CAAA1P,SAAE8O,EAAoB,UAAErR,QACpCvJ,cAACkS,KAAU,CACTzB,MAAO,CAAE0B,SAAU,WAAYE,MAAO,KACtCoJ,MAAM,UACNnP,QAASqO,EACT,aAAW,QAAO7O,SAElB9L,cAAC0b,KAAS,MAEZ1b,cAAC2b,KAAiB,CAACC,WAAW,EAAOnL,MAAO,CAAEC,OAAQ,IAAK5E,SACxD8O,EAAoB,UAAEE,cAEzB9a,cAAA,OACE6b,IAAKjB,EAAoB,UAAEG,MAC3BtK,MAAO,CAAEqL,MAAO,QAChBC,IAAI,oCCjFC,OAA0B,oCCsB1BC,GAlBI,SAAH/S,GAAqB,IAAfwP,EAAOxP,EAAPwP,QAIpB,OACEzY,cAACkS,KAAU,CACTuJ,MAAM,UACNnP,QANe,WACjBmM,EAAQpC,KAAK,MAMX5F,MAAO,CAAEwL,SAAU,OAAQC,UAAW,QAASpQ,SAE/C9L,cAAA,OACE6b,IAAKM,GACLJ,IAAI,wBACJtL,MAAO,CAAEwL,SAAU,OAAQC,UAAW,a,qGCL/BE,GAVEC,aAAY,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cCwHGE,I,GAAAA,GArHf,SAAuB3C,GACrB,IAAM4C,EAAgBC,aAAO,KAAPA,CAAa,CACjCC,QAAS,OACTC,SAAU,aACVlR,eAAgB,eAChBiG,QAAS,EACTiK,MAAO,SAEHiB,EAAoBH,aAAO,KAAPA,CAAa,CACrCzK,SAAU,WACV0K,QAAS,OACTC,SAAU,aACVlR,eAAgB,eAChBD,WAAY,SACZmQ,MAAO,SAEHkB,EAAyBJ,aAAO,MAAPA,EAAc,SAAA3T,GAAA,IAAGgU,EAAWhU,EAAXgU,YAAaC,EAAIjU,EAAJiU,KAAI,MAAQ,CACvEpB,MAAO,OACPpK,OAAQ,OACRyL,WAAY,OACZC,aAAc,MACdC,WACEJ,GAAeC,EAAOd,GAASE,QAAQG,UAAUD,KAAO,UAC1Df,MAAOwB,GAAeC,EAAO,OAAS,OACtCI,UAAW,SACXT,QAAS,OACTlR,WAAY,SACZC,eAAgB,aAGZ2R,EAAuBX,aAAO,MAAPA,CAAc,CACzCC,QAAS,OACTC,SAAU,gBACVnR,WAAY,WAGN2F,EAA6ByI,EAA7BzI,MAAO4B,EAAsB6G,EAAtB7G,QAASyE,EAAaoC,EAAbpC,SAEV6F,eAKd,IAAMC,EAAc,SAAHC,GAAqC,IAA/BxK,EAAOwK,EAAPxK,QAASyK,EAAID,EAAJC,KAAMhG,EAAQ+F,EAAR/F,SACpChL,QAAQC,IAAI+K,GACZ,IAAI3H,EAAQ,EAOZ,OANIkD,EAAU,IAAMyK,EAClB3N,EAAQ2H,EACCzE,GAAWyK,IACpB3N,EAAQ,KAIRhQ,cAAC4d,KAAc,CACbvR,QAAQ,cACR2D,MAAOA,EACP4B,GAAI,CACF,2BAA4B,CAC1BiM,KAAM,WACN1L,SAAU,WACVC,IAAK,GACL2E,KAAM,oBACN1E,MAAO,mBACPyL,gBAAiB,aAEnB,2BAA4B,CAC1BA,gBAAiB1B,GAASE,QAAQG,UAAUD,UAOtD,SAASuB,EAAYd,GACnB,OAAQA,GACN,KAAK,EACH,OAAOjd,cAACge,KAAyB,IACnC,KAAK,EACH,OAAOhe,cAACie,KAAgB,IAC1B,KAAK,EACH,OAAOje,cAACke,KAA4B,IACtC,QACE,OAAO,MAsBb,OACEle,cAAC2c,EAAa,CAAA7Q,SACXwF,EAAMJ,KApBX,SAAoBiN,EAAOC,GACzB,IAAQlL,EAAsBmL,KAAtBnL,QAASyE,EAAa0G,KAAb1G,SACXuF,EAAOkB,EAAMlL,EACb+J,EAAcmB,IAAQlL,EAC5B,OACE3H,eAACwR,EAAiB,CAAAjR,SAAA,CAChB9L,cAACud,EAAoB,CAAAzR,SACnB9L,cAACgd,EAAsB,CAACC,YAAaA,EAAaC,KAAMA,EAAKpR,SAC1DiS,EAAYK,SAGdA,GACDpe,cAACyd,EAAW,CAACvK,QAASA,EAASyK,KAAMS,EAAKzG,SAAUA,MAPhCyG,KAeD,CAAElL,UAASyE,gBC5GlCrG,GAAQ,CAAC,UAAW,UAAW,WAwCtBgN,GAvCA,SAAHrV,GAAqB,IAAfwP,EAAOxP,EAAPwP,QAChBM,EAAiCC,qBAAWC,IAApCtB,EAAQoB,EAARpB,SAAUuB,EAAUH,EAAVG,WAClBC,EAAAnO,YAA0C2M,EAAQ,GAA3C4G,EAAapF,EAAA,GACpBE,GADsCF,EAAA,GACtCnO,YAA8CkO,EAAU,IAAjDsF,EAAenF,EAAA,GACdoF,GADkCpF,EAAA,GACjBL,qBAAW0F,IAA5BD,cAER,OACEze,cAAC2e,KAAG,CAAC/M,GAAI,CAAEgN,SAAU,GAAI9S,SACvB9L,cAAC6e,KAAM,CAAC1M,SAAS,QAAOrG,SACtB9L,cAAC8e,KAAO,CAAAhT,SACNP,eAACC,IAAI,CAACC,WAAS,EAACE,WAAW,SAASC,eAAe,gBAAeE,SAAA,CAChE9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACgc,GAAU,CAACvD,QAASA,MAEvBzY,cAACwL,IAAI,CAACO,MAAI,EAAC6S,SAAU,EAAE9S,SACrB9L,cAAC0c,GAAa,CACZpL,MAAOA,GACP4B,QAASsL,EACT7G,SAAU4G,MAGdve,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACRP,eAACC,IAAI,CAACC,WAAS,EAACG,eAAe,WAAWD,WAAW,SAAQG,SAAA,CAC3D9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACka,GAAa,MAEhBla,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACkS,KAAU,CAAC5F,QAASmS,EAAa3S,SAChC9L,cAAC+e,IAAM,uB,6CCkCZC,GA/DQ,SAAH/V,GAAwC,IAAlC6G,EAAK7G,EAAL6G,MAAOmP,EAAShW,EAATgW,UAAWC,EAAQjW,EAARiW,SACpCxM,EAAWC,YAAc,sBAC/B9H,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCmH,EAAOjH,EAAA,GAAE6H,EAAU7H,EAAA,GAEpBgH,EAAgB,WACpBa,GAAYZ,IAGd,OACEhS,cAAA,MAAAia,wBAAA,CACE1J,UAAS,kBAAAC,OAAoBwB,EAAU,UAAY,KAC/CkN,EAASC,iBAAe,IAC5BC,WAAW,EACX9V,GAAIwG,EAAMhE,SAEVP,eAAA,OAAKgF,UAAU,cAAazE,SAAA,CAE1BP,eAAA,OAAKgF,UAAU,aAAYzE,SAAA,CACzB9L,cAAC8R,GAAQ,CACPC,cAAeA,EACfC,QAASA,EACTiN,UAAWA,IAEb1T,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElB9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAKgE,MAEP9P,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAC6Q,IAAYC,SAAQ,CACnBd,MAAO0C,EAAW,CAAE3B,KAAM,QAAW,CAAEA,KAAM,OAAQjF,SAEpD/L,EAAW+P,aAMpBvE,eAAA,OAAKgF,UAAU,YAAWzE,SAAA,CACxB9L,cAAC8R,GAAQ,CAACC,cAAeA,EAAeC,QAASA,IACjDzG,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElB9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAKgE,MAEP9P,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACqT,KAAU,CAAChH,QAAQ,KAAIP,SAAExD,EAAiBwH,oBCzDnDuP,GAAYzC,KAAO0C,IAAGC,QAAAC,aAAA,QAa5B,SAASC,GAAShP,EAAOiP,GAEvB,GADAjP,EAZ0B,SAACA,GAC3B,GAAS,OAALA,QAAK,IAALA,KAAOkP,UAAW,CACpB,IAAMC,EAAS,GAAApP,OAAMC,EAAMkP,UAAUE,MAAM,KAAKzJ,QAAO,UACvD,OAAA6D,wBAAA,GACKxJ,GAAK,IACRkP,UAAWC,IAGf,OAAOnP,EAICqP,CAAoBrP,IACvBiP,EAASK,gBACZ,OAAOtP,EAET,IAAAuP,EAA6BN,EAASO,cAA9BC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SACVC,EAAeV,EAASU,aAC9BzT,QAAQC,IAAIwT,GACZ,IAAIC,EAAS,EACQ,YAAjBD,EACFC,GAAU,IACgB,YAAjBD,IACTC,EAAS,KAGX,IAAMC,EAAS,aAAA9P,OAAgB6P,EAAM,QAAA7P,OAAO0P,EAAOK,EAAC,OAGpD,OAAAtG,wBAAA,GACKxJ,GAAK,IACRkP,UAAWW,EAEXE,WAAW,QAADhQ,OAAU2P,EAAW,GAAG,OAItC,I,SAqBeM,GArBQ,SAAHxX,GAA6C,IAAvC6G,EAAK7G,EAAL6G,MAAOC,EAAK9G,EAAL8G,MAAO2Q,EAAMzX,EAANyX,OAAQzO,EAAShJ,EAATgJ,UAC9C,OACEjS,cAAC2gB,KAAS,CAACC,YAAa9Q,EAAmBC,MAAOA,EAAMjE,SACrD,SAACoT,EAAUQ,GAAQ,OAClB1f,cAACqf,GAASpF,wBAAA,GACJiF,EAAS2B,gBAAc,IAC3BtN,IAAK2L,EAAS4B,SACdC,WAAYrB,EAASqB,WACrBtQ,MAAOgP,GAASP,EAAS2B,eAAepQ,MAAOiP,GAC/CnP,UAAWmQ,EAAS,mBAAqB,GAAG5U,SAE5C9L,cAACgf,GAAc,CACblP,MAAOA,EACPmC,UAAWA,EACXiN,SAAUA,SAZkBpP,ICrClCkR,IAJYpE,KAAO0C,IAAGC,QAAAC,aAAA,4BAIV5C,KAAO0C,IAAG2B,QAAAzB,aAAA,4LAEN,SAACzF,GAAK,OACxBA,EAAMmH,eAAiBnH,EAAMoH,WAAa,WAG/B,SAACpH,GAAK,OAAMA,EAAMkF,UAAY,MAAQ,YAEtC,SAAClF,GAAK,OAAKA,EAAMkF,WAAa,SACzC,SAAClF,GAAK,OACNA,EAAMqH,gBAAc,2BAAA5Q,OAEAuJ,EAAMoH,WAAU,aAyDzBE,GArDY,SAAHpY,GAIjB,IAHLqY,EAAMrY,EAANqY,OAAMC,EAAAtY,EACNgW,iBAAS,IAAAsC,GAAQA,EAAAC,EAAAvY,EACjBkY,kBAAU,IAAAK,EAAG,YAAWA,EAExB3W,EAAwCC,mBAASmU,GAAUlU,EAAAC,YAAAH,EAAA,GAApD4W,EAAY1W,EAAA,GAAE2W,EAAe3W,EAAA,GACpCI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDiW,EAAchW,EAAA,GAAEuW,EAAiBvW,EAAA,GACxC6I,EAAkCnJ,oBAAS,GAAKqJ,EAAAnJ,YAAAiJ,EAAA,GAAzChC,EAASkC,EAAA,GAAEyN,EAAYzN,EAAA,GAkB9B,OAhBArB,IAAM1C,WAAU,WACd,GAAI6O,EAAW,CACb,IAAM4C,EAAQxR,YAAW,WACvBqR,GAAgB,GAChBE,GAAa,KACZ,KACH,OAAO,kBAAME,aAAaD,IAE1BF,GAAkB,GAClB,IAAME,EAAQxR,YAAW,WACvBsR,GAAkB,KACjB,KACH,OAAO,kBAAMG,aAAaD,MAE3B,CAAC5C,IAGFjf,cAAC+hB,KAAS,CAAiBC,YAAaV,EAAOhY,GAAIoC,UAAU,aAAYI,SACtE,SAACoT,EAAUQ,GAAQ,OAClBnU,eAACyV,GAAS/G,wBAAA,CACRgI,UAAU,cACV1O,IAAK2L,EAAS4B,SACd7B,UAAWA,EACXkC,WAAYA,EACZD,eAAgBxB,EAASwB,eACzBE,eAAgBA,GACZlC,EAASgD,gBAAc,IAAApW,SAAA,CAE1BmT,GACCjf,cAACygB,GAAc,CAEb3Q,MAAa,OAANwR,QAAM,IAANA,OAAM,EAANA,EAAQ9X,SAAS,GACxBuG,MAAa,OAANuR,QAAM,IAANA,OAAM,EAANA,EAAQ9X,SAAS2Y,QAAc,OAANb,QAAM,IAANA,OAAM,EAANA,EAAQ9X,SAAS,IACjDkX,OAAQe,EACRxP,UAAWA,GAJA,OAANqP,QAAM,IAANA,OAAM,EAANA,EAAQ9X,SAAS,IAOzB0V,EAASkD,kBApBAd,EAAOhY,KC7Bd+Y,GAAsB,SAAHpZ,GAClBA,EAAZuP,aACOvP,EAAPwP,QACkBxP,EAAlBqQ,mBAOE,OAAO,M,UCeIgJ,GA7CQ,SAAHrZ,GAA8B,IAADsZ,EAAAtZ,EAAvBuZ,mBAAW,IAAAD,EAAG,GAAEA,EACxC1X,EAAsCC,mBAAS0X,EAAY,IAAGzX,EAAAC,YAAAH,EAAA,GAAvD4X,EAAW1X,EAAA,GAAE2X,EAAc3X,EAAA,GAClCI,EAA8BL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAArCwX,EAAOvX,EAAA,GAAEwX,EAAUxX,EAAA,GACpByX,EAAW,IACXnQ,EAAWC,YAAc,sBAkB/B,OAjBAvC,qBAAU,WACR,IAAI0S,EAAQ,EAEZC,aAAY,WACVH,GAAW,SAACjU,GAAI,OAAMA,OACrBkU,GAEHE,aAAY,WACND,IAAUN,EAAY3Z,OAAS,GACjCia,IACAJ,EAAeF,EAAYM,KAE3BJ,EAAe,MAEhBG,OACF,CAACL,IAGFxiB,cAACgjB,KAAI,CACHC,GAAIN,EACJO,QAAS,CACPC,MAAON,KACPO,KAAMP,MACN/W,SAEF9L,cAACqT,KAAU,CACTzB,GAAI,CACFyR,UAAW,SACXzS,UAAW,OACXuB,SAAU,WACV2J,MAAO,QAETwH,MAAM,SACNjX,QAASqG,EAAW,KAAO,KAAK5G,SAE/B2W,OCmFMc,GArHO,SAAHta,GAOZ,IANLua,EAAUva,EAAVua,WACAC,EAAaxa,EAAbwa,cACAjL,EAAYvP,EAAZuP,aACAC,EAAOxP,EAAPwP,QACAiL,EAAaza,EAAbya,cACAtS,EAASnI,EAATmI,UAEiBuB,YAAc,qBAE/BvC,qBAAU,WAC2C,IAA/CoT,EAAWpa,QAAQK,QAAQD,SAASX,QAsD1C,SAA0BuI,GACpBA,EAAUvI,OAAS,GAErB2a,EAAWpa,QAAQK,QAAQD,SAAWga,EAAWpa,QAAQC,QAAQG,SACjEma,EAAwB,wCACfvS,EAAUvI,OAAS,IAE5B2a,EAAWpa,QAAQK,QAAQD,SAAWga,EAAWpa,QAAQO,QAAQH,SACjEma,EACE,wDAIFhX,QAAQC,IAAI4W,EAAWpa,QAAQO,QAAQH,UACvCgP,EAAagL,EAAWpa,QAAQO,QAAQH,UACxC8P,EAAmB,GACnBF,EAAiB,GACjBX,EAAQpC,KAAK,UAtEbuN,CAAiBJ,EAAWpa,QAAQO,QAAQH,YAE7C,CAACga,EAAY/K,EAASD,EAAcpH,IAEvC,IAAA2H,EAAiCC,qBAAWC,IAApCtB,EAAQoB,EAARpB,SAAUuB,EAAUH,EAAVG,WAClBC,EAAAnO,YAA0C2M,EAAQ,GAA3C4G,EAAapF,EAAA,GAAEC,EAAgBD,EAAA,GACtCE,EAAArO,YAA8CkO,EAAU,GAAhCI,GAAFD,EAAA,GAAoBA,EAAA,IAClCwK,EAAoB7K,qBAAW8K,IAA/BD,gBACRE,EAAA/Y,YAAwD6Y,EAAe,GAA1CF,GAAFI,EAAA,GAAyBA,EAAA,IAC9CC,EAAiBjR,iBAAOyQ,EAAWpa,QAAQK,QAAQD,SAASX,QAC1Dob,EAAoBjL,qBAAW0F,IAA/BuF,gBAERpZ,EAAgDC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAArDwM,EAAgBtM,EAAA,GAAEmZ,EAAmBnZ,EAAA,GAkB5C,SAASoZ,IACPD,GAAoB,SAACE,GACnB,GAAIA,EAAYvb,QAAU,EAAG,OAAOub,EAGpC,IAAMC,EAAaD,EAAYnT,MAAM,GAAI,GAGnCqT,EAAgBD,EAAWA,EAAWxb,OAAS,GAKrD,OAFA4a,EAAca,GAEPD,KA+BX,OA5DAjU,qBAAU,WAC2C,IAA/CoT,EAAWpa,QAAQK,QAAQD,SAASX,QACxCuQ,EAAiBmF,EAAgB,IAAMyF,EAAe9Q,WACrD,CAACsQ,IAEJpT,qBAAU,WACR6T,GAAgB,kBAAME,OACrB,IACH/T,qBAAU,WAER8T,GAAoB,SAACE,GAAW,SAAA5T,OAAA0F,aAC3BkO,GAAW,CAAAnK,YAAA,GACTuJ,UAEN,CAACA,IAmBJ7W,QAAQC,IAAIyK,GAEZjH,qBAAU,WACR6T,GAAgB,kBAAME,OACrB,CAAC9M,EAAkB4M,IAwBpB1Y,eAACoT,KAAG,CAAA7S,SAAA,CACF9L,cAACqiB,GAAmB,CAClB7J,aAAcA,EACdC,QAASA,EACTa,mBAAoBA,IAEtBtZ,cAACsiB,GAAc,CAACE,YAAaqB,IAC7B7jB,cAAA,MAAAia,wBAAA,GAASyJ,GAAa,IAAA5X,SACpBP,eAACC,IAAI,CAACC,WAAS,EAACI,QAAS,EAAG4C,KAAK,SAAQ3C,SAAA,CACvC9L,cAACqhB,GAAkB,CAEjBC,OAAQkC,EAAWpa,QAAQC,QAC3B8X,WAAY,aAFPqC,EAAWpa,QAAQC,QAAQC,IAIlCtJ,cAACqhB,GAAkB,CAEjBC,OAAQkC,EAAWpa,QAAQK,QAC3BwV,WAAW,EACXkC,WAAY,IAHPqC,EAAWpa,QAAQK,QAAQH,IAKlCtJ,cAACqhB,GAAkB,CAEjBC,OAAQkC,EAAWpa,QAAQO,QAC3BwX,WAAY,cAFPqC,EAAWpa,QAAQO,QAAQL,c,UC1E7Bib,GAvCO,SAAHtb,GAA8C,IAAxC6G,EAAK7G,EAAL6G,MAAOC,EAAK9G,EAAL8G,MAAO0L,EAAKxS,EAALwS,MAAO+I,EAAWvb,EAAXub,YAC5C3Z,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzC4Z,EAAU1Z,EAAA,GAAE2Z,EAAa3Z,EAAA,GAChCI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CwZ,EAAYvZ,EAAA,GAAEwZ,EAAexZ,EAAA,GAC9ByZ,EAAc9R,kBAAO,GAa3B,OAZA3C,qBAAU,WACmB,GAAvByU,EAAY3R,SAIhB7C,YAAW,WACTqU,GAAc,GACdrU,YAAW,kBAAMuU,EAAgBnJ,KAAQ,OACxC,IAAM1L,GACT2U,GAAc,IAPZG,EAAY3R,SAAU,IAQvB,CAACuI,IAGFzb,cAAC2gB,KAAS,CAACC,YAAa9Q,EAAOC,MAAOA,EAAO+U,gBAAiBN,EAAY1Y,SACvE,SAACoT,GAAQ,OACRlf,cAAA,MAAAia,oCAAA,GACMiF,EAASC,iBACTD,EAAS2B,gBAAc,IAC3BtN,IAAK2L,EAAS4B,SAAShV,SAEvB9L,cAACsQ,IAAI,CACHC,UAAS,YAAAC,OAAciU,EAAa,SAAW,IAC/C7S,GAAI,CAAEkM,gBAAiB6G,GAAe7Y,SAEtC9L,cAACwL,IAAI,CAACC,WAAS,EAACG,eAAe,SAAQE,SACrC9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAA,MAAA8L,SAAKgE,iBC3BfiV,GAAanI,KAAO0C,IAAGC,QAAAC,aAAA,QAuCdwF,GArCW,SAAH/b,GAAyC,IAAnCqY,EAAMrY,EAANqY,OAAQ2D,EAAMhc,EAANgc,OAAQT,EAAWvb,EAAXub,YAE3C,OACExkB,cAAA,OAAA8L,SACE9L,cAAC+hB,KAAS,CAAiBC,YAAaV,EAAOhY,GAAGwC,SAC/C,SAACoT,EAAUQ,GAAQ,OAClB1f,cAAC+kB,GAAU9K,wBAAA,CACT1G,IAAK2L,EAAS4B,UACV5B,EAASgD,gBAAc,IAC3BhB,eAAgBxB,EAASwB,eAAepV,SAExCP,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAAQE,SAAA,CAEtBwV,EAAO9X,SAAS0H,KAAI,SAACpB,EAAOC,GAC3B,OACE/P,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACukB,GAAa,CACZzU,MAAOA,EACPC,MAAOuR,EAAO9X,SAAS2Y,QAAQrS,GAC/B2L,MAAOwJ,EAAOlV,GACdyU,YAAaA,KALD1U,MAUnBoP,EAASkD,oBAzBFd,EAAOhY,OCId4b,GAbK,SAAHjc,GAA0B,IAArBwP,EAAOxP,EAAPwP,QAAS0M,EAAMlc,EAANkc,OAK3B,OACInlB,cAACoM,IAAM,CAACE,QALE,YxBiCX,SAA8B6Y,GACnC/a,IAASM,MAAM,mBAAoB,CAAE0a,OAAQD,IwBjCvCE,CAAqBF,GACrB1M,EAAQ6M,QAAQ,MAIRjZ,QAAQ,YAAWP,SACtB,aC2BEyZ,GAlCM,SAAHtc,GAQX,IAPLqY,EAAMrY,EAANqY,OACAkE,EAAMvc,EAANuc,OACAP,EAAMhc,EAANgc,OACAQ,EAASxc,EAATwc,UACAhN,EAAOxP,EAAPwP,QACA+L,EAAWvb,EAAXub,YACAkB,EAAUzc,EAAVyc,WAEA,OACEna,eAACC,IAAI,CACHC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAAQE,SAAA,CAEvB9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACglB,GAAiB,CAChB1D,OAAQA,EACR2D,OAAQA,EACRT,YAAaA,MAGjBjZ,eAACC,IAAI,CAACO,MAAI,EAAC6F,GAAI,CAAE+T,WAAY,OAAQ7Z,SAAA,CAClC4Z,GACC1lB,cAACoM,IAAM,CAACE,QAASkZ,EAAQnZ,QAAQ,YAAWP,SAAC,YAI9C2Z,GAAazlB,cAACklB,GAAW,CAACzM,QAASA,WCiG7BmN,GAzHG,SAAH3c,GAAwD,IAAlDE,EAAMF,EAANE,OAAQqa,EAAUva,EAAVua,WAAYC,EAAaxa,EAAbwa,cAAehL,EAAOxP,EAAPwP,QAClDoN,EAAa9S,iBAAOtK,EAAQU,EAAO8H,MAAM,EAAG,KAC5C6U,EAAc/S,iBAAO,IACrBgT,EAAY7c,EAAcE,QAAQK,QAAQD,SAC1CkO,EAAY3E,iBAAO,IACvBlI,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCoa,EAAMla,EAAA,GAAEib,EAASjb,EAAA,GACxBI,EAAsCL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAA7CqZ,EAAWpZ,EAAA,GAAE6a,EAAc7a,EAAA,GAElC6I,EAA0CnJ,mBAAS,IAAGqJ,EAAAnJ,YAAAiJ,EAAA,GAA/CiS,EAAa/R,EAAA,GAAEgS,EAAgBhS,EAAA,GACtCE,EAAkCvJ,oBAAS,GAAKyJ,EAAAvJ,YAAAqJ,EAAA,GAAzC+R,EAAS7R,EAAA,GAAE8R,EAAY9R,EAAA,GAC9BE,EAAoC3J,oBAAS,GAAM6J,EAAA3J,YAAAyJ,EAAA,GAA5C6R,EAAU3R,EAAA,GAAE4R,EAAa5R,EAAA,GAChCE,EAA+B/J,oBAAS,GAAMiK,EAAA/J,YAAA6J,EAAA,GAAvC4Q,EAAS1Q,EAAA,GAAEyR,EAASzR,EAAA,GAC3BE,EAAoCnK,oBAAS,GAAKqK,EAAAnK,YAAAiK,EAAA,GAA3CyQ,EAAUvQ,EAAA,GAAEsR,EAAatR,EAAA,GAEhC/E,qBAAU,WACR,KAAO0V,EAAY5S,QAAQrK,OAAS,GAE7Bgd,EAAW3S,QAAQwT,SAASX,EAAU,KACzCD,EAAY5S,QAAQmD,KAAK0P,EAAU,IAErCA,EAAYA,EAAUY,OAAO,EAAGZ,EAAUld,QAE5C+d,MACC,CAACb,IAEJ,IAAMc,EAAa,SAACC,GAElB,GADApP,EAAUxE,QAAQmD,KAAKyQ,GACW,IAA9BjB,EAAW3S,QAAQrK,OAAc,CACnC,IAAMke,EAAS9M,wBAAA,GACVuJ,EAAWpa,QAAQQ,UAAQ,IAC9BJ,SAAUkO,EAAUxE,UAEhB8T,EAAa/M,wBAAA,GACduJ,GAAU,IACbpa,QAAO6Q,wBAAA,GACFuJ,EAAWpa,SAAO,IACrBQ,SAAUmd,MAGdtD,EAAcuD,G1BdSC,E0BeVD,EAAc5d,QAAQQ,S1BdvCQ,IAASM,MAAM,UAAW,CAAE,iBAAkBuc,I0Be1CV,GAAc,GACdF,GAAa,G1BjBZ,IAAsBY,E0BmBzBL,KAEIA,EAAiB,WACrBT,EACE1d,EAAQ,CAACod,EAAW3S,QAAQ+C,MAAO6P,EAAY5S,QAAQ+C,SAEzDtJ,QAAQC,IAAI,eAAgBiZ,EAAW3S,SACvCvG,QAAQC,IAAI,eAAgBkZ,EAAY5S,SACxCvG,QAAQC,IAAI8K,EAAUxE,UAyBlBR,EAAWC,YAAc,sBAM/B,OACEpH,eAAA,OAAAO,SAAA,CACGsa,GACC7a,eAACC,IAAI,CACHC,WAAS,EACTI,QAAS6G,EAAW,GAAK,EACzB/G,WAAW,SACXC,eAAe,SACfF,UAAWgH,EAAW,MAAQ,SAAS5G,SAAA,CAEvC9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACyS,GAAY,CACXnG,QAAS,kBAAMua,EAAWX,EAAc,KACxCpW,MAAOoW,EAAc,OAGzBlmB,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACyS,GAAY,CACXnG,QAAS,kBAAMua,EAAWX,EAAc,KACxCpW,MAAOoW,EAAc,UAK5BI,GACCtmB,cAACulB,GAAY,CACXjE,OAAQkC,EAAWpa,QAAQQ,SAC3B4b,OAxDO,WACb7Y,QAAQC,IAAI,SAIZ,IAHA,IAAIsa,EAAc,GACZC,EAAgBhe,EAAO8H,MAAM,EAAG,GAChCmW,EAAQ5D,EAAWpa,QAAQQ,SAASJ,SACjCU,EAAI,EAAGA,EAAIid,EAActe,OAAQqB,IACpCid,EAAcjd,KAAOkd,EAAMld,IAC7Bgd,EAAY7Q,KAAK,SACjB1J,QAAQC,IAAI,UAAWua,EAAcjd,GAAIkd,EAAMld,KACtCid,EAAcT,SAASU,EAAMld,KACtCgd,EAAY7Q,KAAK,QACjB1J,QAAQC,IAAI,WAAYua,EAAcjd,GAAIkd,EAAMld,MAEhDgd,EAAY7Q,KAAK,aACjB1J,QAAQC,IAAI,YAAaua,EAAcjd,GAAIkd,EAAMld,KAGrD8b,EAAUkB,GACVV,GAAU,GACVC,GAAc,GACdR,GAAe,IAqCThB,OAAQA,EACRQ,UAAWA,EACXC,WAAYA,EACZjN,QAASA,EACT+L,YAAaA,QCpCR6C,GA/EI,SAAHpe,GAAgD,IAA1Cua,EAAUva,EAAVua,WAAYC,EAAaxa,EAAbwa,cAAehL,EAAOxP,EAAPwP,QACzCnP,EAAOge,eAAPhe,GACNuB,EAAwCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7C0c,EAAYxc,EAAA,GAAEyc,EAAezc,EAAA,GACpCI,EAAgCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAxCsc,EAAQrc,EAAA,GAAEsc,EAAWtc,EAAA,GAC5B6I,EAAwCnJ,oBAAS,GAAMqJ,EAAAnJ,YAAAiJ,EAAA,GAAhD0T,EAAYxT,EAAA,GAAEyT,EAAezT,EAAA,GACpCE,EAAsCvJ,oBAAS,GAAKyJ,EAAAvJ,YAAAqJ,EAAA,GAA7CwT,EAAWtT,EAAA,GAAEuT,EAAcvT,EAAA,GAC5B7B,EAAWC,YAAc,sBAC/BvC,qBAAU,WACRjC,YAAAC,cAAAC,MAAC,SAAAmD,IAAA,OAAApD,cAAAK,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACOK,EAAY3F,GAAIoD,MAAK,SAAC3C,GAC1Byd,EAAgBzd,MACf,KAAD,mBAAA0H,EAAAzC,UAAAwC,MAHJrD,KAKC,CAAC7E,IAYJ,OADAqD,QAAQC,IAAI,eAAgB2a,GAE1Bhc,eAACC,IAAI,CACHC,WAAS,EACTI,QAAS6G,EAAW,GAAK,EACzB/G,WAAW,SACXC,eAAe,SACfF,UAAWgH,EAAW,MAAQ,SAAS5G,SAAA,CAEtC+b,GACC7nB,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACyS,GAAY,CAACnG,QAhBJ,W3BIlBlC,IAASM,MAAM,gB2BFbkd,GAAgB,GAChBE,GAAe,IAayBhY,MAAM,uBAG3C+X,GACC7nB,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACyS,GAAY,CAACnG,QA1BH,W3BMnBlC,IAASM,MAAM,e2BJbgd,GAAY,GACZI,GAAe,IAuB0BhY,MAAM,sBAI5C2X,GACCznB,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACRP,eAACC,IAAI,CACHC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAAQI,SAAA,CAElB9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACqT,KAAU,CAAChH,QAASqG,EAAW,KAAO,KAAM+I,MAAM,QAAO3P,SAAC,iBAI7D9L,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAACgR,EAAc,CAAC7H,OAAQoe,MAE1BvnB,cAACwL,IAAI,CAACO,MAAI,EAAC0E,MAAO,CAAEG,UAAW,OAAQ9E,SACrC9L,cAACklB,GAAW,CAACzM,QAASA,EAAS0M,OAAO,iBAK7CwC,GACC3nB,cAACwL,IAAI,CAACO,MAAI,EAAAD,SACR9L,cAAC4lB,GAAS,CACRzc,OAAQoe,EACR/D,WAAYA,EACZC,cAAeA,EACfhL,QAASA,U,yCC9DRQ,GAAkB8O,0BAClBjE,GAAkBiE,0BAClBrJ,GAAcqJ,0BACrBC,GAAM,WACV,IAAMvP,EAAUwP,eAChBpd,EAAoCC,mBAAS5B,GAAc6B,EAAAC,YAAAH,EAAA,GAApD2Y,EAAUzY,EAAA,GAAE0Y,EAAa1Y,EAAA,GAChCI,EAAkCL,mBAChC5B,EAAcE,QAAQK,QAAQD,SAASyH,MAAM,EAAG,KACjD7F,EAAAJ,YAAAG,EAAA,GAFMiG,EAAShG,EAAA,GAAEoN,EAAYpN,EAAA,GAG9B6I,EAA4BnJ,mB5BlBvB,SAAwBod,GAC7B,IAAIC,EAAKre,EAAOoe,GAGhB,OAFA9d,IAASM,MAAM,gBAAiB,CAAE4G,MAAO,IACzClH,IAASge,OAAOC,UAAU,WAAY,GAC/BF,E4Bc8BG,CAAe,IAAGnU,EAAAnJ,YAAAiJ,EAAA,GAAhDsU,EAAMpU,EAAA,GACbE,GADwBF,EAAA,GACYrJ,mBAAS,IAAEyJ,EAAAvJ,YAAAqJ,EAAA,GAAxC6E,EAAU3E,EAAA,GAAEiU,EAAajU,EAAA,GAChCE,EAAgC3J,mBAAS,GAAE6J,EAAA3J,YAAAyJ,EAAA,GAApCkD,EAAQhD,EAAA,GAAE8T,EAAW9T,EAAA,GAC5BE,EAA8C/J,mBAAS,IAAGiK,EAAA/J,YAAA6J,EAAA,GAAnDgP,EAAe9O,EAAA,GAAE2T,EAAkB3T,EAAA,GAC1CE,EAAwCnK,mBAAS,MAAKqK,EAAAnK,YAAAiK,EAAA,GAA/CwJ,EAAYtJ,EAAA,GAAE8O,EAAe9O,EAAA,GAC9BwT,EAAe5V,iBAAmB,MAExC6V,KAAQC,WADY,gBAiEpB,SAASC,EAAMpd,GACb,IAAMqd,EAAkBJ,EAAazV,QACrC,IAAK6V,EAEH,OADApc,QAAQ6K,KAAK,6BACN,KAQT,IAAMrE,EAAQ,CAAE6V,EAAG,EAAGzI,EAAG,GACnB0I,EAAM,CAAED,EANI,UAAdtd,EACK,KAEC,IAGa6U,EAAG,GAEpB2I,EAAUH,EAAII,WAAW3F,EAAWpa,QAAQK,QAAQD,SAAS,IAEnE,IAAK0f,EAEH,OADAvc,QAAQ6K,KAAK,6BACN,KAOT,IAJA,IAAM4R,EAAOF,EAAQG,UAAUlW,GAEzBmW,EAAS,GAENpf,EAAI,EAAGA,EAAI,GAAIA,IACtBof,EAAOjT,KAAK,CACV2S,EAAGO,KAAeC,YAAYtf,EAAGiJ,EAAM6V,EAAGC,EAAID,EAAG,IACjDzI,EAAGgJ,KAAeC,YAAYtf,EAAGiJ,EAAMoN,EAAG0I,EAAI1I,EAAG,MAGrDkJ,EAAeL,EAAME,GAGvB,IAAM5F,EAAgBgG,aAAa,CACjCC,aAAc,WACZhd,QAAQC,IAAI,eACZkc,EAAM,SAERc,cAAe,WACbjd,QAAQC,IAAI,gBACZkc,EAAM,YAIV,SAASW,EAAeL,EAAMS,GAC5BC,uBAAsB,WACpB,IAAMC,EAAcF,EAAOzT,QAC3BgT,EAAKY,KAAKD,GACNF,EAAOhhB,OACT4gB,EAAeL,EAAMS,GAErBT,EAAKa,UAWX,OANA7Z,qBAAU,WACR8Z,OAAOC,iBAAiB,aAAa,SAACpb,GACpCA,EAAEqb,sBAEH,IAGDpqB,cAAA,OAAA8L,SACE9L,cAACqqB,KAAe,CACdC,UAjIY,SAAHrhB,GAA8C,IAADshB,EAAvCC,EAAWvhB,EAAXuhB,YAAarF,EAAMlc,EAANkc,OAAQvE,EAAW3X,EAAX2X,YACxC,GAAK4J,IAKHA,EAAYxI,cAAgBmD,EAAOnD,aACnCwI,EAAYza,QAAUoV,EAAOpV,OAF/B,CAMA,IAAMoD,EAAQqQ,EAAWpa,QAAQ+b,EAAOnD,aAClCyI,EAASjH,EAAWpa,QAAQohB,EAAYxI,aAG9C,GAAI7O,IAAUsX,EAAd,CAsBA,IAAMC,EAAgBC,MAAMC,KAAKzX,EAAM3J,UACvCkhB,EAAc/D,OAAOxB,EAAOpV,MAAO,GACnC,IAAM8a,EAAQ5Q,wBAAA,GACT9G,GAAK,IACR3J,SAAUkhB,IAGNI,EAAiBH,MAAMC,KAAKH,EAAOjhB,UACzCshB,EAAenE,OAAO6D,EAAYza,MAAO,EAAG6Q,GAC5C,IAAMmK,EAAS9Q,wBAAA,GACVwQ,GAAM,IACTjhB,SAAUshB,IAGNE,EAAO/Q,wBAAA,GACRuJ,GAAU,IACbpa,QAAO6Q,wBAAA,GACFuJ,EAAWpa,SAAO,IAAAmhB,EAAA,GAAAU,YAAAV,EACpBM,EAASvhB,GAAKuhB,GAAQI,YAAAV,EACtBQ,EAAUzhB,GAAKyhB,GAASR,MAG7B9G,EAAcuH,OA5Cd,CACE,IAAME,EAAcP,MAAMC,KAAKzX,EAAM3J,UACrC0hB,EAAYvE,OAAOxB,EAAOpV,MAAO,GACjCmb,EAAYvE,OAAO6D,EAAYza,MAAO,EAAG6Q,GAEzC,IAAMuK,EAASlR,wBAAA,GACV9G,GAAK,IACR3J,SAAU0hB,IAINF,EAAO/Q,wBAAA,GACRuJ,GAAU,IACbpa,QAAO6Q,wBAAA,GACFuJ,EAAWpa,SAAO,GAAA6hB,YAAA,GACpBE,EAAU7hB,GAAK6hB,MAGpB1H,EAAcuH,MAiGZI,QAAS,CACP,SAACrC,GACCJ,EAAazV,QAAU6V,IAEzBjd,SAEF9L,cAACiZ,GAAgBnI,SAAQ,CACvBd,MAAO,CACL2H,SAAU,CAACA,EAAU8Q,GACrBvP,WAAY,CAACA,EAAYsP,IACzB1c,SAEF9L,cAAC8jB,GAAgBhT,SAAQ,CACvBd,MAAO,CAAE6T,gBAAiB,CAACA,EAAiB6E,IAAsB5c,SAElE9L,cAAC0e,GAAY5N,SAAQ,CAACd,MAAO,CAAEyO,eAAcwF,mBAAkBnY,SAC7DP,eAAC8f,KAAa,CAACC,MAAOlP,GAAStQ,SAAA,CAC7B9L,cAACse,GAAM,CAAC7F,QAASA,IACjBzY,cAACurB,KAAK,CAACC,OAAK,EAACC,KAAK,IAAG3f,SACnB9L,cAAC0rB,KAAQ,CAACC,GAAG,iBAEf3rB,cAACurB,KAAK,CACJC,OAAK,EACLC,KAAK,kBACL3f,SACE9L,cAACujB,GAAa,CACZC,WAAYA,EACZC,cAAeA,EACfrS,UAAWA,EACXoH,aAAcA,EACdC,QAASA,EACTiL,cAAeA,MAIrB1jB,cAACurB,KAAK,CAACE,KAAK,QAAO3f,SACjB9L,cAACsY,GAAW,CACVlH,UAAWA,EACXoH,aAAcA,EACdC,QAASA,EACTC,eAAgBf,MAGpB3X,cAACurB,KAAK,CAACE,KAAK,WAAU3f,SACpB9L,cAACmR,EAAW,CACVC,UAAWA,EACXoH,aAAcA,EACdnH,OAAQkX,MAGZvoB,cAACurB,KAAK,CACJE,KAAK,aACL3f,SACE9L,cAACqnB,GAAU,CACT7D,WAAYA,EACZC,cAAeA,EACfhL,QAASA,oBAqBhBmT,GARI,WACjB,OACE5rB,cAAC6rB,KAAU,CAACC,SAAU,gBAAgBhgB,SACpC9L,cAACgoB,GAAG,OC3OV+D,IAASC,OAAOhsB,cAAC4rB,GAAU,IAAKK,SAASC,cAAc,W","file":"static/js/main.93532a23.chunk.js","sourcesContent":["import {\r\n  BiAlarmOff,\r\n  BiHappyBeaming,\r\n  BsFillShieldLockFill,\r\n  BsFillStopwatchFill,\r\n  BsFillTreeFill,\r\n  BsFillUnlockFill,\r\n  BsMusicNoteBeamed,\r\n  BsPeace,\r\n  FaChild,\r\n  FaFistRaised,\r\n  FaHandshake,\r\n  FaPiggyBank,\r\n  FaRegKissWinkHeart,\r\n  FaTools,\r\n  FiTarget,\r\n  GiBreakingChain,\r\n  GiChoice,\r\n  GiClothes,\r\n  GiCrossedSwords,\r\n  GiFlyingFlag,\r\n  GiGearHammer,\r\n  GiGlowingHands,\r\n  GiHeartInside,\r\n  GiHeartKey,\r\n  GiMedallist,\r\n  GiMountainClimbing,\r\n  GiMountainRoad,\r\n  GiNightSleep,\r\n  GiPalette,\r\n  GiPillow,\r\n  GiSplitArrows,\r\n  GrLineChart,\r\n  HiOutlineScale,\r\n  HiPuzzle,\r\n  MdAccessTime,\r\n  MdConnectWithoutContact,\r\n  MdFamilyRestroom,\r\n  MdFitnessCenter,\r\n  MdLeaderboard,\r\n  MdMenuBook,\r\n  MdOutlineThumbsUpDown,\r\n  MdOutlineVerifiedUser,\r\n  MdPsychology,\r\n  MdSocialDistance,\r\n  MdSportsSoccer,\r\n  MdVolunteerActivism,\r\n  RiEmotionSadLine,\r\n  RiGovernmentLine,\r\n  RiUserHeartFill,\r\n  SiHandshake,\r\n  GiLion,\r\n  RiErrorWarningFill,\r\n  FaGrinStars,\r\n  FaThumbsDown,\r\n  FaScroll,\r\n  GiSittingDog,\r\n  FaUserGraduate,\r\n  GiMeditation,\r\n  FaShapes,\r\n  BiGlasses,\r\n  BsQuestionCircle,\r\n  AiOutlineOrderedList,\r\n  GiFireworkRocket,\r\n  MdBathtub,\r\n  GiBinoculars,\r\n  FaRegSmileBeam,\r\n  FaDoorOpen,\r\n  GiPencilBrush,\r\n  GiButterfly,\r\n  AiOutlineMessage,\r\n} from \"react-icons/all\";\r\n\r\nconst allTraits = [\r\n  \"Ambition\",\r\n  \"Athleticism\",\r\n  \"Artistry\",\r\n  \"Boldness\",\r\n  \"Caution\",\r\n  \"Charisma\",\r\n  \"Directness\",\r\n  \"Contentment\",\r\n  \"Craftsmanship\",\r\n  \"Creativity\",\r\n  \"Decisiveness\",\r\n  \"Discipline\",\r\n  \"Empathy\",\r\n  \"Enthusiasm\",\r\n  \"Flexibility\",\r\n  \"Frugality\",\r\n  \"Generosity\",\r\n  \"Independence\",\r\n  \"Ingenuity\",\r\n  \"Musicality\",\r\n  \"Loyalty\",\r\n  \"Open-mindedness\",\r\n  \"Optimism\",\r\n  \"Patience\",\r\n  \"Presentation\",\r\n  \"Romance\",\r\n  \"Self-care\",\r\n  \"Spirituality\",\r\n  \"Simplicity\",\r\n  \"Spontaneity\",\r\n  \"Teachability\",\r\n  \"Tradition\",\r\n  \"Vulnerability\",\r\n];\r\n\r\nexport const traitIcons = {\r\n  \"Guess the traits\": <BsQuestionCircle />,\r\n  \"Show the traits\": <AiOutlineOrderedList />,\r\n  Artistry: <GiPalette />,\r\n  Musicality: <BsMusicNoteBeamed />,\r\n  Leadership: <GiFlyingFlag />,\r\n  Excellence: <MdLeaderboard />,\r\n  \"Self Control\": <MdPsychology />,\r\n  Presentation: <GiClothes />,\r\n  Independence: <GiBreakingChain />,\r\n  Flexibility: <GiSplitArrows />,\r\n  \"Personal Space\": <MdSocialDistance />,\r\n  Rest: <GiNightSleep />,\r\n  Kindness: <RiUserHeartFill />,\r\n  Recreation: <MdSportsSoccer />,\r\n  Strength: <MdFitnessCenter />,\r\n  Wisdom: <MdMenuBook />,\r\n  Empathy: <MdConnectWithoutContact />,\r\n  Trust: <SiHandshake />,\r\n  Spontaneity: <BiAlarmOff />,\r\n  Adventure: <GiMountainRoad />,\r\n  Integrity: <MdOutlineVerifiedUser />,\r\n  Generosity: <MdVolunteerActivism />,\r\n  Patience: <MdAccessTime />,\r\n  Perseverance: <GiMountainClimbing />,\r\n  Mercy: <GiGlowingHands />,\r\n  Romance: <GiHeartInside />,\r\n  Athleticism: <GiMedallist />,\r\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\r\n  Productivity: <GiGearHammer />,\r\n  Nature: <BsFillTreeFill />,\r\n  Peace: <BsPeace />,\r\n  Determination: <FaFistRaised />,\r\n  Resourcefulness: <HiPuzzle />,\r\n  Authority: <RiGovernmentLine />,\r\n  Hope: <GiHeartKey />,\r\n  Challenge: <GiCrossedSwords />,\r\n  Decisiveness: <GiChoice />,\r\n  Comfort: <GiPillow />,\r\n  Joy: <BiHappyBeaming />,\r\n  Fairness: <HiOutlineScale />,\r\n  Affection: <FaRegKissWinkHeart />,\r\n  Confidence: <BsFillShieldLockFill />,\r\n  Respect: <FaHandshake />,\r\n  Discipline: <BsFillStopwatchFill />,\r\n  Frugality: <FaPiggyBank />,\r\n  Suffering: <RiEmotionSadLine />,\r\n  \"Child-likeness\": <FaChild />,\r\n  Optimism: <GrLineChart />,\r\n  Ambition: <FiTarget />,\r\n  Craftsmanship: <FaTools />,\r\n  Vulnerability: <BsFillUnlockFill />,\r\n  Family: <MdFamilyRestroom />,\r\n  Boldness: <GiLion />,\r\n  Caution: <RiErrorWarningFill />,\r\n  Directness: <AiOutlineMessage />,\r\n  Charisma: <FaGrinStars />,\r\n  Ingenuity: <HiPuzzle />,\r\n  Teachability: <FaUserGraduate />,\r\n  Pessimism: <FaThumbsDown />,\r\n  Loyalty: <GiSittingDog />,\r\n  \"Self-Improvement\": <GiMeditation />,\r\n  Creativity: <GiPencilBrush />,\r\n  Realism: <BiGlasses />,\r\n  Enthusiasm: <GiFireworkRocket />,\r\n  \"Self-care\": <MdBathtub />,\r\n  Spirituality: <GiMeditation />,\r\n  Detachment: <GiButterfly />,\r\n  Vision: <GiBinoculars />,\r\n  Simplicity: <FaShapes />,\r\n  \"Open-mindedness\": <FaDoorOpen />,\r\n  Contentment: <FaRegSmileBeam />,\r\n  Tradition: <FaScroll />,\r\n};\r\n\r\nexport const traitDefinitions = {\r\n  Adventure:\r\n    \"A willingness to embrace new experiences, take risks, and explore the unknown with excitement.\",\r\n  Ambition:\r\n    \"A strong drive to achieve personal and professional goals, demonstrating determination and commitment.\",\r\n  Athleticism:\r\n    \"Exhibiting physical strength, coordination, and endurance, along with a love for physical challenges and sportsmanship.\",\r\n  Artistry:\r\n    \"The ability to express oneself creatively through various forms of art, demonstrating imagination and originality.\",\r\n  Boldness:\r\n    \"The courage to take initiative and act confidently, even in challenging situations.\",\r\n  Caution:\r\n    \"Exercising thoughtful care and consideration before making decisions, showing responsibility and foresight.\",\r\n  Charisma:\r\n    \"A magnetic charm or appeal that inspires and attracts others, creating positive and influential relationships.\",\r\n  Directness:\r\n    \"The ability to address difficult situations directly and assertively, while maintaining respect and fairness.\",\r\n  Contentment:\r\n    \"A deep sense of satisfaction and peace with one's life, fostering gratitude and happiness.\",\r\n  Craftsmanship:\r\n    \"Dedication to producing high-quality work through skill, attention to detail, and pride in one’s craft.\",\r\n  Creativity:\r\n    \"The ability to think outside the box and come up with innovative solutions or ideas.\",\r\n  Decisiveness:\r\n    \"The quality of making clear and confident decisions, especially in challenging or uncertain situations.\",\r\n  Objectivity:\r\n    \"The ability to remain objective and composed in emotionally charged situations, fostering clear thinking and balance.\",\r\n  Generosity:\r\n    \"The willingness to share one's resources, time, or skills with others, fostering a sense of community and mutual support.\",\r\n  Discipline:\r\n    \"A commitment to maintaining self-control and focus in pursuit of long-term goals, even in the face of distractions or challenges.\",\r\n  Empathy:\r\n    \"The capacity to deeply understand and care for the feelings and experiences of others, promoting kindness and compassion.\",\r\n  Enthusiasm:\r\n    \"A contagious energy and excitement that inspires and motivates others toward shared goals.\",\r\n  Flexibility:\r\n    \"The ability to adapt easily to new circumstances, demonstrating resilience and an open-minded approach to change.\",\r\n  Frugality:\r\n    \"The practice of making thoughtful and resourceful decisions, valuing efficiency and sustainability.\",\r\n  Independence:\r\n    \"The strength to think and act freely, demonstrating self-reliance and confidence in one's own abilities.\",\r\n  Ingenuity:\r\n    \"The ability to be resourceful and inventive, finding creative solutions to challenges and making the most of available resources.\",\r\n  Musicality:\r\n    \"A natural talent or learned proficiency in music, showcasing creativity and emotional expression through sound.\",\r\n  Loyalty:\r\n    \"A strong sense of commitment and devotion to others, characterized by reliability and trustworthiness.\",\r\n  \"Open-mindedness\":\r\n    \"A willingness to consider diverse perspectives and embrace new ideas, fostering growth and understanding.\",\r\n  Optimism:\r\n    \"A hopeful and positive outlook on life, expecting good outcomes and focusing on opportunities rather than obstacles.\",\r\n  Patience:\r\n    \"The ability to remain calm and persistent in the face of delays or difficulties, showing perseverance and emotional maturity.\",\r\n  Perseverance:\r\n    \"The determination to keep going and overcome obstacles, showing resilience and strength of character.\",\r\n  \"Personal Space\":\r\n    \"A healthy respect for one's own boundaries and those of others, promoting self-care and mutual respect.\",\r\n  Presentation:\r\n    \"An appreciation for taking care of one's physical health and presentation, reflecting confidence and self-respect.\",\r\n  Realism:\r\n    \"A balanced and practical approach to life, seeing things as they are while working constructively toward improvement.\",\r\n  Romance:\r\n    \"A deep appreciation for emotional connection and expressing love, fostering warmth and intimacy in relationships.\",\r\n  \"Self-care\":\r\n    \"The practice of tending to one’s mental, emotional, and physical health, prioritizing well-being and balance.\",\r\n  Spirituality:\r\n    \"A commitment to personal growth and connection with a higher purpose, fostering inner peace and moral integrity.\",\r\n  Simplicity:\r\n    \"An appreciation for living a life free from unnecessary complexity, focusing on what truly matters.\",\r\n  Tradition:\r\n    \"A deep respect for long-established customs and cultural practices, valuing continuity and heritage.\",\r\n  Teachability:\r\n    \"A willingness and openness to learn from others and experiences, demonstrating humility and a growth mindset.\",\r\n  Vision:\r\n    \"The ability to see the bigger picture and work toward long-term goals with purpose, foresight, and imagination.\",\r\n  Vulnerability:\r\n    \"The strength to be open and honest about one’s feelings, creating deeper connections and emotional authenticity.\",\r\n};\r\n\r\nexport default allTraits;\r\n","export default function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import traits from \"../../utils/listOfAllTraits\";\r\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\n\r\nconst initialTraits = {\r\n  traits,\r\n  columns: {\r\n    column1: {\r\n      id: \"column1\",\r\n      title: \"Not Valued\",\r\n      traitIds: [],\r\n    },\r\n    column2: {\r\n      id: \"column2\",\r\n      title: \"Traits\",\r\n      traitIds: shuffle(listOfAllTraits),\r\n    },\r\n    column3: {\r\n      id: \"column3\",\r\n      title: \"Valued\",\r\n      traitIds: [],\r\n    },\r\n    guessing: {\r\n      id: \"guessing\",\r\n      title: \"guessing\",\r\n      traitIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\r\n};\r\nexport default initialTraits;\r\n","export default function makeId(length) {\r\n  let result = \"\";\r\n  const characters = \"0123456789\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import mixpanel from \"mixpanel-browser\";\r\nimport LogRocket from \"logrocket\";\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\r\nLogRocket.init(\"zwugvl/trait-ranker\");\r\n\r\nLogRocket.getSessionURL(function (sessionURL) {\r\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\r\n});\r\n\r\nexport function makeAndTrackId(len) {\r\n  let Id = makeId(len);\r\n  mixpanel.track(\"Session Start\", { steps: 1 });\r\n  mixpanel.people.increment(\"sessions\", 1);\r\n  return Id;\r\n}\r\n\r\nexport function trackRankingPage(topTraits) {\r\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\r\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\r\n}\r\nexport function trackResultsPage(topTraits) {\r\n  mixpanel.track(\"Results Step\", { steps: 3 });\r\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\r\n}\r\nexport function trackShare() {\r\n  mixpanel.track(\"Shared\");\r\n}\r\nexport function trackShowTraits() {\r\n  mixpanel.track(\"Show Traits\");\r\n}\r\nexport function trackGuessTraits() {\r\n  mixpanel.track(\"Guess Traits\");\r\n}\r\nexport function trackGuessed(guesses) {\r\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\r\n}\r\nexport function trackShareConversion(source) {\r\n  mixpanel.track(\"Share Conversion\", { Source: source });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport {trackShare} from \"../utils/mixpanel\"\r\n\r\nconst CopyableLink = ({ text }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const onCopy = () => {\r\n    trackShare();\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          text: \"Take a look at my most valued traits\",\r\n          url: text,\r\n        })\r\n        .then(() => console.log(\"successful share\"))\r\n        .catch((error) => console.log(\"error sharing\", error));\r\n    } else {\r\n      navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => console.log(\"Copied!\"))\r\n        .catch(() => console.log(\"Copy failed\"));\r\n      setShowTooltip(true);\r\n      setShowLink(true);\r\n    }\r\n  };\r\n  const onTipClose = () => {\r\n    setShowTooltip(false);\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Tooltip\r\n          title={\"Copied to clipboard!\"}\r\n          open={showTooltip}\r\n          leaveDelay={1000}\r\n          onClose={onTipClose}\r\n        >\r\n          <Button variant=\"contained\" onClick={onCopy}>\r\n            Share\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      {showLink && (\r\n        <Grid item>\r\n          <InputLabel>{text}</InputLabel>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default CopyableLink;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\r\n  authDomain: \"trait-ranker.firebaseapp.com\",\r\n  projectId: \"trait-ranker\",\r\n  storageBucket: \"trait-ranker.appspot.com\",\r\n  messagingSenderId: \"387696334301\",\r\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\r\n  measurementId: \"G-K0FPHGRC6R\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function getHash(len) {\r\n  let timeout = false;\r\n  while (timeout === false) {\r\n    const hash = makeId(len);\r\n    const docRef = doc(db, hash);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      console.log(\"repeat hash\");\r\n    } else {\r\n      console.log(\"hash \" + hash);\r\n      return hash;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDBTraits(hash, traitArray) {\r\n  await setDoc(doc(db, \"Traits\", hash), {\r\n    traits: traitArray,\r\n  }).catch((e) => {\r\n    console.log(e);\r\n  });\r\n  console.log(doc(db, \"Traits\", hash), traitArray);\r\n}\r\n\r\nexport async function getDBTraits(hash) {\r\n  const docRef = doc(db, \"Traits\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    const traits = docSnap.data().traits;\r\n    console.log(traits);\r\n    return traits;\r\n  } else {\r\n    console.log(\"no doc\");\r\n  }\r\n}\r\n\r\nexport async function setDBProgress(hash, progress) {\r\n  await setDoc(doc(db, \"Progress\", hash), progress).catch((e) => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\nexport async function getDBProgress(hash) {\r\n  const docRef = doc(db, \"Progress\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    return docSnap.data();\r\n  } else {\r\n    console.log(\"No stored progress found\");\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Grid } from \"@mui/material\";\r\nimport { traitIcons } from \"../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst FlipCard = ({ trait, index }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [flip, setFlip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(true);\r\n      setTimeout(() => setValue(trait), 500);\r\n    }, index * 500);\r\n  });\r\n  return (\r\n    <Card className={`wideCard ${flip && \"flip\"}`} style={{ margin: \".5vw\" }}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          style={{ marginTop: \"-8vw\" }} //for some reason this is the only thing I could vertically center content with\r\n        >\r\n          <Grid item>\r\n            <IconContext.Provider value={{ size: \"9vw\" }}>\r\n              {traitIcons[value]}\r\n            </IconContext.Provider>\r\n          </Grid>\r\n          <Grid item>\r\n            <h3>{value}</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FlipCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nconst SmallTraitList = ({ traits }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      {traits.slice(0, 7).map((trait, index) => {\r\n        return (\r\n          <Grid item>\r\n            <FlipCard trait={trait} index={index} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SmallTraitList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport makeId from \"../utils/makeIdUtil\";\r\nimport CopyableLink from \"./CopyableLink\";\r\nimport { setDBTraits } from \"../utils/Firebase\";\r\nimport SmallTraitList from \"./SmallTraitList\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { trackResultsPage } from \"../utils/mixpanel\";\r\n\r\nconst ResultsPage = ({ topTraits, userID }) => {\r\n  useEffect(() => {\r\n    trackResultsPage(topTraits);\r\n    (async () => {\r\n      console.log(\"setting traits\", topTraits);\r\n      await setDBTraits(userID, topTraits);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Grid item>\r\n        <h3>Top Traits</h3>\r\n      </Grid>\r\n      <Grid item>\r\n        <SmallTraitList traits={topTraits.reverse()} />\r\n      </Grid>\r\n      <Grid item sx={{ padding: \"1rem\" }}>\r\n        <CopyableLink\r\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport FlipIcon from \"@mui/icons-material/Flip\";\r\nimport \"../../style/CardStyle.scss\";\r\n\r\nconst CardHelp = ({ toggleFlipped, flipped, firstCard }) => {\r\n  return (\r\n    <IconButton\r\n      onClick={toggleFlipped}\r\n      style={{ position: \"absolute\", top: -5, right: -5 }}\r\n      className={firstCard ? \"icon-grow\" : \"\"}\r\n    >\r\n      {flipped ? (\r\n        <FlipIcon fontSize=\"large\" />\r\n      ) : (\r\n        <HelpOutlineIcon fontSize=\"large\" />\r\n      )}\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default CardHelp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons, traitDefinitions } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid, Typography } from \"@mui/material\";\r\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\r\nimport CardHelp from \"./CardHelp\";\r\n\r\nconst RankingTrait = ({ trait, onClick, className }) => {\r\n  const isMobile = useMediaQuery(\"(max-width:1024px)\");\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const rippleRef = React.useRef(null);\r\n  const onRippleStart = (e) => {\r\n    rippleRef.current.start(e);\r\n  };\r\n  const onRippleStop = (e) => {\r\n    rippleRef.current.stop(e);\r\n  };\r\n\r\n  const toggleFlipped = (e) => {\r\n    setFlipped(!flipped);\r\n    e.stopPropagation(); // Prevent the onClick from triggering\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card rankCard ${flipped ? \"flipped\" : \"\"} ${className || \"\"}`}\r\n      onClick={onClick}\r\n      onMouseDown={onRippleStart}\r\n      onMouseUp={onRippleStop}\r\n    >\r\n      <div className=\"card-inner\">\r\n        {/* Front Side */}\r\n        <div className=\"card-front\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconContext.Provider\r\n                value={isMobile ? { size: \"30vw\" } : { size: \"6vw\" }}\r\n              >\r\n                {traitIcons[trait]}\r\n              </IconContext.Provider>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/* Back Side */}\r\n        <div className=\"card-back\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{traitDefinitions[trait]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <TouchRipple ref={rippleRef} center={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTrait;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useMergeSort(initialTraits, initialState = null) {\r\n  // Constants\r\n  const TOP_K = 7;\r\n\r\n  // State Variables\r\n  const [currentMatch, setCurrentMatch] = useState(\r\n    initialState?.currentMatch || null\r\n  );\r\n  const [currentStanding, setCurrentStanding] = useState(\r\n    initialState?.currentStanding || []\r\n  );\r\n  const [isComplete, setIsComplete] = useState(\r\n    initialState?.isComplete || false\r\n  );\r\n  const [progressPercent, setProgressPercent] = useState(\r\n    initialState?.progressPercent || 0\r\n  );\r\n  const [comparisonStack, setComparisonStack] = useState(\r\n    initialState?.comparisonStack || []\r\n  );\r\n  const [mergeStack, setMergeStack] = useState(initialState?.mergeStack || []);\r\n  const [totalComparisons, setTotalComparisons] = useState(\r\n    initialState?.totalComparisons || 0\r\n  );\r\n  const [comparisonsMade, setComparisonsMade] = useState(\r\n    initialState?.comparisonsMade || 0\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!initialState) {\r\n      initializeSort(initialTraits);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [initialTraits]);\r\n\r\n  function initializeSort(traitList) {\r\n    if (!traitList || traitList.length === 0) {\r\n      setIsComplete(true);\r\n      setProgressPercent(100);\r\n      setCurrentStanding([]);\r\n      setCurrentMatch(null);\r\n      return;\r\n    }\r\n\r\n    // Initialize merge stack with individual traits\r\n    const initialSublists = traitList.map((trait) => [trait]);\r\n\r\n    setMergeStack([initialSublists]);\r\n    setTotalComparisons(calculateTotalComparisons(traitList.length));\r\n    setComparisonsMade(0);\r\n    setProgressPercent(0);\r\n    setIsComplete(false);\r\n    setCurrentStanding([]);\r\n\r\n    prepareNextComparison([initialSublists], []);\r\n  }\r\n\r\n  function prepareNextComparison(currentMergeStack, currentComparisonStack) {\r\n    if (\r\n      currentMergeStack.length === 1 &&\r\n      currentMergeStack[0].length === 1 &&\r\n      currentComparisonStack.length === 0\r\n    ) {\r\n      // Only one sublist remains and no pending comparisons\r\n      finalizeSort(currentMergeStack);\r\n      return;\r\n    }\r\n\r\n    const currentLevel = currentMergeStack[currentMergeStack.length - 1];\r\n\r\n    // If the current level has no sublists, pop it and move to the next level\r\n    if (currentLevel.length === 0) {\r\n      currentMergeStack.pop();\r\n      setMergeStack([...currentMergeStack]);\r\n      prepareNextComparison(currentMergeStack, currentComparisonStack);\r\n      return;\r\n    }\r\n\r\n    // If the current level has only one sublist, move it up to the next level\r\n    if (currentLevel.length === 1) {\r\n      const mergedSublist = currentLevel.shift();\r\n\r\n      currentMergeStack.pop();\r\n\r\n      if (currentMergeStack.length === 0) {\r\n        // Sorting complete\r\n        setCurrentStanding(mergedSublist.slice(0, TOP_K));\r\n        setIsComplete(true);\r\n        setProgressPercent(100);\r\n        setCurrentMatch(null);\r\n        return;\r\n      } else {\r\n        // Add merged sublist to the next level\r\n        if (!currentMergeStack[currentMergeStack.length - 1]) {\r\n          currentMergeStack.push([]);\r\n        }\r\n        const nextLevel = currentMergeStack[currentMergeStack.length - 1];\r\n        nextLevel.push(mergedSublist);\r\n        setMergeStack([...currentMergeStack]);\r\n        prepareNextComparison(currentMergeStack, currentComparisonStack);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Get the first two sublists to merge\r\n    const leftSublist = currentLevel.shift();\r\n    const rightSublist = currentLevel.shift();\r\n\r\n    // Initialize the merged sublist\r\n    const mergedSublist = [];\r\n\r\n    // Push the current merge context onto the comparison stack\r\n    currentComparisonStack.push({\r\n      leftSublist,\r\n      rightSublist,\r\n      mergedSublist,\r\n      leftIndex: 0,\r\n      rightIndex: 0,\r\n    });\r\n\r\n    setMergeStack([...currentMergeStack]);\r\n    setComparisonStack([...currentComparisonStack]);\r\n\r\n    // Start the first comparison\r\n    getNextComparison(currentComparisonStack);\r\n  }\r\n\r\n  function getNextComparison(currentComparisonStack) {\r\n    const currentMerge =\r\n      currentComparisonStack[currentComparisonStack.length - 1];\r\n\r\n    if (!currentMerge) {\r\n      // No more comparisons\r\n      prepareNextComparison(mergeStack, currentComparisonStack);\r\n      return;\r\n    }\r\n\r\n    const { leftSublist, rightSublist, leftIndex, rightIndex } = currentMerge;\r\n\r\n    const leftTrait =\r\n      leftSublist && leftIndex < leftSublist.length\r\n        ? leftSublist[leftIndex]\r\n        : null;\r\n    const rightTrait =\r\n      rightSublist && rightIndex < rightSublist.length\r\n        ? rightSublist[rightIndex]\r\n        : null;\r\n\r\n    if (leftTrait && rightTrait) {\r\n      setCurrentMatch({ left: leftTrait, right: rightTrait });\r\n    } else {\r\n      // Add any remaining traits to merged sublist\r\n      if (leftIndex < leftSublist.length) {\r\n        currentMerge.mergedSublist.push(...leftSublist.slice(leftIndex));\r\n      }\r\n      if (rightIndex < rightSublist.length) {\r\n        currentMerge.mergedSublist.push(...rightSublist.slice(rightIndex));\r\n      }\r\n\r\n      // Remove current merge from stack\r\n      currentComparisonStack.pop();\r\n      setComparisonStack([...currentComparisonStack]);\r\n\r\n      // Add merged sublist to the next level\r\n      addMergedSublistToNextLevel(currentMerge.mergedSublist, mergeStack);\r\n\r\n      // Continue with next comparison\r\n      prepareNextComparison(mergeStack, currentComparisonStack);\r\n    }\r\n  }\r\n  function matchWin(winner) {\r\n    const currentComparisonStack = [...comparisonStack];\r\n    const currentMerge =\r\n      currentComparisonStack[currentComparisonStack.length - 1];\r\n\r\n    if (!currentMerge) {\r\n      console.warn(\"matchWin called after sorting is complete\");\r\n      return;\r\n    }\r\n\r\n    const { leftSublist, rightSublist, mergedSublist, leftIndex, rightIndex } =\r\n      currentMerge;\r\n\r\n    const leftTrait = leftSublist && leftSublist[leftIndex];\r\n    const rightTrait = rightSublist && rightSublist[rightIndex];\r\n\r\n    // Add the winner to the merged sublist\r\n    mergedSublist.push(winner);\r\n\r\n    // Initialize selectionHistory if it doesn't exist\r\n    if (!currentMerge.selectionHistory) {\r\n      currentMerge.selectionHistory = [];\r\n    }\r\n\r\n    // Record the winner's side ('left' or 'right')\r\n    if (winner === leftTrait) {\r\n      currentMerge.leftIndex += 1;\r\n      currentMerge.selectionHistory.push(\"left\");\r\n    } else if (winner === rightTrait) {\r\n      currentMerge.rightIndex += 1;\r\n      currentMerge.selectionHistory.push(\"right\");\r\n    }\r\n\r\n    setComparisonStack(currentComparisonStack);\r\n\r\n    // Update comparisons made\r\n    setComparisonsMade((prev) => {\r\n      const newComparisonsMade = prev + 1;\r\n      updateProgress(newComparisonsMade);\r\n      return newComparisonsMade;\r\n    });\r\n\r\n    // Prepare the next comparison\r\n    getNextComparison(currentComparisonStack);\r\n  }\r\n\r\n  function addMergedSublistToNextLevel(mergedSublist, currentMergeStack) {\r\n    // Ensure the next level exists\r\n    if (currentMergeStack.length === 1) {\r\n      currentMergeStack.unshift([]);\r\n    }\r\n\r\n    const nextLevelIndex = currentMergeStack.length - 2;\r\n    const nextLevel = currentMergeStack[nextLevelIndex];\r\n    nextLevel.push(mergedSublist);\r\n\r\n    if (currentMergeStack[currentMergeStack.length - 1].length === 0) {\r\n      // Current level merges are complete, move to next level\r\n      currentMergeStack.pop();\r\n    }\r\n\r\n    setMergeStack([...currentMergeStack]);\r\n  }\r\n  function finalizeSort(currentMergeStack) {\r\n    let finalList = [];\r\n\r\n    if (currentMergeStack.length > 0 && currentMergeStack[0].length > 0) {\r\n      finalList = currentMergeStack[0][0];\r\n    }\r\n\r\n    console.log(\"Final list:\", finalList);\r\n\r\n    setCurrentStanding(finalList.slice(0, TOP_K));\r\n    setIsComplete(true);\r\n    setProgressPercent(100);\r\n    setCurrentMatch(null);\r\n  }\r\n\r\n  function updateProgress(newComparisonsMade) {\r\n    const progress = Math.min(\r\n      (newComparisonsMade / totalComparisons) * 100,\r\n      100\r\n    );\r\n    setProgressPercent(progress);\r\n  }\r\n\r\n  function calculateTotalComparisons(n) {\r\n    let totalComparisons = 0;\r\n    let levelSize = 1;\r\n\r\n    while (levelSize < n) {\r\n      totalComparisons += Math.ceil(n / (2 * levelSize)) * levelSize;\r\n      levelSize *= 2;\r\n    }\r\n\r\n    return totalComparisons;\r\n  }\r\n\r\n  function revertMatch() {\r\n    if (comparisonStack.length === 0) {\r\n      console.warn(\"No moves to revert\");\r\n      return;\r\n    }\r\n\r\n    const currentComparisonStack = [...comparisonStack];\r\n    const currentMerge =\r\n      currentComparisonStack[currentComparisonStack.length - 1];\r\n\r\n    const { mergedSublist, selectionHistory } = currentMerge;\r\n\r\n    if (!selectionHistory || selectionHistory.length === 0) {\r\n      // No moves to revert in the current merge; pop back to previous merge\r\n      currentComparisonStack.pop();\r\n      setComparisonStack(currentComparisonStack);\r\n\r\n      // Restore currentMatch from the previous merge if available\r\n      if (currentComparisonStack.length > 0) {\r\n        const previousMerge =\r\n          currentComparisonStack[currentComparisonStack.length - 1];\r\n        const prevLeftTrait =\r\n          previousMerge.leftSublist[previousMerge.leftIndex];\r\n        const prevRightTrait =\r\n          previousMerge.rightSublist[previousMerge.rightIndex];\r\n        setCurrentMatch({ left: prevLeftTrait, right: prevRightTrait });\r\n      } else {\r\n        // No previous merges; sorting has not started\r\n        setCurrentMatch(null);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // Remove the last selected trait\r\n    mergedSublist.pop();\r\n\r\n    // Remove the last selection from selectionHistory\r\n    const lastWinnerSide = selectionHistory.pop();\r\n\r\n    // Decrement comparisons made\r\n    setComparisonsMade((prev) => {\r\n      const newComparisonsMade = prev > 0 ? prev - 1 : 0;\r\n      updateProgress(newComparisonsMade);\r\n      return newComparisonsMade;\r\n    });\r\n\r\n    // Decrement index of the last move based on lastWinnerSide\r\n    if (lastWinnerSide === \"left\") {\r\n      currentMerge.leftIndex -= 1;\r\n    } else if (lastWinnerSide === \"right\") {\r\n      currentMerge.rightIndex -= 1;\r\n    }\r\n\r\n    setComparisonStack(currentComparisonStack);\r\n\r\n    // Set isComplete to false if it was true\r\n    if (isComplete) {\r\n      setIsComplete(false);\r\n      setProgressPercent((comparisonsMade / totalComparisons) * 100);\r\n    }\r\n\r\n    // Restore currentMatch\r\n    const leftTrait = currentMerge.leftSublist[currentMerge.leftIndex] || null;\r\n    const rightTrait =\r\n      currentMerge.rightSublist[currentMerge.rightIndex] || null;\r\n\r\n    if (leftTrait && rightTrait) {\r\n      setCurrentMatch({ left: leftTrait, right: rightTrait });\r\n    } else {\r\n      // If no traits left to compare in current merge, move back to previous merge\r\n      currentComparisonStack.pop();\r\n      setComparisonStack(currentComparisonStack);\r\n      // Prepare next comparison from the previous state\r\n      if (currentComparisonStack.length > 0) {\r\n        getNextComparison(currentComparisonStack);\r\n      } else {\r\n        setCurrentMatch(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  const rankingState = {\r\n    currentMatch,\r\n    currentStanding,\r\n    isComplete,\r\n    progressPercent,\r\n    comparisonStack,\r\n    mergeStack,\r\n    totalComparisons,\r\n    comparisonsMade,\r\n  };\r\n\r\n  return {\r\n    progressPercent,\r\n    currentStanding,\r\n    currentMatch,\r\n    matchWin,\r\n    revertMatch,\r\n    isComplete,\r\n    rankingState,\r\n  };\r\n}\r\n\r\nexport default useMergeSort;\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport RankingTrait from \"./TraitCards/RankingTrait\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport { ProgressContext } from \"./App\";\r\nimport useMergeSort from \"../utils/useMergeSort\";\r\nimport { UndoContext } from \"./App\";\r\nimport \"../style/CardStyle.scss\";\r\n\r\nconst RankingPage = ({ topTraits, setTopTraits, history, initalProgress }) => {\r\n  // Memoize topTraits to prevent unnecessary re-initialization\r\n  const memoizedTopTraits = useMemo(() => topTraits.slice(), [topTraits]);\r\n  useEffect(() => {\r\n    console.log(\"Memoized topTraits:\", memoizedTopTraits);\r\n  }, [memoizedTopTraits]);\r\n\r\n  const {\r\n    progressPercent,\r\n    currentMatch,\r\n    currentStanding,\r\n    matchWin,\r\n    revertMatch,\r\n    isComplete,\r\n  } = useMergeSort(memoizedTopTraits, initalProgress?.data?.ranking);\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const [leftCardClass, setLeftCardClass] = useState(\"\");\r\n  const [rightCardClass, setRightCardClass] = useState(\"\");\r\n  const handleRoundWin = useCallback(\r\n    (trait) => {\r\n      // Trigger slide-out animation\r\n      if (trait === currentMatch.left) {\r\n        setLeftCardClass(\"slide-out\");\r\n        setRightCardClass(\"fade-out\");\r\n      } else {\r\n        setLeftCardClass(\"fade-out\");\r\n        setRightCardClass(\"slide-out\");\r\n      }\r\n\r\n      // Set timeout to update the match and reset animations after slide-out is complete\r\n      setTimeout(() => {\r\n        matchWin(trait);\r\n        setProgressState(progressPercent);\r\n        setLeftCardClass(\"slide-in\");\r\n        setRightCardClass(\"slide-in\");\r\n\r\n        // Set another timeout to reset the classes after the slide-in animation\r\n        setTimeout(() => {\r\n          setLeftCardClass(\"\");\r\n          setRightCardClass(\"\");\r\n        }, 600); // Timeout matches the slide-in animation duration\r\n      }, 600); // Timeout matches the slide-out animation duration\r\n    },\r\n    [currentMatch, matchWin, progressPercent, setProgressState]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"isComplete:\", isComplete);\r\n    if (isComplete) {\r\n      setTopTraits(currentStanding);\r\n      setActiveStepState(3);\r\n      history.push(\"/Results\");\r\n    }\r\n  }, [isComplete]);\r\n\r\n  const handleRevertMatch = () => {\r\n    revertMatch();\r\n    setProgressState(progressPercent);\r\n  };\r\n\r\n  // Ensure topTraits is populated before rendering\r\n  if (!topTraits || topTraits.length === 0) {\r\n    return <div>Loading traits...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={isMobile ? 60 : 3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        direction={isMobile ? \"row\" : \"column\"}\r\n      >\r\n        {currentMatch && currentMatch.left && (\r\n          <Grid item>\r\n            <RankingTrait\r\n              className={leftCardClass}\r\n              trait={currentMatch.left}\r\n              onClick={() => handleRoundWin(currentMatch.left)}\r\n              key={currentMatch.left}\r\n            />\r\n          </Grid>\r\n        )}\r\n        {currentMatch && currentMatch.right && (\r\n          <Grid item>\r\n            <RankingTrait\r\n              className={rightCardClass}\r\n              trait={currentMatch.right}\r\n              onClick={() => handleRoundWin(currentMatch.right)}\r\n              key={currentMatch.right}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n","import React, { forwardRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Slide,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst HelpDialogBox = ({ currentPage }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [grow, setGrow] = React.useState(false);\r\n\r\n  const doGrow = () => {\r\n    setGrow(true);\r\n    setTimeout(() => {\r\n      setGrow(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    doGrow();\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  const helpData = {\r\n    Selection: {\r\n      title: \"Selection\",\r\n      description: `Trait Ranker helps you discover and prioritize your most important personality traits. ${\r\n        isMobile ? \"Drag\" : \"Swipe \"\r\n      } right to mark a trait as valuable or left to skip it. Press the help button anytime for guidance.`,\r\n      Media: \"https://i.imgur.com/7G5Jwbk.gif\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton onClick={handleOpen} className={`${grow && \"grow\"}`}>\r\n        <HelpOutlineIcon fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Dialog\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n        open={open}\r\n        fullScreen\r\n        style={{\r\n          marginTop: \"10vh\",\r\n          marginLeft: \"1vw\",\r\n          marginRight: \"1vw\",\r\n        }}\r\n        PaperProps={{\r\n          style: { borderTopLeftRadius: 6, borderTopRightRadius: 6 },\r\n        }}\r\n      >\r\n        <DialogTitle>{helpData[\"Selection\"].title}</DialogTitle>\r\n        <IconButton\r\n          style={{ position: \"absolute\", right: \"0\" }}\r\n          color=\"inherit\"\r\n          onClick={handleClose}\r\n          aria-label=\"close\"\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContentText paragraph={false} style={{ margin: 10 }}>\r\n          {helpData[\"Selection\"].description}\r\n        </DialogContentText>\r\n        <img\r\n          src={helpData[\"Selection\"].Media}\r\n          style={{ width: \"100%\" }}\r\n          alt=\"GIF of swiping on mobile\"\r\n        />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialogBox;\r\n","export default __webpack_public_path__ + \"static/media/logo512.3b8a96fd.png\";","import React from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport logo512 from \"../../Assets/logo512.png\";\r\n\r\nconst HomeButton = ({ history }) => {\r\n  const handleHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <IconButton\r\n      color=\"inherit\"\r\n      onClick={handleHome}\r\n      style={{ maxWidth: \"10vh\", maxHeight: \"10vh\" }}\r\n    >\r\n      <img\r\n        src={logo512}\r\n        alt=\"The trait ranker icon\"\r\n        style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n      />\r\n    </IconButton>\r\n  );\r\n};\r\nexport default HomeButton;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nconst appTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#caf0f9\",\r\n    },\r\n    secondary: {\r\n      main: \"#90e0ef\",\r\n    },\r\n  },\r\n});\r\nexport default appTheme;\r\n","//Taken from https://stackoverflow.com/questions/65042023/how-to-do-an-stepper-with-progress-bars-material-ui\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport styled from \"@emotion/styled\";\r\nimport CompareArrowsOutlinedIcon from \"@mui/icons-material/CompareArrowsOutlined\";\r\nimport SortOutlinedIcon from \"@mui/icons-material/SortOutlined\";\r\nimport WorkspacePremiumOutlinedIcon from \"@mui/icons-material/WorkspacePremiumOutlined\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport appTheme from \"../../style/appTheme\";\r\n\r\nfunction CustomStepper(props) {\r\n  const StyledStepper = styled(\"ul\")({\r\n    display: \"flex\",\r\n    flexFlow: \"row nowrap\",\r\n    justifyContent: \"space-around\",\r\n    padding: 0,\r\n    width: \"100%\",\r\n  });\r\n  const StyledStepperStep = styled(\"li\")({\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flexFlow: \"row nowrap\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  });\r\n  const StyledStepperStepIndex = styled(\"div\")(({ currentStep, done }) => ({\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    lineHeight: \"30px\",\r\n    borderRadius: \"50%\",\r\n    background:\r\n      currentStep || done ? appTheme.palette.secondary.main : \"#dedede\",\r\n    color: currentStep || done ? \"#000\" : \"#999\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  }));\r\n\r\n  const StyledLabelContainer = styled(\"div\")({\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"center\",\r\n  });\r\n\r\n  const { steps, current, progress } = props;\r\n\r\n  const theme = useTheme();\r\n  function StepContent({ done, index }) {\r\n    return done ? \"✓\" : index + 1;\r\n  }\r\n\r\n  const ProgressBar = ({ current, step, progress }) => {\r\n    console.log(progress);\r\n    let value = 0;\r\n    if (current + 1 === step) {\r\n      value = progress;\r\n    } else if (current >= step) {\r\n      value = 100;\r\n    }\r\n\r\n    return (\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={value}\r\n        sx={{\r\n          \"&.MuiLinearProgress-root\": {\r\n            flex: \"1 1 auto\",\r\n            position: \"absolute\",\r\n            top: 12,\r\n            left: \"calc(-50% + 20px)\",\r\n            right: \"calc(50% + 20px)\",\r\n            backgroundColor: \"#ffd8ba61\",\r\n          },\r\n          \"& .MuiLinearProgress-bar\": {\r\n            backgroundColor: appTheme.palette.secondary.main,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  function getStepIcon(currentStep) {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <CompareArrowsOutlinedIcon />;\r\n      case 1:\r\n        return <SortOutlinedIcon />;\r\n      case 2:\r\n        return <WorkspacePremiumOutlinedIcon />;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function renderStep(label, key) {\r\n    const { current, progress } = this;\r\n    const done = key < current;\r\n    const currentStep = key === current;\r\n    return (\r\n      <StyledStepperStep key={key}>\r\n        <StyledLabelContainer>\r\n          <StyledStepperStepIndex currentStep={currentStep} done={done}>\r\n            {getStepIcon(key)}\r\n          </StyledStepperStepIndex>\r\n        </StyledLabelContainer>\r\n        {!!key && (\r\n          <ProgressBar current={current} step={key} progress={progress} />\r\n        )}\r\n      </StyledStepperStep>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledStepper>\r\n      {steps.map(renderStep, { current, progress })}\r\n    </StyledStepper>\r\n  );\r\n}\r\n\r\nCustomStepper.propTypes = {\r\n  steps: PropTypes.array.isRequired,\r\n  current: PropTypes.number.isRequired,\r\n  progress: PropTypes.number,\r\n};\r\n\r\nexport default CustomStepper;\r\n","import React, { useContext } from \"react\";\r\nimport { AppBar, Box, Toolbar, IconButton, Grid } from \"@mui/material\";\r\nimport { FaUndo } from \"react-icons/fa\";\r\n\r\nimport HelpDialogBox from \"./HelpDialogBox\";\r\nimport HomeButton from \"./HomeButton\";\r\nimport CustomStepper from \"./CustomStepper\";\r\nimport { ProgressContext } from \"../App\";\r\nimport { UndoContext } from \"../App\";\r\nconst steps = [\"Label 1\", \"Label 2\", \"Label 3\"];\r\nconst NavBar = ({ history }) => {\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const { undoFunction } = useContext(UndoContext);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Grid item>\r\n              <HomeButton history={history} />\r\n            </Grid>\r\n            <Grid item flexGrow={1}>\r\n              <CustomStepper\r\n                steps={steps}\r\n                current={activeStepState}\r\n                progress={progressState}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container justifyContent=\"flex-end\" alignItems=\"center\">\r\n                <Grid item>\r\n                  <HelpDialogBox />\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton onClick={undoFunction}>\r\n                    <FaUndo />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default NavBar;\r\n","// SelectionTrait.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons, traitDefinitions } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid, Typography } from \"@mui/material\";\r\nimport CardHelp from \"./CardHelp\";\r\n\r\nconst SelectionTrait = ({ trait, isStarter, provided }) => {\r\n  const isMobile = useMediaQuery(\"(max-width:1024px)\");\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  const toggleFlipped = () => {\r\n    setFlipped(!flipped);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card selection ${flipped ? \"flipped\" : \"\"}`}\r\n      {...provided.dragHandleProps}\r\n      draggable={true}\r\n      id={trait}\r\n    >\r\n      <div className=\" card-inner\">\r\n        {/* Front Side */}\r\n        <div className=\"card-front\">\r\n          <CardHelp\r\n            toggleFlipped={toggleFlipped}\r\n            flipped={flipped}\r\n            isStarter={isStarter}\r\n          />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconContext.Provider\r\n                value={isMobile ? { size: \"60vw\" } : { size: \"6vw\" }}\r\n              >\r\n                {traitIcons[trait]}\r\n              </IconContext.Provider>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/* Back Side */}\r\n        <div className=\"card-back\">\r\n          <CardHelp toggleFlipped={toggleFlipped} flipped={flipped} />\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <h1>{trait}</h1>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">{traitDefinitions[trait]}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionTrait;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport SelectionTrait from \"./SelectionTrait\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\r\n  if (style?.transform) {\r\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\r\n    return {\r\n      ...style,\r\n      transform: axisLockX,\r\n    };\r\n  }\r\n  return style;\r\n};\r\n\r\nfunction getStyle(style, snapshot) {\r\n  style = draggingCustomStyle(style);\r\n  if (!snapshot.isDropAnimating) {\r\n    return style;\r\n  }\r\n  const { moveTo, duration } = snapshot.dropAnimation;\r\n  const draggingOver = snapshot.draggingOver;\r\n  console.log(draggingOver);\r\n  let offset = 0;\r\n  if (draggingOver === \"column1\") {\r\n    offset = -100;\r\n  } else if (draggingOver === \"column3\") {\r\n    offset = 100;\r\n  }\r\n  // move to the right spot\r\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\r\n\r\n  // patching the existing style\r\n  return {\r\n    ...style,\r\n    transform: translate,\r\n    // slowing down the drop\r\n    transition: `all  ${duration + 0.2}s`,\r\n  };\r\n}\r\n\r\nconst TraitDraggable = ({ trait, index, wiggle, firstCard }) => {\r\n  return (\r\n    <Draggable draggableId={trait} key={trait} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n          style={getStyle(provided.draggableProps.style, snapshot)}\r\n          className={wiggle ? \"wiggle-animation\" : \"\"}\r\n        >\r\n          <SelectionTrait\r\n            trait={trait}\r\n            firstCard={firstCard}\r\n            provided={provided}\r\n          />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default TraitDraggable;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { Grid } from \"@mui/material\";\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TraitList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? props.hoverColor : \"white\"};\r\n  display: flex;\r\n  align-items: center;\r\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\r\n  min-height: 100vh;\r\n  max-width: ${(props) => props.isStarter && \"1px\"};\r\n  ${(props) =>\r\n    props.showHoverColor &&\r\n    `\r\n    background-color: ${props.hoverColor};\r\n  `}\r\n`;\r\n\r\nconst SelectionDroppable = ({\r\n  column,\r\n  isStarter = false,\r\n  hoverColor = \"lightBlue\",\r\n}) => {\r\n  const [shouldWiggle, setShouldWiggle] = useState(isStarter);\r\n  const [showHoverColor, setShowHoverColor] = useState(false);\r\n  const [firstCard, setFirstCard] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (isStarter) {\r\n      const timer = setTimeout(() => {\r\n        setShouldWiggle(false);\r\n        setFirstCard(false);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setShowHoverColor(true);\r\n      const timer = setTimeout(() => {\r\n        setShowHoverColor(false);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isStarter]);\r\n\r\n  return (\r\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\r\n      {(provided, snapshot) => (\r\n        <TraitList\r\n          classname=\"cards stack\"\r\n          ref={provided.innerRef}\r\n          isStarter={isStarter}\r\n          hoverColor={hoverColor}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n          showHoverColor={showHoverColor}\r\n          {...provided.droppableProps}\r\n        >\r\n          {isStarter && (\r\n            <TraitDraggable\r\n              key={column?.traitIds[0]}\r\n              trait={column?.traitIds[0]}\r\n              index={column?.traitIds.indexOf(column?.traitIds[0])}\r\n              wiggle={shouldWiggle}\r\n              firstCard={firstCard}\r\n            />\r\n          )}\r\n          {provided.placeholder}\r\n        </TraitList>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default SelectionDroppable;\r\n","import React from \"react\";\r\nimport allTraits from \"../utils/listOfAllTraits\";\r\n\r\nconst skipSelection = (\r\n  setTopTraits,\r\n  allTraits,\r\n  history,\r\n  setActiveStepState\r\n) => {\r\n  // Select half of the topTraits\r\n  const halfLength = Math.ceil(allTraits.length / 2);\r\n  const selectedTraits = allTraits.slice(0, halfLength);\r\n\r\n  // Set the selected traits\r\n  setTopTraits(selectedTraits);\r\n  setActiveStepState(1);\r\n\r\n  console.log(\"Skipping to ranking with traits:\", selectedTraits);\r\n\r\n  // Navigate to the Rank page\r\n  history.push(\"/Rank\");\r\n};\r\n\r\nexport const SkipSelectionButton = ({\r\n  setTopTraits,\r\n  history,\r\n  setActiveStepState,\r\n}) => {\r\n  const handleSkipSelection = () => {\r\n    skipSelection(setTopTraits, allTraits, history, setActiveStepState);\r\n  };\r\n\r\n  if (process.env.NODE_ENV !== \"development\") {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ position: \"fixed\", bottom: \"10px\", right: \"10px\", zIndex: 9999 }}\r\n    >\r\n      <button\r\n        onClick={handleSkipSelection}\r\n        style={{\r\n          padding: \"10px\",\r\n          backgroundColor: \"#ff4081\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Skip Selection\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Fade, Typography, useMediaQuery } from \"@mui/material\";\r\n\r\nconst FadeTextSeries = ({ stringArray = [] }) => {\r\n  const [currentText, setCurrentText] = useState(stringArray[0]);\r\n  const [checked, setChecked] = useState(true);\r\n  const fadeTime = 3000;\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    let count = 0;\r\n\r\n    setInterval(() => {\r\n      setChecked((prev) => !prev);\r\n    }, fadeTime);\r\n\r\n    setInterval(() => {\r\n      if (count !== stringArray.length - 1) {\r\n        count++;\r\n        setCurrentText(stringArray[count]);\r\n      } else {\r\n        setCurrentText(\"\");\r\n      }\r\n    }, fadeTime * 2);\r\n  }, [stringArray]);\r\n\r\n  return (\r\n    <Fade\r\n      in={checked}\r\n      timeout={{\r\n        enter: fadeTime * 1.9,\r\n        exit: fadeTime * 1.9,\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          minHeight: \"1.9rem\",\r\n          marginTop: \"10vh\",\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n        }}\r\n        align=\"center\"\r\n        variant={isMobile ? \"h3\" : \"h5\"}\r\n      >\r\n        {currentText}\r\n      </Typography>\r\n    </Fade>\r\n  );\r\n};\r\nexport default FadeTextSeries;\r\n","// @flow\r\nimport React, { useEffect, useContext, useRef, useState } from \"react\";\r\nimport SelectionDroppable from \"./SelectionDroppable\";\r\nimport { Box, Grid, useMediaQuery } from \"@mui/material\";\r\nimport { ProgressContext } from \"../App\";\r\nimport { TutorialContext } from \"../App\";\r\nimport { SkipSelectionButton } from \"../../utils/devTools\";\r\nimport { UndoContext } from \"../App\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\nconst SelectionPage = ({\r\n  columnData,\r\n  setColumnData,\r\n  setTopTraits,\r\n  history,\r\n  swipeHandlers,\r\n  topTraits,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  useEffect(() => {\r\n    if (columnData.columns.column2.traitIds.length === 0) {\r\n      handleClearStack(columnData.columns.column3.traitIds);\r\n    }\r\n  }, [columnData, history, setTopTraits, topTraits]);\r\n\r\n  const { progress, activeStep } = useContext(ProgressContext);\r\n  const [progressState, setProgressState] = progress;\r\n  const [activeStepState, setActiveStepState] = activeStep;\r\n  const { tutorialStrings } = useContext(TutorialContext);\r\n  const [tutorialStringsState, setTutorialStringsState] = tutorialStrings;\r\n  const numberOfTraits = useRef(columnData.columns.column2.traitIds.length);\r\n  const { setUndoFunction } = useContext(UndoContext); // Use UndoContext\r\n\r\n  const [selectionHistory, setSelectionHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (columnData.columns.column2.traitIds.length === 0) return;\r\n    setProgressState(progressState + 100 / numberOfTraits.current);\r\n  }, [columnData]);\r\n\r\n  useEffect(() => {\r\n    setUndoFunction(() => undoLastSelection);\r\n  }, []);\r\n  useEffect(() => {\r\n    // Store the current columnData in history when it changes\r\n    setSelectionHistory((prevHistory) => [\r\n      ...prevHistory,\r\n      { ...columnData }, // Create a copy to avoid mutation\r\n    ]);\r\n  }, [columnData]);\r\n\r\n  function undoLastSelection() {\r\n    setSelectionHistory((prevHistory) => {\r\n      if (prevHistory.length <= 1) return prevHistory; // Prevent undo when no history exists\r\n\r\n      // Create a new history array without the last entry\r\n      const newHistory = prevHistory.slice(0, -1);\r\n\r\n      // Restore the column data to the previous state (second to last entry)\r\n      const lastSelection = newHistory[newHistory.length - 1];\r\n\r\n      // Update the columnData to the previous state\r\n      setColumnData(lastSelection);\r\n\r\n      return newHistory; // Return updated history\r\n    });\r\n  }\r\n\r\n  console.log(selectionHistory);\r\n  // Set the undo function in the context whenever selection history changes\r\n  useEffect(() => {\r\n    setUndoFunction(() => undoLastSelection);\r\n  }, [selectionHistory, setUndoFunction]);\r\n\r\n  function handleClearStack(topTraits) {\r\n    if (topTraits.length < 7) {\r\n      //encouge user to add more traits\r\n      columnData.columns.column2.traitIds = columnData.columns.column1.traitIds;\r\n      setTutorialStringsState(\"Let's try adding a few more traits.\");\r\n    } else if (topTraits.length > 24) {\r\n      //encouge user to remove traits\r\n      columnData.columns.column2.traitIds = columnData.columns.column3.traitIds;\r\n      setTutorialStringsState(\r\n        \"Let's try removing a few traits to narrow it down.\"\r\n      );\r\n    } else {\r\n      //progress to ranking page\r\n      console.log(columnData.columns.column3.traitIds);\r\n      setTopTraits(columnData.columns.column3.traitIds);\r\n      setActiveStepState(1);\r\n      setProgressState(0);\r\n      history.push(\"/Rank\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <SkipSelectionButton\r\n        setTopTraits={setTopTraits}\r\n        history={history}\r\n        setActiveStepState={setActiveStepState}\r\n      />\r\n      <FadeTextSeries stringArray={tutorialStrings} />\r\n      <div {...swipeHandlers}>\r\n        <Grid container spacing={0} wrap=\"nowrap\">\r\n          <SelectionDroppable\r\n            key={columnData.columns.column1.id}\r\n            column={columnData.columns.column1}\r\n            hoverColor={\"LightPink\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column2.id}\r\n            column={columnData.columns.column2}\r\n            isStarter={true}\r\n            hoverColor={\"\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column3.id}\r\n            column={columnData.columns.column3}\r\n            hoverColor={\"LightGreen\"}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default SelectionPage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Card, Grid } from \"@mui/material\";\r\n\r\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\r\n  const [isBouncing, setIsBouncing] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  useEffect(() => {\r\n    if (firstUpdate.current == true) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setIsBouncing(true);\r\n      setTimeout(() => setCurrentColor(color), 250); //timeout set to half bounce time to time color change to apex\r\n    }, 500 * index); //timeout set to total bounce time to have items bounce one at a time\r\n    setIsBouncing(false);\r\n  }, [color]);\r\n\r\n  return (\r\n    <Draggable draggableId={trait} index={index} isDragDisabled={!isDraggable}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Card\r\n            className={`wideCard ${isBouncing ? \"bounce\" : \"\"}`}\r\n            sx={{ backgroundColor: currentColor }}\r\n          >\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <h3>{trait}</h3>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default FreeDragTrait;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\r\nimport styled from \"styled-components\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst DragColumn = styled.div``;\r\n\r\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\r\n  const tutorialStrings = [\"Rearrange to the guess list order\"];\r\n  return (\r\n    <div>\r\n      <Droppable key={column.id} droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <DragColumn\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {column.traitIds.map((trait, index) => {\r\n                return (\r\n                  <Grid item key={trait}>\r\n                    <FreeDragTrait\r\n                      trait={trait}\r\n                      index={column.traitIds.indexOf(trait)}\r\n                      color={colors[index]}\r\n                      isDraggable={isDraggable}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </DragColumn>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default ReorderableColumn;\r\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.replace('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport TryItButton from \"./TryItButton\";\r\n\r\nconst ReorderGuess = ({\r\n  column,\r\n  onDone,\r\n  colors,\r\n  showTryIt,\r\n  history,\r\n  isDraggable,\r\n  showLockIn,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Grid item>\r\n        <ReorderableColumn\r\n          column={column}\r\n          colors={colors}\r\n          isDraggable={isDraggable}\r\n        />\r\n      </Grid>\r\n      <Grid item sx={{ paddingTop: \"4vh\" }}>\r\n        {showLockIn && (\r\n          <Button onClick={onDone} variant=\"contained\">\r\n            Lock in\r\n          </Button>\r\n        )}\r\n        {showTryIt && <TryItButton history={history} />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ReorderGuess;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport initialTraits from \"../Selection/initialTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport ReorderGuess from \"./ReorderGuess\";\r\nimport { trackGuessed } from \"../../utils/mixpanel\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\r\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\r\n  let wrongTraits = useRef([]);\r\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\r\n  let finalList = useRef([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n  const [currentTraits, setCurrentTraits] = useState([]);\r\n  const [showPicks, setShowPicks] = useState(true);\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [showTryIt, setShowIt] = useState(false);\r\n  const [showLockIn, setShowLockIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    while (wrongTraits.current.length < 7) {\r\n      //get eligible red herrings\r\n      if (!traitsLeft.current.includes(traitPool[0])) {\r\n        wrongTraits.current.push(traitPool[0]);\r\n      }\r\n      traitPool = traitPool.splice(1, traitPool.length);\r\n    }\r\n    loadNextTraits();\r\n  }, [traitPool]);\r\n\r\n  const handlePick = (pick) => {\r\n    finalList.current.push(pick);\r\n    if (traitsLeft.current.length === 0) {\r\n      const newTraits = {\r\n        ...columnData.columns.guessing,\r\n        traitIds: finalList.current,\r\n      };\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          guessing: newTraits,\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      trackGuessed(newColumnData.columns.guessing);\r\n      setShowColumn(true);\r\n      setShowPicks(false);\r\n    }\r\n    loadNextTraits();\r\n  };\r\n  const loadNextTraits = () => {\r\n    setCurrentTraits(\r\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\r\n    );\r\n    console.log(\"TraitsLeft: \", traitsLeft.current);\r\n    console.log(\"WrongTaits: \", wrongTraits.current);\r\n    console.log(finalList.current);\r\n  };\r\n  const onDone = () => {\r\n    console.log(\"done!\");\r\n    let guessColors = [];\r\n    const correctTraits = traits.slice(0, 7);\r\n    const guess = columnData.columns.guessing.traitIds;\r\n    for (let i = 0; i < correctTraits.length; i++) {\r\n      if (correctTraits[i] === guess[i]) {\r\n        guessColors.push(\"green\");\r\n        console.log(\"correct\", correctTraits[i], guess[i]);\r\n      } else if (correctTraits.includes(guess[i])) {\r\n        guessColors.push(\"gold\");\r\n        console.log(\"in there\", correctTraits[i], guess[i]);\r\n      } else {\r\n        guessColors.push(\"LightGray\");\r\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\r\n      }\r\n    }\r\n    setColors(guessColors);\r\n    setShowIt(true);\r\n    setShowLockIn(false);\r\n    setIsDraggable(false);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const guessTutorial = [\r\n    \"Select the traits actually in the list.\",\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n  return (\r\n    <div>\r\n      {showPicks && (\r\n        <Grid\r\n          container\r\n          spacing={isMobile ? 60 : 3}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          direction={isMobile ? \"row\" : \"column\"}\r\n        >\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[0])}\r\n              trait={currentTraits[0]}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[1])}\r\n              trait={currentTraits[1]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showColumn && (\r\n        <ReorderGuess\r\n          column={columnData.columns.guessing}\r\n          onDone={onDone}\r\n          colors={colors}\r\n          showTryIt={showTryIt}\r\n          showLockIn={showLockIn}\r\n          history={history}\r\n          isDraggable={isDraggable}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GuessPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDBTraits } from \"../../utils/Firebase\";\r\nimport { Grid, Typography, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport SmallTraitList from \"../SmallTraitList\";\r\nimport GuessPage from \"./GuessPage\";\r\nimport TryItButton from \"./TryItButton\";\r\nimport { trackShowTraits, trackGuessTraits } from \"../../utils/mixpanel\";\r\n\r\nconst SharedPage = ({ columnData, setColumnData, history }) => {\r\n  let { id } = useParams();\r\n  const [storedTraits, setStoredTraits] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [showGuessing, setShowGuessing] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getDBTraits(id).then((result) => {\r\n        setStoredTraits(result);\r\n      });\r\n    })();\r\n  }, [id]);\r\n  const showTraits = () => {\r\n    trackShowTraits();\r\n    setShowList(true);\r\n    setShowOptions(false);\r\n  };\r\n  const showGuess = () => {\r\n    trackGuessTraits();\r\n    setShowGuessing(true);\r\n    setShowOptions(false);\r\n  };\r\n  console.log(\"storedTraits\", storedTraits);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={isMobile ? 60 : 3}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction={isMobile ? \"row\" : \"column\"}\r\n    >\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\r\n        </Grid>\r\n      )}\r\n\r\n      {showList && (\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant={isMobile ? \"h3\" : \"h5\"} color=\"black\">\r\n                Top traits\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <SmallTraitList traits={storedTraits} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5vw\" }}>\r\n              <TryItButton history={history} source=\"Guess\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showGuessing && (\r\n        <Grid item>\r\n          <GuessPage\r\n            traits={storedTraits}\r\n            columnData={columnData}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SharedPage;\r\n","// @flow\r\nimport React, { useEffect, useRef, useState, createContext } from \"react\";\r\nimport initialTraits from \"./Selection/initialTraits\";\r\nimport ResultsPage from \"./ResultsPage\";\r\nimport RankingPage from \"./RankingPage\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport { HashRouter, Route, useHistory, Redirect } from \"react-router-dom\";\r\nimport SelectionPage from \"./Selection/SelectionPage\";\r\nimport ReactGA from \"react-ga\";\r\nimport SharedPage from \"./Share/SharedPage\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport tweenFunctions from \"tween-functions\";\r\nimport { makeAndTrackId } from \"../utils/mixpanel\";\r\nimport appTheme from \"../style/appTheme\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nexport const ProgressContext = createContext();\r\nexport const TutorialContext = createContext();\r\nexport const UndoContext = createContext();\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const [columnData, setColumnData] = useState(initialTraits);\r\n  const [topTraits, setTopTraits] = useState(\r\n    initialTraits.columns.column2.traitIds.slice(0, 18)\r\n  );\r\n  const [userId, setUserId] = useState(makeAndTrackId(6));\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [tutorialStrings, setTutorialStrings] = useState([]);\r\n  const [undoFunction, setUndoFunction] = useState(null);\r\n  const sensorAPIRef = useRef<?SensorAPI>(null);\r\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\r\n  ReactGA.initialize(TRACKING_ID);\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //make sure the draggable moved\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = columnData.columns[source.droppableId];\r\n    const finish = columnData.columns[destination.droppableId];\r\n\r\n    //if moving within the same column\r\n    if (start === finish) {\r\n      const newTraitIds = Array.from(start.traitIds);\r\n      newTraitIds.splice(source.index, 1);\r\n      newTraitIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        traitIds: newTraitIds,\r\n      };\r\n\r\n      //override existing column\r\n      const newData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setColumnData(newData);\r\n      return;\r\n    }\r\n    //cross column moving\r\n    const startTraitIds = Array.from(start.traitIds);\r\n    startTraitIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      traitIds: startTraitIds,\r\n    };\r\n\r\n    const finishTraitIds = Array.from(finish.traitIds);\r\n    finishTraitIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      traitIds: finishTraitIds,\r\n    };\r\n\r\n    const newData = {\r\n      ...columnData,\r\n      columns: {\r\n        ...columnData.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n    setColumnData(newData);\r\n  };\r\n\r\n  function swipe(direction) {\r\n    const api: ?SensorAPI = sensorAPIRef.current;\r\n    if (!api) {\r\n      console.warn(\"unable to find sensor api\");\r\n      return null;\r\n    }\r\n    let endX;\r\n    if (direction === \"right\") {\r\n      endX = 100;\r\n    } else {\r\n      endX = -100;\r\n    }\r\n    const start = { x: 0, y: 0 };\r\n    const end = { x: endX, y: 0 };\r\n\r\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\r\n\r\n    if (!preDrag) {\r\n      console.warn(\"unable to start capturing\");\r\n      return null;\r\n    }\r\n\r\n    const drag = preDrag.fluidLift(start);\r\n\r\n    const points = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      points.push({\r\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\r\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\r\n      });\r\n    }\r\n    moveStepByStep(drag, points);\r\n  }\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      console.log(\"left swiped\");\r\n      swipe(\"left\");\r\n    },\r\n    onSwipedRight: () => {\r\n      console.log(\"right swiped\");\r\n      swipe(\"right\");\r\n    },\r\n  });\r\n\r\n  function moveStepByStep(drag, values) {\r\n    requestAnimationFrame(() => {\r\n      const newPosition = values.shift();\r\n      drag.move(newPosition);\r\n      if (values.length) {\r\n        moveStepByStep(drag, values);\r\n      } else {\r\n        drag.drop();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        sensors={[\r\n          (api) => {\r\n            sensorAPIRef.current = api;\r\n          },\r\n        ]}\r\n      >\r\n        <ProgressContext.Provider\r\n          value={{\r\n            progress: [progress, setProgress],\r\n            activeStep: [activeStep, setActiveStep],\r\n          }}\r\n        >\r\n          <TutorialContext.Provider\r\n            value={{ tutorialStrings: [tutorialStrings, setTutorialStrings] }}\r\n          >\r\n            <UndoContext.Provider value={{ undoFunction, setUndoFunction }}>\r\n              <ThemeProvider theme={appTheme}>\r\n                <NavBar history={history} />\r\n                <Route exact path=\"/\">\r\n                  <Redirect to=\"/Selection\" />\r\n                </Route>\r\n                <Route\r\n                  exact\r\n                  path=\"/Selection/:id?\"\r\n                  children={\r\n                    <SelectionPage\r\n                      columnData={columnData}\r\n                      setColumnData={setColumnData}\r\n                      topTraits={topTraits}\r\n                      setTopTraits={setTopTraits}\r\n                      history={history}\r\n                      swipeHandlers={swipeHandlers}\r\n                    />\r\n                  }\r\n                />\r\n                <Route path=\"/Rank\">\r\n                  <RankingPage\r\n                    topTraits={topTraits}\r\n                    setTopTraits={setTopTraits}\r\n                    history={history}\r\n                    initalProgress={progress}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/Results\">\r\n                  <ResultsPage\r\n                    topTraits={topTraits}\r\n                    setTopTraits={setTopTraits}\r\n                    userID={userId}\r\n                  />\r\n                </Route>\r\n                <Route\r\n                  path=\"/Share/:id\"\r\n                  children={\r\n                    <SharedPage\r\n                      columnData={columnData}\r\n                      setColumnData={setColumnData}\r\n                      history={history}\r\n                    />\r\n                  }\r\n                />\r\n              </ThemeProvider>\r\n            </UndoContext.Provider>\r\n          </TutorialContext.Provider>\r\n        </ProgressContext.Provider>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <HashRouter basename={\"/trait-ranker\"}>\r\n      <App />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport AppWrapper from \"./components/App\";\r\n\r\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}