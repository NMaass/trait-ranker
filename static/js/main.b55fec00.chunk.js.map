{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/RankingTrait.js","utils/FadeTextSeries.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","components/NavBar/HomeButton.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","components/Selection/SelectionPage.js","components/TraitCards/ReorderTrait.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","Artistry","Leadership","Excellence","Independence","Flexibility","Rest","Kindness","Recreation","Strength","Wisdom","Empathy","Trust","Spontaneity","Adventure","Integrity","Generosity","Patience","Perseverance","Mercy","Romance","Athleticism","Productivity","Nature","Peace","Determination","Resourcefulness","Authority","Hope","Challenge","Decisiveness","Comfort","Joy","Fairness","Affection","Confidence","Respect","Discipline","Frugality","Suffering","Optimism","Ambition","Craftsmanship","Vulnerability","Family","Boldness","Caution","Confrontation","Charisma","Ingenuity","Teachability","Pessimism","Loyality","Creativity","Realism","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","useState","showTooltip","setShowTooltip","showLink","setShowLink","Grid","container","direction","alignItems","justifyContent","spacing","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","hash","traitArray","setDoc","doc","e","getDBTraits","docRef","getDoc","docSnap","exists","data","SmallTraitList","List","splice","map","trait","ListItem","ListItemAvatar","Provider","value","size","ListItemText","ResultsPage","topTraits","userID","useEffect","trackResultsPage","reverse","RankingTrait","isMobile","useMediaQuery","rippleRef","React","useRef","className","onMouseDown","current","start","onMouseUp","stop","TouchRipple","ref","center","FadeTextSeries","stringArray","currentText","setCurrentText","checked","setChecked","fadeTime","count","setInterval","prev","Fade","in","timeout","enter","exit","Typography","RankingPage","setTopTraits","history","fetchTopTraits","slice","displayedPairs","setDisplayedPairs","initialPairs","sortedPairs","sortingPair","joinStack","mergeStack","leftGuess","rightGuess","finishedList","unevenList","pop","push","handlePick","pick","doJoinRound","doMergeRound","doInitialRound","some","any","buildMerge","shift","concat","clearStacks","list","listLen","buildJoinStack","buildMergeStack","leftMergeStack","rightMergeStack","trackRankingPage","Box","sx","paddingBottom","HelpDialogBox","setOpen","IconButton","Dialog","maxWidth","style","borderRadius","DialogContentText","paragraph","margin","HomeButton","color","NavBar","flexGrow","AppBar","position","Toolbar","marginLeft","SelectionTrait","provided","dragHandleProps","draggable","Container","styled","div","getStyle","snapshot","transform","axisLockX","split","draggingCustomStyle","isDropAnimating","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","index","draggableId","draggableProps","innerRef","isDragging","TraitList","props","isDraggingOver","hoverColor","isStarter","SelectionDroppable","column","droppableId","classname","droppableProps","indexOf","placeholder","SelectionPage","columnData","swipeHandlers","wrap","ReorderTrait","Chip","icon","label","minWidth","FreeDragTrait","isDraggable","DragColumn","ReorderableColumn","colors","TryItButton","source","trackShareConversion","ReorderGuess","onDone","showTryIt","padding","GuessPage","setColumnData","traitsLeft","wrongTraits","traitPool","finalList","setColors","setIsDraggable","currentTraits","setCurrentTraits","showPicks","setShowPicks","showColumn","setShowColumn","setShowIt","includes","loadNextTraits","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","sensorAPIRef","ReactGA","initialize","swipe","api","warn","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","onDragEnd","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","newTraitIds","newColumn","sensors","exact","path","children","AppWrapper","basename","ReactDOM","render","document","querySelector"],"mappings":"wRA+FaA,EAAa,CACxBC,SAAU,cAAC,IAAD,IACV,gBAAiB,cAAC,IAAD,IACjBC,WAAY,cAAC,IAAD,IACZC,WAAY,cAAC,IAAD,IACZ,eAAgB,cAAC,IAAD,IAChB,sBAAuB,cAAC,IAAD,IACvBC,aAAc,cAAC,IAAD,IACdC,YAAa,cAAC,IAAD,IACb,iBAAkB,cAAC,IAAD,IAClBC,KAAM,cAAC,IAAD,IACNC,SAAU,cAAC,IAAD,IACVC,WAAY,cAAC,IAAD,IACZC,SAAU,cAAC,IAAD,IACVC,OAAQ,cAAC,IAAD,IACRC,QAAS,cAAC,IAAD,IACTC,MAAO,cAAC,IAAD,IACPC,YAAa,cAAC,IAAD,IACbC,UAAW,cAAC,IAAD,IACXC,UAAW,cAAC,IAAD,IACXC,WAAY,cAAC,IAAD,IACZC,SAAU,cAAC,IAAD,IACVC,aAAc,cAAC,IAAD,IACdC,MAAO,cAAC,IAAD,IACPC,QAAS,cAAC,IAAD,IACTC,YAAa,cAAC,IAAD,IACb,yBAA0B,cAAC,IAAD,IAC1BC,aAAc,cAAC,IAAD,IACdC,OAAQ,cAAC,IAAD,IACRC,MAAO,cAAC,IAAD,IACPC,cAAe,cAAC,IAAD,IACfC,gBAAiB,cAAC,IAAD,IACjBC,UAAW,cAAC,IAAD,IACXC,KAAM,cAAC,IAAD,IACNC,UAAW,cAAC,IAAD,IACXC,aAAc,cAAC,IAAD,IACdC,QAAS,cAAC,IAAD,IACTC,IAAK,cAAC,IAAD,IACLC,SAAU,cAAC,IAAD,IACVC,UAAW,cAAC,IAAD,IACXC,WAAY,cAAC,IAAD,IACZC,QAAS,cAAC,IAAD,IACTC,WAAY,cAAC,IAAD,IACZC,UAAW,cAAC,IAAD,IACXC,UAAW,cAAC,IAAD,IACX,iBAAkB,cAAC,IAAD,IAClBC,SAAU,cAAC,IAAD,IACVC,SAAU,cAAC,IAAD,IACVC,cAAe,cAAC,IAAD,IACfC,cAAe,cAAC,IAAD,IACfC,OAAQ,cAAC,IAAD,IACRC,SAAU,cAAC,IAAD,IACVC,QAAS,cAAC,IAAD,IACTC,cAAe,cAAC,IAAD,IACfC,SAAU,cAAC,IAAD,IACVC,UAAW,cAAC,IAAD,IACXC,aAAc,cAAC,IAAD,IACdC,UAAW,cAAC,IAAD,IACXC,SAAU,cAAC,IAAD,IACV,mBAAoB,cAAC,IAAD,IACpBC,WAAY,cAAC,IAAD,IACZC,QAAS,cAAC,IAAD,KAEIC,EA/FG,CAChB,YACA,WACA,cACA,WACA,UACA,WACA,gBACA,gBACA,aACA,eACA,aACA,UACA,cACA,YACA,eACA,YACA,gBACE,WACF,WACA,WACA,QACA,eACA,iBACA,UACA,sBACA,UACA,mBACA,eACA,iBC5Fa,SAASC,EAAQC,GAK9B,IAJA,IACEC,EADEC,EAAeF,EAAMG,OAID,IAAjBD,GAAoB,CAEzBD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,IAHyB,MAMmB,CAC1CF,EAAMC,GACND,EAAME,IAFPF,EAAME,GANkB,KAMHF,EAAMC,GANH,KAY3B,OAAOD,ECbT,IA0BeO,EA1BO,CACpBC,SACAC,QAAS,CACPC,QAAS,CACPC,GAAI,UACJC,MAAO,aACPC,SAAU,IAEZC,QAAS,CACPH,GAAI,UACJC,MAAO,SACPC,SAAUd,EAAQgB,IAEpBC,QAAS,CACPL,GAAI,UACJC,MAAO,SACPC,SAAU,IAEZI,SAAU,CACRN,GAAI,WACJC,MAAO,WACPC,SAAU,KAGdK,YAAa,CAAC,UAAW,UAAW,Y,cC5BvB,SAASC,EAAOhB,GAI7B,IAHA,IAAIiB,EAAS,GACPC,EAAa,aACbC,EAAmBD,EAAWlB,OAC3BoB,EAAI,EAAGA,EAAIpB,EAAQoB,IAC1BH,GAAUC,EAAWG,OAAOpB,KAAKC,MAAMD,KAAKE,SAAWgB,IAEzD,OAAOF,E,0ECHTK,IAASC,KAAK,mCAAoC,CAAEC,OAAO,IAC3DC,IAAUF,KAAK,uBAIfE,IAAUC,eAAc,SAAUC,GAChCL,IAASM,MAAM,YAAa,CAAED,WAAYA,OCN5C,IAqDeE,EArDM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAuBA,OACE,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,QAAS,EALX,UAOE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACElC,MAAO,uBACPmC,KAAMZ,EACNa,WAAY,IACZC,QAhBW,WACjBb,GAAe,IAWX,SAME,cAACc,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QArCrB,WDoBf3B,IAASM,MAAM,UClBTsB,UAAUC,MACZD,UACGC,MAAM,CACLrB,KAAM,uCACNsB,IAAKtB,IAENuB,MAAK,kBAAMC,QAAQC,IAAI,uBACvBC,OAAM,SAACC,GAAD,OAAWH,QAAQC,IAAI,gBAAiBE,OAEjDP,UAAUQ,UACPC,UAAU7B,GACVuB,MAAK,kBAAMC,QAAQC,IAAI,cACvBC,OAAM,kBAAMF,QAAQC,IAAI,kBAC3BtB,GAAe,GACfE,GAAY,KAqBR,uBAKHD,GACC,cAACE,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACkB,EAAA,EAAD,UAAa9B,U,iBClCjB+B,EAAMC,YAZW,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOXC,EAAKC,YAAaV,GAiBjB,SAAeW,EAAtB,oC,sDAAO,WAA2BC,EAAMC,GAAjC,2FACCC,YAAOC,YAAIN,EAAI,SAAUG,GAAO,CACpCpE,OAAQqE,IACPlB,OAAM,SAACqB,GACRvB,QAAQC,IAAIsB,MAJT,OAMLvB,QAAQC,IAAIqB,YAAIN,EAAI,SAAUG,IANzB,4C,sBASA,SAAeK,EAAtB,kC,sDAAO,WAA2BL,GAA3B,4FACCM,EAASH,YAAIN,EAAI,SAAUG,GAD5B,SAEiBO,YAAOD,GAFxB,YAECE,EAFD,QAGOC,SAHP,wBAIG7E,EAAS4E,EAAQE,OAAO9E,OAC9BiD,QAAQC,IAAIlD,GALT,kBAMIA,GANJ,QAQHiD,QAAQC,IAAI,UART,6C,uECtBQ6B,EAlBQ,SAAC,GAAgB,IAAd/E,EAAa,EAAbA,OACxB,OACE,cAACgF,EAAA,EAAD,UACGhF,EAAOiF,OAAO,EAAG,GAAGC,KAAI,SAACC,GACxB,OACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,KAAM,OAArC,SACGzJ,EAAWoJ,OAGhB,cAACM,EAAA,EAAD,UAAeN,MANFA,SC6BVO,EA/BK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAShC,OARAC,qBAAU,YJcL,SAA0BF,GAC/B1E,IAASM,MAAM,eAAgB,CAAC,MAAS,GAAI,CAAC,aAAcoE,IId1DG,CAAiBH,GACjB,gCAAC,+FACC1C,QAAQC,IAAI,iBAAkByC,GAD/B,SAEOxB,EAAYyB,EAAQD,GAF3B,0CAAD,KAIC,CAACA,IAGF,eAAC5D,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAJjB,UAME,cAACJ,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,8CAEF,cAACN,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,EAAD,CAAgBrC,OAAQ2F,EAAUI,cAEpC,cAAChE,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,EAAD,CACEZ,KAAM,iDAAmDmE,U,0BCepDI,GAxCM,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,MAAOvC,EAAc,EAAdA,QACvBqD,EAAWC,YAAc,qBAEzBC,EAAYC,IAAMC,OAAO,MAQ/B,OACE,sBACEC,UAAU,gBACV1D,QAASA,EACT2D,YAXkB,SAAC/B,GACrB2B,EAAUK,QAAQC,MAAMjC,IAWtBkC,UATiB,SAAClC,GACpB2B,EAAUK,QAAQG,KAAKnC,IAIvB,UAME,eAACzC,EAAA,EAAD,CAAMC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAHhB,UAIE,cAACF,EAAA,EAAD,CAAMM,MAAI,EAAV,SACF,6BAAK8C,MAEH,cAACpD,EAAA,EAAD,CAAMM,MAAI,EAAV,SAGF,cAAC,IAAYiD,SAAb,CACEC,MAAOU,EAAW,CAAET,KAAM,OAAU,CAAEA,KAAM,QAD9C,SAGGzJ,EAAWoJ,UAId,cAACyB,GAAA,EAAD,CAAaC,IAAKV,EAAWW,QAAQ,Q,8BCL5BC,GAlCQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAarE,EAAc,EAAdA,QACrC,EAAsCjB,mBAASsF,EAAY,IAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BxF,oBAAS,GAAvC,mBAAOyF,EAAP,KAAgBC,EAAhB,KACMC,EAAW,IAmBjB,OAjBAxB,qBAAU,WACR,IAAIyB,EAAQ,EAEZC,aAAY,WACVH,GAAW,SAACI,GAAD,OAAWA,OACrBH,GAEHE,aAAY,WACND,IAAUN,EAAYrH,OAAS,GACjC2H,IACAJ,EAAeF,EAAYM,KAE3BJ,EAAe,MAEhBG,OACF,IAGD,cAACI,GAAA,EAAD,CACEC,GAAIP,EACJQ,QAAS,CACPC,MAAOP,KACPQ,KAAMR,MAJV,SAOE,cAACS,GAAA,EAAD,CAAYnF,QAASA,EAArB,SAA+BsE,OCgOtBc,GA3PK,SAAC,GAA0D,IAAxDpC,EAAuD,EAAvDA,UAAWqC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,QAC9C,GAD4E,EAArBC,eACX9B,IAAM1E,SAChDiE,EAAUwC,MAAM,EAAG,KADrB,mBAAOC,EAAP,KAAuBC,EAAvB,KAIIC,EAAejC,iBAAO,IACtBkC,EAAclC,iBAAO,IACrBmC,EAAcnC,iBAAO,IAErBoC,EAAYpC,iBAAO,IACnBqC,EAAarC,iBAAO,IAEpBsC,EAAYtC,iBAAO,GACnBuC,EAAavC,iBAAO,GAEpBwC,EAAexC,iBAAO,IACtByC,EAAazC,iBAAO,MAExBR,qBAAU,WACR,IAAI9F,EAAgB4F,EACpB0C,EAAkBtI,EAAcoI,MAAM,EAAG,IAErCpI,EAAcJ,OAAS,IAEzBmJ,EAAWtC,QAAUzG,EAAcgJ,OAErC,IAAK,IAAIhI,EAAI,EAAGA,EAAIhB,EAAcJ,OAAQoB,GAAK,EAE7CuH,EAAa9B,QAAQwC,KAAK,CAACjJ,EAAcgB,GAAIhB,EAAcgB,EAAI,OAEhE,IAEH,IAAMkI,EAAa,SAACC,GAElBjG,QAAQC,IAAI,SAAWgG,GAEU,IAA7BT,EAAUjC,QAAQ7G,OAEpBwJ,EAAYD,GAC2B,IAA9BR,EAAWlC,QAAQ7G,QAC5ByJ,EAAaF,GAGqB,IAAhCZ,EAAa9B,QAAQ7G,QAEvB0J,EAAeH,GAGSR,EAAWlC,QAAQ8C,MAAK,SAAUC,GAC1D,OAAOA,EAAI5J,WAE+C,IAAhC2I,EAAa9B,QAAQ7G,SACZ,IAA/B4I,EAAY/B,QAAQ7G,QACtBqI,EAAaa,EAAarC,SAC1ByB,EAAQe,KAAK,aAEbQ,EAAWjB,EAAY/B,QAAQ,KAInCvD,QAAQC,IAAI,iBAAkBoF,EAAa9B,SAC3CvD,QAAQC,IAAI,gBAAiBqF,EAAY/B,SACzCvD,QAAQC,IAAI,kBAAmB2F,EAAarC,SAC5CvD,QAAQC,IAAI,eAAgBuF,EAAUjC,SACtCvD,QAAQC,IAAI,aAAcwF,EAAWlC,UAGjC6C,EAAiB,SAACH,GAClBA,IAASZ,EAAa9B,QAAQ,GAAG,KACnC8B,EAAa9B,QAAQ,GAAGT,UACxB9C,QAAQC,IAAI,YAAaoF,EAAa9B,QAAQ,KAGhD+B,EAAY/B,QAAQwC,KAAKV,EAAa9B,QAAQiD,SAE9CpB,EAAkBC,EAAa9B,QAAQ,IACH,IAAhC8B,EAAa9B,QAAQ7G,SAEI,OAAvBmJ,EAAWtC,SAEbqC,EAAarC,QAAQwC,KAAKF,EAAWtC,SACrCvD,QAAQC,IAAI,+BAEZ2F,EAAarC,QAAU+B,EAAY/B,QAAQiD,QAC3CxG,QAAQC,IAAI,2BAKZiG,EAAc,SAACD,GACc,IAA7BT,EAAUjC,QAAQ7G,OAEhBuJ,IAASV,EAAYhC,QAAQ,IAC/BqC,EAAarC,QAAUqC,EAAarC,QAAQkD,OAAOlB,EAAYhC,SAC/DmD,MAEAlB,EAAUjC,QAAQiD,QAClBpB,EAAkBI,EAAUjC,QAAQ,KAGlC0C,IAASV,EAAYhC,QAAQ,IAC/BiC,EAAUjC,QAAU,GACpB6B,EAAkBK,EAAWlC,QAAQ,GAAG,MAExCqC,EAAarC,QAAUgC,EAAYhC,QAAQkD,OAAOb,EAAarC,SAC/DmD,MAKAP,EAAe,SAACF,GAGhBd,EAAe,KAAOI,EAAYhC,QAAQ,IAExC0C,IAASd,EAAe,IAE1BS,EAAarC,QAAQvB,OACnB0D,EAAUnC,QACV,EACAgC,EAAYhC,QAAQ,IAEtBkC,EAAWlC,QAAQ,GAAK,KAGxBkC,EAAWlC,QAAQ,GAAGiD,QACtBd,EAAUnC,UACVvD,QAAQC,IAAI,aAAcyF,EAAUnC,SACC,IAAjCkC,EAAWlC,QAAQ,GAAG7G,SACxBkJ,EAAarC,QAAQvB,OACnB0D,EAAUnC,QACV,EACAgC,EAAYhC,QAAQ,IAEtBkC,EAAWlC,QAAQ,GAAGiD,UAGW,IAAjCf,EAAWlC,QAAQ,GAAG7G,OACxB0I,EAAkBK,EAAWlC,QAAQ,GAAG,IAExC6B,EAAkBK,EAAWlC,QAAQ,GAAG,MAItC0C,IAASd,EAAe,IAC1BS,EAAarC,QAAQvB,OACnB2D,EAAWpC,QAAU,EACrB,EACAgC,EAAYhC,QAAQ,IAEtBkC,EAAWlC,QAAQ,GAAK,KAExBkC,EAAWlC,QAAQ,GAAGiD,QACtBb,EAAWpC,UACXvD,QAAQC,IAAI,cAAe0F,EAAWpC,SACD,IAAjCkC,EAAWlC,QAAQ,GAAG7G,SACxBkJ,EAAarC,QAAQvB,OACnB2D,EAAWpC,QAAU,EACrB,EACAgC,EAAYhC,QAAQ,IAEtBkC,EAAWlC,QAAQ,GAAGiD,UAGW,IAAjCf,EAAWlC,QAAQ,GAAG7G,OACxB0I,EAAkBK,EAAWlC,QAAQ,GAAG,IAExC6B,EAAkBK,EAAWlC,QAAQ,GAAG,MAKxCgD,EAAa,SAACI,GAClB3G,QAAQC,IAAI,oBACZ,IAAI2G,EAAUhB,EAAarC,QAAQ7G,OAC/BkK,EAAU,IACZhB,EAAarC,QAAUqC,EAAarC,QAAQ2B,MAAM0B,EAAU,IAE9DC,EAAeF,GACfG,EAAgBH,GAChBpB,EAAYhC,QAAU+B,EAAY/B,QAAQiD,QAC1Cd,EAAUnC,QAAU,EACpBoC,EAAWpC,QAAUqC,EAAarC,QAAQ7G,QAGtCmK,EAAiB,SAACF,GACtBnB,EAAUjC,QAAQwC,KAAK,CACrBY,EAAK,GACLf,EAAarC,QAAQqC,EAAarC,QAAQ7G,OAAS,KAErD8I,EAAUjC,QAAQwC,KAAK,CAACY,EAAK,GAAIf,EAAarC,QAAQ,KACtD6B,EAAkBI,EAAUjC,QAAQ,IACpCvD,QAAQC,IAAI,uBAAwBuF,EAAUjC,UAG1CuD,EAAkB,SAACH,GAIvB,IAHA,IAAII,EAAiB,GACjBC,EAAkB,GAEblJ,EAAI,EAAGA,EAAI8H,EAAarC,QAAQ7G,OAAQoB,IAC/CiJ,EAAehB,KAAK,CAACY,EAAK,GAAIf,EAAarC,QAAQzF,KAErD,IAAK,IAAIA,EAAI8H,EAAarC,QAAQ7G,OAAS,EAAGoB,GAAK,EAAGA,IACpDkJ,EAAgBjB,KAAK,CAACY,EAAK,GAAIf,EAAarC,QAAQzF,KAEtD2H,EAAWlC,QAAU,CAACwD,EAAgBC,GACtChH,QAAQC,IAAI,qBAAsBwF,EAAWlC,UAEzCmD,EAAc,WAClBlB,EAAUjC,QAAU,GACpBkC,EAAWlC,QAAU,GACrBgC,EAAYhC,QAAU,IAGlBP,EAAWC,YAAc,sBAM/B,OAJAL,qBAAU,YP1ML,SAA0BF,GAC/B1E,IAASM,MAAM,eAAgB,CAAC,MAAS,GAAI,CAAC,gBAAiBoE,IO0M7DuE,CAAiBvE,KACjB,IAGE,gCACE,cAACwE,GAAA,EAAD,CAAKC,GAAInE,GAAY,CAAEoE,cAAe,QAAtC,SACA,cAAC,GAAD,CACErD,YAAa,GACbrE,QAASsD,EAAW,KAAO,SAE/B,eAAClE,EAAA,EAAD,CACIC,WAAS,EACTI,QAAS6D,EAAW,GAAK,EACzB/D,WAAW,SACXC,eAAe,SACfF,UAAWgE,EAAW,MAAQ,SALlC,UAOI,cAAClE,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CACEO,QAAS,kBAAMqG,EAAWb,EAAe,KACzCjD,MAAOiD,EAAe,OAG1B,cAACrG,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CACEO,QAAS,kBAAMqG,EAAWb,EAAe,KACzCjD,MAAOiD,EAAe,c,uEC1MrBkC,GAtCO,WACpB,MAAwBlE,IAAM1E,UAAS,GAAvC,mBAAOa,EAAP,KAAagI,EAAb,KASA,OACE,gCACE,cAACC,GAAA,EAAD,CAAYhF,KAAK,QAAQ5C,QANV,WACjB2H,GAAQ,IAKN,SACE,cAAC,KAAD,MAGF,cAACE,GAAA,EAAD,CACEhI,QAdc,WAClB8H,GAAQ,IAcJhI,KAAMA,EACNmI,SAAU,KACVC,MAAO,CAAEC,aAAc,GAJzB,SAME,eAACC,GAAA,EAAD,CAAmBC,WAAW,EAAOH,MAAO,CAAEI,OAAQ,QAAtD,UACE,uBADF,2EAIE,uBACA,uBALF,yCAOE,uBACA,uBARF,mDAUE,gCC5BKC,GAVI,SAAC,GAAiB,IAAf/C,EAAc,EAAdA,QAIpB,OACE,cAACvF,EAAA,EAAD,CAAQuI,MAAM,UAAUrI,QAJP,WACjBqF,EAAQe,KAAK,MAGb,2BCYWkC,GAdA,SAAC,GAAiB,IAAfjD,EAAc,EAAdA,QAChB,OACE,cAACkC,GAAA,EAAD,CAAKC,GAAI,CAAEe,SAAU,GAArB,SACE,cAACC,GAAA,EAAD,CAAQC,SAAS,QAAjB,SACE,eAACC,GAAA,EAAD,WACE,cAAC,GAAD,CAAYrD,QAASA,IACrB,qBAAK0C,MAAO,CAAEY,WAAY,QAA1B,SACE,cAAC,GAAD,c,6CCqBGC,GA5BQ,SAAC,GAAyB,IAAvBrG,EAAsB,EAAtBA,MAAOsG,EAAe,EAAfA,SACzBxF,EAAWC,YAAc,qBAE/B,OACE,6CACEI,UAAU,kBACNmF,EAASC,iBAFf,IAGEC,WAAW,EACXxL,GAAIgF,EAJN,SAME,eAACpD,EAAA,EAAD,CAAMC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAHhB,UAIE,cAACF,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,6BAAK8C,MAET,cAACpD,EAAA,EAAD,CAAMM,MAAI,EAAV,SACA,cAAC,IAAYiD,SAAb,CACEC,MAAOU,EAAW,CAAET,KAAM,OAAU,CAAEA,KAAM,QAD9C,SAGGzJ,EAAWoJ,cCrBdyG,GAAYC,KAAOC,IAAV,2BAaf,SAASC,GAASpB,EAAOqB,GAEvB,GADArB,EAZ0B,SAACA,GAC3B,UAAIA,QAAJ,IAAIA,KAAOsB,UAAW,CACpB,IAAMC,EAAS,UAAMvB,EAAMsB,UAAUE,MAAM,KAAK1C,QAAjC,UACf,OAAO,2BACFkB,GADL,IAEEsB,UAAWC,IAGf,OAAOvB,EAICyB,CAAoBzB,IACvBqB,EAASK,gBACZ,OAAO1B,EAET,MAA6BqB,EAASM,cAA9BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SACVC,EAAeT,EAASS,aAC9BxJ,QAAQC,IAAIuJ,GACZ,IAAIC,EAAS,EACQ,YAAjBD,EACFC,GAAU,IACgB,YAAjBD,IACTC,EAAS,KAGX,IAAMC,EAAS,oBAAgBD,EAAhB,eAA6BH,EAAOK,EAApC,OAGf,OAAO,2BACFjC,GADL,IAEEsB,UAAWU,EAEXE,WAAW,QAAD,OAAUL,EAAW,GAArB,OAId,I,MAgBeM,GAhBQ,SAAC,GAAsB,IAApB3H,EAAmB,EAAnBA,MAAO4H,EAAY,EAAZA,MAC/B,OACE,cAAC,KAAD,CAAWC,YAAa7H,EAAmB4H,MAAOA,EAAlD,SACG,SAACtB,EAAUO,GAAX,OACC,cAAC,GAAD,2BACMP,EAASwB,gBADf,IAEEpG,IAAK4E,EAASyB,SACdC,WAAYnB,EAASmB,WACrBxC,MAAOoB,GAASN,EAASwB,eAAetC,MAAOqB,GAJjD,SAME,cAAC,GAAD,CAAgB7G,MAAOA,EAAOsG,SAAUA,SARVtG,ICpClCiI,IAJYvB,KAAOC,IAAV,iDAIGD,KAAOC,IAAV,kLAEO,SAACuB,GAAD,OAClBA,EAAMC,eAAiBD,EAAME,WAAa,WAE/B,SAACF,GAAD,OAAYA,EAAMG,UAAY,MAAQ,YAEtC,SAACH,GAAD,OAAWA,EAAMG,WAAa,UA0C9BC,GAvCY,SAAC,GAIrB,IAHLC,EAGI,EAHJA,OAGI,IAFJF,iBAEI,aADJD,kBACI,MADS,YACT,EACJ,OACE,cAAC,KAAD,CAA2BI,YAAaD,EAAOvN,GAAI8B,UAAU,aAA7D,SACG,SAACwJ,EAAUO,GAAX,OACC,cAACoB,GAAD,yBACEQ,UAAU,cACV/G,IAAK4E,EAASyB,SACdM,UAAWA,EACXD,WAAYA,EACZD,eAAgBtB,EAASsB,gBACrB7B,EAASoC,gBANf,aAQE,cAAC9L,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAJjB,SAME,eAACJ,EAAA,EAAD,CAAMM,MAAI,EAAC0I,OAAO,OAAlB,UACGyC,GACC,cAAC,GAAD,CAEErI,MAAK,OAAEuI,QAAF,IAAEA,OAAF,EAAEA,EAAQrN,SAAS,GACxB0M,MAAK,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAQrN,SAASyN,QAAjB,OAAyBJ,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAQrN,SAAS,KAHnD,OACOqN,QADP,IACOA,OADP,EACOA,EAAQrN,SAAS,IAKzBoL,EAASsC,sBAxBJL,EAAOvN,KCd3B,I,MA8Be6N,GA9BO,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,WAAYjG,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,QAASiG,EAAmB,EAAnBA,cAavD,OAXArI,qBAAU,WACN5C,QAAQC,IAAI,kBAAmB+K,EAAWhO,QAAQK,QAAQD,UAC1D4C,QAAQC,IAAI,eAAgB+K,EAAWhO,QAAQO,QAAQH,UACJ,IAA/C4N,EAAWhO,QAAQK,QAAQD,SAASV,SACpCsD,QAAQC,IAAI+K,EAAWhO,QAAQO,QAAQH,UACvC2H,EAAaiG,EAAWhO,QAAQO,QAAQH,UACxC4H,EAAQe,KAAK,YAGlB,CAACiF,EAAYhG,EAASD,IAGrB,cAACmC,GAAA,EAAD,UACI,+CAAS+D,GAAT,aACI,eAACnM,EAAA,EAAD,CAAMC,WAAS,EACTI,QAAS,EACT+L,KAAK,SAFX,UAGI,cAAC,GAAD,CAAwDT,OAAQO,EAAWhO,QAAQC,QAC/DqN,WAAY,aADPU,EAAWhO,QAAQC,QAAQC,IAEpD,cAAC,GAAD,CAAwDuN,OAAQO,EAAWhO,QAAQK,QAC/DkN,WAAW,GADNS,EAAWhO,QAAQK,QAAQH,IAEpD,cAAC,GAAD,CAAwDuN,OAAQO,EAAWhO,QAAQO,QAC/D+M,WAAY,cADPU,EAAWhO,QAAQO,QAAQL,a,oBChBzDiO,GAfM,SAAC,GAAiC,IAA/BjJ,EAA8B,EAA9BA,MAAOsG,EAAuB,EAAvBA,SAAUR,EAAa,EAAbA,MACjChF,EAAWC,YAAc,qBAE/B,OACE,cAACmI,GAAA,EAAD,yBACEC,KAAMvS,EAAWoJ,GACjBoJ,MAAOpJ,GACHsG,EAASC,iBAHf,IAIEC,WAAW,EACXxL,GAAIgF,EACJ8F,MAAOA,EACPb,GAAInE,EAAW,CAAEuI,SAAU,SAAY,CAAEA,SAAU,YCC1CC,GAZO,SAAC,GAA0C,IAAxCtJ,EAAuC,EAAvCA,MAAO4H,EAAgC,EAAhCA,MAAO9B,EAAyB,EAAzBA,MAC/BW,GADwD,EAAlB8C,YAC1B7C,KAAOC,IAAV,8BACf,OACE,cAAC,KAAD,CAAWkB,YAAa7H,EAAO4H,MAAOA,EAAtC,SACG,SAACtB,GAAD,OACC,cAACG,EAAD,2BAAeH,EAASwB,gBAAxB,IAAwCpG,IAAK4E,EAASyB,SAAtD,SACE,cAAC,GAAD,CAAc/H,MAAOA,EAAOsG,SAAUA,EAAUR,MAAOA,WCL3D0D,GAAa9C,KAAOC,IAAV,6BAqCD8C,GAnCW,SAAC,GAAqC,IAAnClB,EAAkC,EAAlCA,OAAQmB,EAA0B,EAA1BA,OAA0B,EAAlBH,YAC3C,OACE,8BACE,cAAC,KAAD,CAA2Bf,YAAaD,EAAOvN,GAA/C,SACG,SAACsL,EAAUO,GAAX,OACC,eAAC2C,GAAD,yBACE9H,IAAK4E,EAASyB,UACVzB,EAASoC,gBAFf,IAGEP,eAAgBtB,EAASsB,eAH3B,UAKE,cAACvL,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAJjB,SAMGuL,EAAOrN,SAAS6E,KAAI,SAACC,EAAO4H,GAC3B,OACE,cAAChL,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CACE8C,MAAOA,EACP4H,MAAOW,EAAOrN,SAASyN,QAAQ3I,GAC/B8F,MAAO4D,EAAO9B,MAJF5H,QAUrBsG,EAASsC,kBAzBAL,EAAOvN,OCMd2O,GAbK,SAAC,GAAsB,IAArB7G,EAAoB,EAApBA,QAAS8G,EAAW,EAAXA,OAK3B,OACI,cAACrM,EAAA,EAAD,CAAQE,QALE,YlBiCX,SAA8BmM,GACnC9N,IAASM,MAAM,mBAAoB,CAAC,OAAUwN,IkBjCxCC,CAAqBD,GACrB9G,EAAQe,KAAK,MAILrG,QAAQ,YADhB,sBCsBOsM,GA3BM,SAAC,GAAiE,IAA/DvB,EAA8D,EAA9DA,OAAQwB,EAAsD,EAAtDA,OAAQL,EAA8C,EAA9CA,OAAQM,EAAsC,EAAtCA,UAAWlH,EAA2B,EAA3BA,QAA2B,EAAlByG,YAClE,OACE,eAAC3M,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SAJjB,UAME,cAACJ,EAAA,EAAD,CAAMM,MAAI,EAAC+H,GAAI,CAAEgF,QAAS,SAE1B,cAACrN,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CAAmBqL,OAAQA,EAAQmB,OAAQA,MAE7C,cAAC9M,EAAA,EAAD,CAAMM,MAAI,EAAC+H,GAAI,CAAEgF,QAAS,OAA1B,SACE,cAAC1M,EAAA,EAAD,CACEE,QAASsM,EACTvM,QAAQ,YAFV,uBAOD,cAACZ,EAAA,EAAD,CAAMM,MAAI,EAAV,SACI8M,GAAa,cAAC,GAAD,CAAalH,QAASA,UC+F/BoH,GAjHG,SAAC,GAAoD,IAAlDrP,EAAiD,EAAjDA,OAAQiO,EAAyC,EAAzCA,WAAYqB,EAA6B,EAA7BA,cAAerH,EAAc,EAAdA,QAClDsH,EAAalJ,iBAAO9G,EAAQS,EAAOmI,MAAM,EAAG,KAC5CqH,EAAcnJ,iBAAO,IACrBoJ,EAAY1P,EAAcE,QAAQK,QAAQD,SAC1CqP,EAAYrJ,iBAAO,IACvB,EAA4B3E,mBAAS,IAArC,mBAAOmN,EAAP,KAAec,EAAf,KACA,EAAsCjO,oBAAS,GAA/C,mBAAOgN,EAAP,KAAoBkB,EAApB,KAEA,EAA0ClO,mBAAS,IAAnD,mBAAOmO,EAAP,KAAsBC,EAAtB,KACA,EAAkCpO,oBAAS,GAA3C,mBAAOqO,EAAP,KAAkBC,EAAlB,KACA,EAAoCtO,oBAAS,GAA7C,mBAAOuO,EAAP,KAAmBC,EAAnB,KACA,EAA+BxO,oBAAS,GAAxC,mBAAOyN,EAAP,KAAkBgB,EAAlB,KAEAtK,qBAAU,WACR,KAAO2J,EAAYhJ,QAAQ7G,OAAS,GAE7B4P,EAAW/I,QAAQ4J,SAASX,EAAU,KACzCD,EAAYhJ,QAAQwC,KAAKyG,EAAU,IAErCA,EAAYA,EAAUxK,OAAO,EAAGwK,EAAU9P,QAE5C0Q,MACC,CAACZ,IAEJ,IAAMxG,EAAa,SAACC,GAElB,GADAwG,EAAUlJ,QAAQwC,KAAKE,GACW,IAA9BqG,EAAW/I,QAAQ7G,OAAc,CACnC,IAAM2Q,EAAS,2BACVrC,EAAWhO,QAAQQ,UADT,IAEbJ,SAAUqP,EAAUlJ,UAEhB+J,EAAa,2BACdtC,GADc,IAEjBhO,QAAQ,2BACHgO,EAAWhO,SADT,IAELQ,SAAU6P,MAGdhB,EAAciB,GpBZSC,EoBaVvC,EAAWhO,QAAQQ,SpBZpCQ,IAASM,MAAM,UAAW,CAAC,iBAAmBiP,IoBa1CN,GAAc,GACdF,GAAa,GpBfZ,IAAsBQ,EoBiBzBH,KAEIA,EAAiB,WACrBP,EACEvQ,EAAQ,CAACgQ,EAAW/I,QAAQuC,MAAOyG,EAAYhJ,QAAQuC,SAEzD9F,QAAQC,IAAI,eAAgBqM,EAAW/I,SACvCvD,QAAQC,IAAI,eAAgBsM,EAAYhJ,SACxCvD,QAAQC,IAAIwM,EAAUlJ,UAwBlBP,EAAWC,YAAc,sBAC/B,OACE,gCACG6J,GACC,eAAChO,EAAA,EAAD,CACEC,WAAS,EACTI,QAAS6D,EAAW,GAAK,EACzB/D,WAAW,SACXC,eAAe,SACfF,UAAWgE,EAAW,MAAQ,SALhC,UAOE,cAAClE,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CACEO,QAAS,kBAAMqG,EAAW4G,EAAc,KACxC1K,MAAO0K,EAAc,OAGzB,cAAC9N,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CACEO,QAAS,kBAAMqG,EAAW4G,EAAc,KACxC1K,MAAO0K,EAAc,UAK5BI,GACC,cAAC,GAAD,CACEvC,OAAQO,EAAWhO,QAAQQ,SAC3ByO,OAlDO,WACbjM,QAAQC,IAAI,SAIZ,IAHA,IAAIuN,EAAc,GACZC,EAAgB1Q,EAAOmI,MAAM,EAAG,GAChCwI,EAAQ1C,EAAWhO,QAAQQ,SAASJ,SACjCU,EAAI,EAAGA,EAAI2P,EAAc/Q,OAAQoB,IACpC2P,EAAc3P,KAAO4P,EAAM5P,IAC7B0P,EAAYzH,KAAK,WACjB/F,QAAQC,IAAI,UAAWwN,EAAc3P,GAAI4P,EAAM5P,KACtC2P,EAAcN,SAASO,EAAM5P,KACtC0P,EAAYzH,KAAK,WACjB/F,QAAQC,IAAI,WAAYwN,EAAc3P,GAAI4P,EAAM5P,MAEhD0P,EAAYzH,KAAK,WACjB/F,QAAQC,IAAI,YAAawN,EAAc3P,GAAI4P,EAAM5P,KAGrD4O,EAAUc,GACVN,GAAU,GACVP,GAAe,IAgCTf,OAAQA,EACRM,UAAWA,EACXlH,QAASA,EACTyG,YAAaA,QClCRkC,GAxEI,SAAC,GAA4C,IAA1C3C,EAAyC,EAAzCA,WAAYqB,EAA6B,EAA7BA,cAAerH,EAAc,EAAdA,QACzC9H,EAAO0Q,eAAP1Q,GACN,EAAwCuB,mBAAS,IAAjD,mBAAOoP,EAAP,KAAqBC,EAArB,KACA,EAAgCrP,oBAAS,GAAzC,mBAAOsP,EAAP,KAAiBC,EAAjB,KACA,EAAwCvP,oBAAS,GAAjD,mBAAOwP,EAAP,KAAqBC,EAArB,KACA,EAAsCzP,oBAAS,GAA/C,mBAAO0P,EAAP,KAAoBC,EAApB,KACMpL,EAAWC,YAAc,sBAC/BL,qBAAU,WACR,gCAAC,wGACOpB,EAAYtE,GAAI6C,MAAK,SAACpC,GAC1BmQ,EAAgBnQ,MAFnB,0CAAD,KAKC,CAACT,IAYJ,OADA8C,QAAQC,IAAI,eAAgB4N,GAE1B,eAAC/O,EAAA,EAAD,CACEC,WAAS,EACTI,QAAS6D,EAAW,GAAK,EACzB/D,WAAW,SACXC,eAAe,SACfF,UAAWgE,EAAW,MAAQ,SALhC,UAOGmL,GACC,cAACrP,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CAAcO,QArBH,WrBMnB3B,IAASM,MAAM,eqBJb0P,GAAY,GACZI,GAAe,IAkB0BlM,MAAM,sBAG5CiM,GACC,cAACrP,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CAAcO,QArBJ,WrBIlB3B,IAASM,MAAM,gBqBFb4P,GAAgB,GAChBE,GAAe,IAkByBlM,MAAM,uBAG3C6L,GACC,cAACjP,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EACTE,WAAW,SACXC,eAAe,SACfF,UAAU,SAHhB,UAKE,cAACF,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,EAAD,CAAgBrC,OAAQ8Q,MAE1B,cAAC/O,EAAA,EAAD,UACE,cAAC,GAAD,CAAakG,QAASA,EAAS8G,OAAO,iBAK7CmC,GACC,cAACnP,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAAC,GAAD,CACErC,OAAQ8Q,EACR7C,WAAYA,EACZqB,cAAeA,EACfrH,QAASA,U,6BC3DfqJ,GAAM,WACV,IAAMrJ,EAAUsJ,eAChB,EAAoC7P,mBAAS3B,GAA7C,mBAAOkO,EAAP,KAAmBqB,EAAnB,KACA,EAAkC5N,mBAAS,IAA3C,mBAAOiE,EAAP,KAAkBqC,EAAlB,KACA,EAA4BtG,mBtBPvB,SAAwB8P,GAC7B,IAAIC,EAAK9Q,EAAO6Q,GAGhB,OAFAvQ,IAASM,MAAM,gBAAgB,CAAC,MAAS,IACzCN,IAASyQ,OAAOC,UAAU,WAAY,GAC/BF,EsBG8BG,CAAe,IAApD,mBAAOC,EAAP,KACMC,GADN,KACqBzL,iBAAmB,OAExC0L,KAAQC,WADY,gBAiEpB,SAASC,EAAMhQ,GACb,IAAMiQ,EAAkBJ,EAAatL,QACrC,IAAK0L,EAEH,OADAjP,QAAQkP,KAAK,6BACN,KAQT,IAAM1L,EAAQ,CAAE2L,EAAG,EAAGxF,EAAG,GACnByF,EAAM,CAAED,EANI,UAAdnQ,EACK,KAEC,IAGa2K,EAAG,GAEpB0F,EAAUJ,EAAIK,WAAWtE,EAAWhO,QAAQK,QAAQD,SAAS,IAEnE,IAAKiS,EAEH,OADArP,QAAQC,IAAI,6BACL,KAOT,IAJA,IAAMsP,EAAOF,EAAQG,UAAUhM,GAEzBiM,EAAS,GAEN3R,EAAI,EAAGA,EAAI,GAAIA,IACtB2R,EAAO1J,KAAK,CACVoJ,EAAGO,KAAeC,YAAY7R,EAAG0F,EAAM2L,EAAGC,EAAID,EAAG,IACjDxF,EAAG+F,KAAeC,YAAY7R,EAAG0F,EAAMmG,EAAGyF,EAAIzF,EAAG,MAGrDiG,EAAeL,EAAME,GAGvB,IAAMxE,EAAgB4E,aAAa,CACjCC,aAAc,WACZ9P,QAAQC,IAAI,eACZ+O,EAAM,SAERe,cAAe,WACb/P,QAAQC,IAAI,gBACZ+O,EAAM,YAIV,SAASY,EAAeL,EAAMS,GAC5BC,uBAAsB,WACpB,IAAMC,EAAcF,EAAOxJ,QAC3B+I,EAAKY,KAAKD,GACNF,EAAOtT,OACTkT,EAAeL,EAAMS,GAErBT,EAAKa,UAWX,OANAxN,qBAAU,WACRyN,OAAOC,iBAAiB,aAAa,SAAC/O,GACpCA,EAAEgP,sBAEH,IAGD,8BACE,eAAC,KAAD,CACEC,UAjIY,SAAC,GAA0C,IAAD,EAAvCC,EAAuC,EAAvCA,YAAa3E,EAA0B,EAA1BA,OAAQ/B,EAAkB,EAAlBA,YACxC,GAAK0G,IAKHA,EAAY/F,cAAgBoB,EAAOpB,aACnC+F,EAAY3G,QAAUgC,EAAOhC,OAF/B,CAMA,IAAMtG,EAAQwH,EAAWhO,QAAQ8O,EAAOpB,aAClCgG,EAAS1F,EAAWhO,QAAQyT,EAAY/F,aAG9C,GAAIlH,IAAUkN,EAAd,CAsBA,IAAMC,EAAgBC,MAAMC,KAAKrN,EAAMpG,UACvCuT,EAAc3O,OAAO8J,EAAOhC,MAAO,GACnC,IAAMgH,EAAQ,2BACTtN,GADS,IAEZpG,SAAUuT,IAGNI,EAAiBH,MAAMC,KAAKH,EAAOtT,UACzC2T,EAAe/O,OAAOyO,EAAY3G,MAAO,EAAGC,GAC5C,IAAMiH,EAAS,2BACVN,GADU,IAEbtT,SAAU2T,IAGNE,EAAO,2BACRjG,GADQ,IAEXhO,QAAQ,2BACHgO,EAAWhO,SADT,uBAEJ8T,EAAS5T,GAAK4T,GAFV,cAGJE,EAAU9T,GAAK8T,GAHX,MAMT3E,EAAc4E,OA5Cd,CACE,IAAMC,EAAcN,MAAMC,KAAKrN,EAAMpG,UACrC8T,EAAYlP,OAAO8J,EAAOhC,MAAO,GACjCoH,EAAYlP,OAAOyO,EAAY3G,MAAO,EAAGC,GAEzC,IAAMoH,EAAS,2BACV3N,GADU,IAEbpG,SAAU8T,IAIND,EAAO,2BACRjG,GADQ,IAEXhO,QAAQ,2BACHgO,EAAWhO,SADT,kBAEJmU,EAAUjU,GAAKiU,MAGpB9E,EAAc4E,MAiGZG,QAAS,CACP,SAACnC,GACCJ,EAAatL,QAAU0L,IAJ7B,UAQE,cAAC,GAAD,CAAQjK,QAASA,IACjB,cAAC,KAAD,CAAOqM,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CACEtG,WAAYA,EACZtI,UAAWA,EACXqC,aAAcA,EACdsH,cAAeA,EACfrH,QAASA,EACTiG,cAAeA,MAGnB,cAAC,KAAD,CAAOqG,KAAK,QAAZ,SACE,cAAC,GAAD,CACE5O,UAAWA,EACXqC,aAAcA,EACdC,QAASA,MAGb,cAAC,KAAD,CAAOsM,KAAK,WAAZ,SACE,cAAC,EAAD,CACE5O,UAAWA,EACXqC,aAAcA,EACdpC,OAAQiM,MAGZ,cAAC,KAAD,CACE0C,KAAK,aACLC,SACE,cAAC,GAAD,CAAYvG,WAAYA,EAAYqB,cAAeA,EAAerH,QAASA,YAgBxEwM,GARI,WACjB,OACE,cAAC,KAAD,CAAYC,SAAU,gBAAtB,SACE,cAAC,GAAD,OCnMNC,IAASC,OAAO,cAAC,GAAD,IAAgBC,SAASC,cAAc,W","file":"static/js/main.b55fec00.chunk.js","sourcesContent":["import {\n  BiAlarmOff,\n  BiHappyBeaming,\n  BsFillShieldLockFill,\n  BsFillStopwatchFill,\n  BsFillTreeFill,\n  BsFillUnlockFill,\n  BsMusicNoteBeamed,\n  BsPeace,\n  FaChild,\n  FaFistRaised,\n  FaHandshake,\n  FaPiggyBank,\n  FaRegKissWinkHeart,\n  FaTools,\n  FiTarget,\n  GiBreakingChain,\n  GiChoice,\n  GiClothes,\n  GiCrossedSwords,\n  GiFlyingFlag,\n  GiGearHammer,\n  GiGlowingHands,\n  GiHeartInside,\n  GiHeartKey,\n  GiMedallist,\n  GiMountainClimbing,\n  GiMountainRoad,\n  GiNightSleep,\n  GiPalette,\n  GiPillow,\n  GiSplitArrows,\n  GrLineChart,\n  HiOutlineScale,\n  HiPuzzle,\n  MdAccessTime,\n  MdConnectWithoutContact,\n  MdFamilyRestroom,\n  MdFitnessCenter,\n  MdLeaderboard,\n  MdMenuBook,\n  MdOutlineThumbsUpDown,\n  MdOutlineVerifiedUser,\n  MdPsychology,\n  MdSocialDistance,\n  MdSportsSoccer,\n  MdVolunteerActivism,\n  RiEmotionSadLine,\n  RiGovernmentLine,\n  RiUserHeartFill,\n  SiHandshake,\n  GiLion,\n  RiErrorWarningFill,\n  FaGrinStars,\n  GiTeacher,\n  FaThumbsDown,\n  GiSittingDog,\n  FaUserGraduate,\n  GiMeditation,\n  FaShapes,\n  BiGlasses,\n} from \"react-icons/all\";\n\nconst allTraits = [\n  'Adventure',\n  'Ambition',\n  'Athleticism',\n  'Boldness',\n  'Caution',\n  'Charisma',\n  'Confrontation',\n  'Craftsmanship',\n  'Creativity',\n  'Decisiveness',\n  'Discipline',\n  'Empathy',\n  'Flexibility',\n  'Frugality',\n  'Independence',\n  'Ingenuity',\n  'Musical Skill',\n    'Loyality',\n  'Optimism',\n  'Patience',\n  'Peace',\n  'Perseverance',\n  'Personal Space',\n  'Realism',\n  'Physical Appearance',\n  'Romance',\n  'Self-Improvement',\n  'Teachability',\n  'Vulnerability',\n];\n\nexport const traitIcons = {\n  Artistry: <GiPalette />,\n  \"Musical Skill\": <BsMusicNoteBeamed />,\n  Leadership: <GiFlyingFlag />,\n  Excellence: <MdLeaderboard />,\n  \"Self Control\": <MdPsychology />,\n  \"Physical Appearance\": <GiClothes />,\n  Independence: <GiBreakingChain />,\n  Flexibility: <GiSplitArrows />,\n  \"Personal Space\": <MdSocialDistance />,\n  Rest: <GiNightSleep />,\n  Kindness: <RiUserHeartFill />,\n  Recreation: <MdSportsSoccer />,\n  Strength: <MdFitnessCenter />,\n  Wisdom: <MdMenuBook />,\n  Empathy: <MdConnectWithoutContact />,\n  Trust: <SiHandshake />,\n  Spontaneity: <BiAlarmOff />,\n  Adventure: <GiMountainRoad />,\n  Integrity: <MdOutlineVerifiedUser />,\n  Generosity: <MdVolunteerActivism />,\n  Patience: <MdAccessTime />,\n  Perseverance: <GiMountainClimbing />,\n  Mercy: <GiGlowingHands />,\n  Romance: <GiHeartInside />,\n  Athleticism: <GiMedallist />,\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\n  Productivity: <GiGearHammer />,\n  Nature: <BsFillTreeFill />,\n  Peace: <BsPeace />,\n  Determination: <FaFistRaised />,\n  Resourcefulness: <HiPuzzle />,\n  Authority: <RiGovernmentLine />,\n  Hope: <GiHeartKey />,\n  Challenge: <GiCrossedSwords />,\n  Decisiveness: <GiChoice />,\n  Comfort: <GiPillow />,\n  Joy: <BiHappyBeaming />,\n  Fairness: <HiOutlineScale />,\n  Affection: <FaRegKissWinkHeart />,\n  Confidence: <BsFillShieldLockFill />,\n  Respect: <FaHandshake />,\n  Discipline: <BsFillStopwatchFill />,\n  Frugality: <FaPiggyBank />,\n  Suffering: <RiEmotionSadLine />,\n  \"Child-likeness\": <FaChild />,\n  Optimism: <GrLineChart />,\n  Ambition: <FiTarget />,\n  Craftsmanship: <FaTools />,\n  Vulnerability: <BsFillUnlockFill />,\n  Family: <MdFamilyRestroom />,\n  Boldness: <GiLion/>,\n  Caution: <RiErrorWarningFill/>,\n  Confrontation: <GiCrossedSwords/>,\n  Charisma: <FaGrinStars/>,\n  Ingenuity: <HiPuzzle/>,\n  Teachability: <FaUserGraduate/>,\n  Pessimism: <FaThumbsDown/>,\n  Loyality: <GiSittingDog/>,\n  'Self-Improvement': <GiMeditation/>,\n  Creativity: <FaShapes/>,\n  Realism: <BiGlasses/>,\n};\nexport default allTraits;\n","export default function shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n","import traits from \"../../utils/listOfAllTraits\";\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\nimport shuffle from \"../../utils/ShuffleUtil\";\n\nconst initialTraits = {\n  traits,\n  columns: {\n    column1: {\n      id: \"column1\",\n      title: \"Not Valued\",\n      traitIds: [],\n    },\n    column2: {\n      id: \"column2\",\n      title: \"Traits\",\n      traitIds: shuffle(listOfAllTraits),\n    },\n    column3: {\n      id: \"column3\",\n      title: \"Valued\",\n      traitIds: [],\n    },\n    guessing: {\n      id: \"guessing\",\n      title: \"guessing\",\n      traitIds: [],\n    },\n  },\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\n};\nexport default initialTraits;\n","export default function makeId(length) {\n  let result = \"\";\n  const characters = \"0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","import mixpanel from \"mixpanel-browser\";\nimport LogRocket from \"logrocket\";\nimport makeId from \"./makeIdUtil\";\n\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\nLogRocket.init(\"zwugvl/trait-ranker\");\n\n\n\nLogRocket.getSessionURL(function (sessionURL) {\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\n});\n\nexport function makeAndTrackId(len) {\n  let Id = makeId(len);\n  mixpanel.track(\"Session Start\",{'steps': 1});\n  mixpanel.people.increment('sessions', 1);\n  return Id;\n}\n\nexport function trackRankingPage(topTraits) {\n  mixpanel.track('Ranking Step', {'steps': 2}, {'chosen traits': topTraits});\n}\nexport function trackResultsPage(topTraits){\n  mixpanel.track('Results Step', {'steps': 3}, {'top traits': topTraits});\n}\nexport function trackShare(){\n  mixpanel.track('Shared');\n}\nexport function trackShowTraits(){\n  mixpanel.track('Show Traits');\n}\nexport function trackGuessTraits(){\n  mixpanel.track('Guess Traits');\n}\nexport function trackGuessed(guesses){\n  mixpanel.track('Guessed', {'Guessed traits':  guesses});\n}\nexport function trackShareConversion(source){\n  mixpanel.track('Share Conversion', {'Source': source});\n}\n","import React, { useState } from \"react\";\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport {trackShare} from \"../utils/mixpanel\"\n\nconst CopyableLink = ({ text }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [showLink, setShowLink] = useState(false);\n  const onCopy = () => {\n    trackShare();\n    if (navigator.share) {\n      navigator\n        .share({\n          text: \"Take a look at my most valued traits\",\n          url: text,\n        })\n        .then(() => console.log(\"successful share\"))\n        .catch((error) => console.log(\"error sharing\", error));\n    } else {\n      navigator.clipboard\n        .writeText(text)\n        .then(() => console.log(\"Copied!\"))\n        .catch(() => console.log(\"Copy failed\"));\n      setShowTooltip(true);\n      setShowLink(true);\n    }\n  };\n  const onTipClose = () => {\n    setShowTooltip(false);\n  };\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={2}\n    >\n      <Grid item>\n        <Tooltip\n          title={\"Copied to clipboard!\"}\n          open={showTooltip}\n          leaveDelay={1000}\n          onClose={onTipClose}\n        >\n          <Button variant=\"contained\" onClick={onCopy}>\n            Share\n          </Button>\n        </Tooltip>\n      </Grid>\n      {showLink && (\n        <Grid item>\n          <InputLabel>{text}</InputLabel>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\nexport default CopyableLink;\n","import { initializeApp } from \"firebase/app\";\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\n\nimport makeId from \"./makeIdUtil\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\n  authDomain: \"trait-ranker.firebaseapp.com\",\n  projectId: \"trait-ranker\",\n  storageBucket: \"trait-ranker.appspot.com\",\n  messagingSenderId: \"387696334301\",\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\n  measurementId: \"G-K0FPHGRC6R\",\n};\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore(app);\n\nexport async function getHash(len) {\n  let timeout = false;\n  while (timeout === false) {\n    const hash = makeId(len);\n    const docRef = doc(db, hash);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      console.log(\"repeat hash\");\n    } else {\n      console.log(\"hash \" + hash);\n      return hash;\n    }\n  }\n}\n\nexport async function setDBTraits(hash, traitArray) {\n  await setDoc(doc(db, \"Traits\", hash), {\n    traits: traitArray,\n  }).catch((e) => {\n    console.log(e);\n  });\n  console.log(doc(db, \"Traits\", hash));\n}\n\nexport async function getDBTraits(hash) {\n  const docRef = doc(db, \"Traits\", hash);\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n    const traits = docSnap.data().traits;\n    console.log(traits);\n    return traits;\n  } else {\n    console.log(\"no doc\");\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport { IconContext } from \"react-icons\";\nimport { traitIcons } from \"../utils/listOfAllTraits\";\n\nconst SmallTraitList = ({ traits }) => {\n  return (\n    <List>\n      {traits.splice(0, 7).map((trait) => {\n        return (\n          <ListItem key={trait}>\n            <ListItemAvatar>\n              <IconContext.Provider value={{ size: \"5vh\" }}>\n                {traitIcons[trait]}\n              </IconContext.Provider>\n            </ListItemAvatar>\n            <ListItemText>{trait}</ListItemText>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\nexport default SmallTraitList;\n","import React, { useEffect, useRef } from \"react\";\nimport makeId from \"../utils/makeIdUtil\";\nimport CopyableLink from \"./CopyableLink\";\nimport { setDBTraits } from \"../utils/Firebase\";\nimport SmallTraitList from \"./SmallTraitList\";\nimport { Grid } from \"@mui/material\";\nimport {trackResultsPage} from \"../utils/mixpanel\"\n\nconst ResultsPage = ({ topTraits, userID }) => {\n  useEffect(() => {\n    trackResultsPage(topTraits);\n    (async () => {\n      console.log(\"setting traits\", topTraits);\n      await setDBTraits(userID, topTraits);\n    })();\n  }, [topTraits]);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Grid item>\n        <h3>Top Traits</h3>\n      </Grid>\n      <Grid item>\n        <SmallTraitList traits={topTraits.reverse()} />\n      </Grid>\n      <Grid item>\n        <CopyableLink\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ResultsPage;\n","import React from \"react\";\nimport \"../../style/CardStyle.scss\";\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\nimport { IconContext } from \"react-icons\";\nimport { useMediaQuery, Grid } from \"@mui/material\";\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\n\nconst RankingTrait = ({ trait, onClick }) => {\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\n\n  const rippleRef = React.useRef(null);\n  const onRippleStart = (e) => {\n    rippleRef.current.start(e);\n  };\n  const onRippleStop = (e) => {\n    rippleRef.current.stop(e);\n  };\n\n  return (\n    <div\n      className=\"card rankCard\"\n      onClick={onClick}\n      onMouseDown={onRippleStart}\n      onMouseUp={onRippleStop}\n    >\n      <Grid container\n            alignItems='center'\n            justifyContent='center'\n            direction=\"column\">\n        <Grid item>\n      <h1>{trait}</h1>\n        </Grid>\n        <Grid item>\n\n\n      <IconContext.Provider\n        value={isMobile ? { size: \"6vw\" } : { size: \"20vw\" }}\n      >\n        {traitIcons[trait]}\n      </IconContext.Provider>\n        </Grid>\n      </Grid>\n      <TouchRipple ref={rippleRef} center={false} />\n    </div>\n  );\n};\n\nexport default RankingTrait;\n","import React, { useEffect, useState } from \"react\";\nimport { Fade, Typography } from \"@mui/material\";\n\nconst FadeTextSeries = ({ stringArray, variant }) => {\n  const [currentText, setCurrentText] = useState(stringArray[0]);\n  const [checked, setChecked] = useState(true);\n  const fadeTime = 3000;\n\n  useEffect(() => {\n    let count = 0;\n\n    setInterval(() => {\n      setChecked((prev) => !prev);\n    }, fadeTime);\n\n    setInterval(() => {\n      if (count !== stringArray.length - 1) {\n        count++;\n        setCurrentText(stringArray[count]);\n      } else {\n        setCurrentText(\"\");\n      }\n    }, fadeTime * 2);\n  }, []);\n\n  return (\n    <Fade\n      in={checked}\n      timeout={{\n        enter: fadeTime * 1.9,\n        exit: fadeTime * 1.9,\n      }}\n    >\n      <Typography variant={variant}>{currentText}</Typography>\n    </Fade>\n  );\n};\nexport default FadeTextSeries;\n","import React, { useEffect, useRef } from \"react\";\nimport RankingTrait from \"./TraitCards/RankingTrait\";\nimport { Grid, useMediaQuery, Box } from \"@mui/material\";\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\nimport {trackRankingPage} from \"../utils/mixpanel\"\n\nconst RankingPage = ({ topTraits, setTopTraits, history, fetchTopTraits }) => {\n  const [displayedPairs, setDisplayedPairs] = React.useState(\n    topTraits.slice(0, 2)\n  );\n\n  let initialPairs = useRef([]);\n  let sortedPairs = useRef([]);\n  let sortingPair = useRef([]);\n\n  let joinStack = useRef([]);\n  let mergeStack = useRef([]);\n\n  let leftGuess = useRef(0);\n  let rightGuess = useRef(0);\n\n  let finishedList = useRef([]);\n  let unevenList = useRef(null);\n\n  useEffect(() => {\n    let initialTraits = topTraits;\n    setDisplayedPairs(initialTraits.slice(0, 2));\n\n    if (initialTraits.length % 2) {\n      //initialize finished list with first element if uneven\n      unevenList.current = initialTraits.pop();\n    }\n    for (let i = 0; i < initialTraits.length; i += 2) {\n      //generate pairs for the user to sort\n      initialPairs.current.push([initialTraits[i], initialTraits[i + 1]]);\n    }\n  }, []);\n\n  const handlePick = (pick) => {\n    //looks at which arrays are empty to determine what stage the sort is in\n    console.log(\"pick: \" + pick);\n\n    if (joinStack.current.length !== 0) {\n      //checking for 'easy' joins\n      doJoinRound(pick);\n    } else if (mergeStack.current.length !== 0) {\n      doMergeRound(pick);\n    }\n\n    if (initialPairs.current.length !== 0) {\n      //sorting pairs\n      doInitialRound(pick);\n    }\n\n    let mergeStackHasValues = mergeStack.current.some(function (any) {\n      return any.length;\n    }); //check if all arrays are empty\n    if (!mergeStackHasValues && initialPairs.current.length === 0) {\n      if (sortedPairs.current.length === 0) {\n        setTopTraits(finishedList.current);\n        history.push(\"/Results\");\n      } else {\n        buildMerge(sortedPairs.current[0]);\n      }\n    }\n\n    console.log(\"initialPairs: \", initialPairs.current);\n    console.log(\"sortedPairs: \", sortedPairs.current);\n    console.log(\"finished list: \", finishedList.current);\n    console.log(\"Join stack: \", joinStack.current);\n    console.log(\"mergeStack\", mergeStack.current);\n  };\n\n  const doInitialRound = (pick) => {\n    if (pick === initialPairs.current[0][0]) {\n      initialPairs.current[0].reverse();\n      console.log(\"reversed \", initialPairs.current[0]);\n    }\n\n    sortedPairs.current.push(initialPairs.current.shift());\n\n    setDisplayedPairs(initialPairs.current[0]);\n    if (initialPairs.current.length === 1) {\n      //set up the merges one render ahead\n      if (unevenList.current !== null) {\n        //populate finished list with uneven element\n        finishedList.current.push(unevenList.current);\n        console.log(\"Prepping for round uneven\");\n      } else {\n        finishedList.current = sortedPairs.current.shift(); //populate list with first sorted pair\n        console.log(\"Prepping for round 2\");\n      }\n    }\n  };\n\n  const doJoinRound = (pick) => {\n    if (joinStack.current.length === 2) {\n      //check if left or right join\n      if (pick === sortingPair.current[0]) {\n        finishedList.current = finishedList.current.concat(sortingPair.current); //a 'successful' join\n        clearStacks();\n      } else {\n        joinStack.current.shift();\n        setDisplayedPairs(joinStack.current[0]);\n      }\n    } else {\n      if (pick === sortingPair.current[1]) {\n        joinStack.current = [];\n        setDisplayedPairs(mergeStack.current[0][0]);\n      } else {\n        finishedList.current = sortingPair.current.concat(finishedList.current);\n        clearStacks();\n      }\n    }\n  };\n\n  const doMergeRound = (pick) => {\n    //tries to shift back and forth between items to reduce fatigue\n\n    if (displayedPairs[0] === sortingPair.current[0]) {\n      //lower\n      if (pick !== displayedPairs[0]) {\n        //found what is liked more\n        finishedList.current.splice(\n          leftGuess.current,\n          0,\n          sortingPair.current[0]\n        );\n        mergeStack.current[0] = [];\n      } else {\n        //keeps going\n        mergeStack.current[0].shift();\n        leftGuess.current++;\n        console.log(\"leftGuess \", leftGuess.current);\n        if (mergeStack.current[0].length === 0) {\n          finishedList.current.splice(\n            leftGuess.current,\n            0,\n            sortingPair.current[0]\n          );\n          mergeStack.current[0].shift();\n        }\n      }\n      if (mergeStack.current[1].length !== 0) {\n        setDisplayedPairs(mergeStack.current[1][0]);\n      } else {\n        setDisplayedPairs(mergeStack.current[0][0]);\n      }\n    } else {\n      // higher\n      if (pick === displayedPairs[0]) {\n        finishedList.current.splice(\n          rightGuess.current + 1,\n          0,\n          sortingPair.current[1]\n        );\n        mergeStack.current[1] = [];\n      } else {\n        mergeStack.current[1].shift();\n        rightGuess.current--;\n        console.log(\"rightGuess \", rightGuess.current);\n        if (mergeStack.current[1].length === 0) {\n          finishedList.current.splice(\n            rightGuess.current + 1,\n            0,\n            sortingPair.current[1]\n          );\n          mergeStack.current[1].shift();\n        }\n      }\n      if (mergeStack.current[0].length !== 0) {\n        setDisplayedPairs(mergeStack.current[0][0]);\n      } else {\n        setDisplayedPairs(mergeStack.current[1][0]);\n      }\n    }\n  };\n\n  const buildMerge = (list) => {\n    console.log(\"building round 2\");\n    let listLen = finishedList.current.length;\n    if (listLen > 6) {\n      finishedList.current = finishedList.current.slice(listLen - 7);\n    }\n    buildJoinStack(list);\n    buildMergeStack(list);\n    sortingPair.current = sortedPairs.current.shift();\n    leftGuess.current = 0;\n    rightGuess.current = finishedList.current.length;\n  };\n\n  const buildJoinStack = (list) => {\n    joinStack.current.push([\n      list[0],\n      finishedList.current[finishedList.current.length - 1],\n    ]);\n    joinStack.current.push([list[1], finishedList.current[0]]);\n    setDisplayedPairs(joinStack.current[0]);\n    console.log(\"Initial Join stack: \", joinStack.current);\n  };\n\n  const buildMergeStack = (list) => {\n    let leftMergeStack = [];\n    let rightMergeStack = [];\n\n    for (let i = 0; i < finishedList.current.length; i++) {\n      leftMergeStack.push([list[0], finishedList.current[i]]);\n    }\n    for (let i = finishedList.current.length - 1; i >= 0; i--) {\n      rightMergeStack.push([list[1], finishedList.current[i]]);\n    }\n    mergeStack.current = [leftMergeStack, rightMergeStack];\n    console.log(\"initial mergeStack\", mergeStack.current);\n  };\n  const clearStacks = () => {\n    joinStack.current = [];\n    mergeStack.current = [];\n    sortingPair.current = [];\n  };\n\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\n\n  useEffect(()=>{\n    trackRankingPage(topTraits)\n  },[])\n\n  return (\n      <div>\n        <Box sx={isMobile && { paddingBottom: \"10vh\" }}>\n        <FadeTextSeries\n          stringArray={[]}\n          variant={isMobile ? \"h3\" : \"h5\"}/>\n      </Box>\n      <Grid\n          container\n          spacing={isMobile ? 60 : 1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction={isMobile ? \"row\" : \"column\"}\n        >\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(displayedPairs[0])}\n              trait={displayedPairs[0]}\n            />\n          </Grid>\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(displayedPairs[1])}\n              trait={displayedPairs[1]}\n            />\n          </Grid>\n        </Grid>\n      </div>\n  );\n};\n\nexport default RankingPage;\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n} from \"@mui/material\";\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\n\nconst HelpDialogBox = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <IconButton size=\"large\" onClick={handleOpen}>\n        <HelpOutlineIcon />\n      </IconButton>\n\n      <Dialog\n        onClose={handleClose}\n        open={open}\n        maxWidth={\"xl\"}\n        style={{ borderRadius: 0 }}\n      >\n        <DialogContentText paragraph={false} style={{ margin: \"24px\" }}>\n          <br />\n          1. Drag traits to the left or right depending on whether you value\n          them.\n          <br />\n          <br />\n          2. Click on the traits you value more.\n          <br />\n          <br />\n          3. Click the share buttons to show your friends!\n          <br />\n        </DialogContentText>\n      </Dialog>\n    </div>\n  );\n};\nexport default HelpDialogBox;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst HomeButton = ({ history }) => {\n  const handleHome = () => {\n    history.push(\"/\");\n  };\n  return (\n    <Button color=\"inherit\" onClick={handleHome}>\n      Trait Ranker\n    </Button>\n  );\n};\nexport default HomeButton;\n\n\n","import React from \"react\";\nimport { AppBar, Box, Toolbar } from \"@mui/material\";\n\nimport HelpDialogBox from \"./HelpDialogBox\";\nimport HomeButton from \"./HomeButton\";\n\nconst NavBar = ({ history }) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <HomeButton history={history} />\n          <div style={{ marginLeft: \"auto\" }}>\n            <HelpDialogBox />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\nexport default NavBar;\n","import React from \"react\";\nimport \"../../style/CardStyle.scss\";\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\nimport { IconContext } from \"react-icons\";\nimport { useMediaQuery, Grid } from \"@mui/material\";\n\nconst SelectionTrait = ({ trait, provided }) => {\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\n\n  return (\n    <div\n      className=\"card selection\"\n      {...provided.dragHandleProps}\n      draggable={true}\n      id={trait}\n    >\n      <Grid container\n            alignItems='center'\n            justifyContent='center'\n            direction=\"column\">\n        <Grid item>\n          <h1>{trait}</h1>\n        </Grid>\n      <Grid item>\n      <IconContext.Provider\n        value={isMobile ? { size: \"6vw\" } : { size: \"60vw\" }}\n      >\n        {traitIcons[trait]}\n      </IconContext.Provider>\n      </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default SelectionTrait;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport SelectionTrait from \"./SelectionTrait\";\n\nconst Container = styled.div``;\n\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\n  if (style?.transform) {\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\n    return {\n      ...style,\n      transform: axisLockX,\n    };\n  }\n  return style;\n};\n\nfunction getStyle(style, snapshot) {\n  style = draggingCustomStyle(style);\n  if (!snapshot.isDropAnimating) {\n    return style;\n  }\n  const { moveTo, duration } = snapshot.dropAnimation;\n  const draggingOver = snapshot.draggingOver;\n  console.log(draggingOver);\n  let offset = 0;\n  if (draggingOver === \"column1\") {\n    offset = -100;\n  } else if (draggingOver === \"column3\") {\n    offset = 100;\n  }\n  // move to the right spot\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\n\n  // patching the existing style\n  return {\n    ...style,\n    transform: translate,\n    // slowing down the drop\n    transition: `all  ${duration + 0.2}s`,\n  };\n}\n\nconst TraitDraggable = ({ trait, index }) => {\n  return (\n    <Draggable draggableId={trait} key={trait} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n          style={getStyle(provided.draggableProps.style, snapshot)}\n        >\n          <SelectionTrait trait={trait} provided={provided} />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\nexport default TraitDraggable\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\nimport \"../../style/CardStyle.scss\";\nimport { Grid } from \"@mui/material\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst TraitList = styled.div`\n  transition: background-color 0.2s ease;\n  background-color: ${(props) =>\n    props.isDraggingOver ? props.hoverColor : \"white\"};\n  display: flex;\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\n  min-height: 100vh;\n  max-width: ${(props) => props.isStarter && \"1px\"};\n`;\n\nconst SelectionDroppable = ({\n  column,\n  isStarter = false,\n  hoverColor = \"lightBlue\",\n}) => {\n  return (\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\n      {(provided, snapshot) => (\n        <TraitList\n          classname=\"cards stack\"\n          ref={provided.innerRef}\n          isStarter={isStarter}\n          hoverColor={hoverColor}\n          isDraggingOver={snapshot.isDraggingOver}\n          {...provided.droppableProps}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Grid item margin=\"auto\">\n              {isStarter && (\n                <TraitDraggable\n                  key={column?.traitIds[0]}\n                  trait={column?.traitIds[0]}\n                  index={column?.traitIds.indexOf(column?.traitIds[0])}\n                />\n              )}\n              {provided.placeholder}\n            </Grid>\n          </Grid>\n        </TraitList>\n      )}\n    </Droppable>\n  );\n};\n\nexport default SelectionDroppable\n","// @flow\nimport React, {useEffect, useRef, useState} from \"react\";\nimport SelectionDroppable from \"./SelectionDroppable\";\nimport {Box, Grid} from \"@mui/material\";\nimport {useSwipeable} from \"react-swipeable\";\nimport type {PreDragActions, SensorAPI, SnapDragActions} from \"react-beautiful-dnd/src/types\";\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\n\n\nfunction noop() {\n}\n\n\nconst SelectionPage = ({columnData, setTopTraits, history, swipeHandlers}) => {\n\n    useEffect(() => {\n        console.log(\"currentTraits: \", columnData.columns.column2.traitIds)\n        console.log(\"top traits: \", columnData.columns.column3.traitIds)\n        if (columnData.columns.column2.traitIds.length === 0) {\n            console.log(columnData.columns.column3.traitIds)\n            setTopTraits(columnData.columns.column3.traitIds);\n            history.push(\"/Rank\");\n        }\n\n    }, [columnData, history, setTopTraits])\n\n    return (\n        <Box>\n            <div {...swipeHandlers} >\n                <Grid container\n                      spacing={0}\n                      wrap=\"nowrap\">\n                    <SelectionDroppable key={columnData.columns.column1.id} column={columnData.columns.column1}\n                                        hoverColor={'LightPink'}/>\n                    <SelectionDroppable key={columnData.columns.column2.id} column={columnData.columns.column2}\n                                        isStarter={true}/>\n                    <SelectionDroppable key={columnData.columns.column3.id} column={columnData.columns.column3}\n                                        hoverColor={'LightGreen'}/>\n                </Grid>\n            </div>\n        </Box>\n    )\n};\nexport default SelectionPage;\n","import React from \"react\";\nimport \"../../style/CardStyle.scss\";\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\nimport { Chip, useMediaQuery } from \"@mui/material\";\n\nconst ReorderTrait = ({ trait, provided, color, }) => {\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\n\n  return (\n    <Chip\n      icon={traitIcons[trait]}\n      label={trait}\n      {...provided.dragHandleProps}\n      draggable={true}\n      id={trait}\n      color={color}\n      sx={isMobile ? { minWidth: \"300px\" } : { minWidth: \"80vw\" }}\n    />\n  );\n};\nexport default ReorderTrait;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport ReorderTrait from \"./ReorderTrait\";\nimport styled from \"styled-components\";\n\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\n  const Container = styled.div``;\n  return (\n    <Draggable draggableId={trait} index={index}>\n      {(provided) => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <ReorderTrait trait={trait} provided={provided} color={color} />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\nexport default FreeDragTrait;\n","import React, { useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Grid } from \"@mui/material\";\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\nimport styled from \"styled-components\";\n\nconst DragColumn = styled.div``;\n\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\n  return (\n    <div>\n      <Droppable key={column.id} droppableId={column.id}>\n        {(provided, snapshot) => (\n          <DragColumn\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              {column.traitIds.map((trait, index) => {\n                return (\n                  <Grid item key={trait}>\n                    <FreeDragTrait\n                      trait={trait}\n                      index={column.traitIds.indexOf(trait)}\n                      color={colors[index]}\n                    />\n                  </Grid>\n                );\n              })}\n            </Grid>\n            {provided.placeholder}\n          </DragColumn>\n        )}\n      </Droppable>\n    </div>\n  );\n};\nexport default ReorderableColumn\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.push('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\nimport ReorderableColumn from \"./ReorderableColumn\";\nimport { Button, Grid } from \"@mui/material\";\nimport TryItButton from \"./TryItButton\";\n\nconst ReorderGuess = ({ column, onDone, colors, showTryIt, history, isDraggable }) => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Grid item sx={{ padding: \"5vh\" }}>\n      </Grid>\n      <Grid item>\n        <ReorderableColumn column={column} colors={colors}  />\n      </Grid>\n      <Grid item sx={{ padding: \"5vh\" }}>\n        <Button\n          onClick={onDone}\n          variant=\"contained\"\n        >\n          Lock in\n        </Button>\n      </Grid>\n       <Grid item>\n         { showTryIt && <TryItButton history={history}/>}\n       </Grid>\n    </Grid>\n  );\n};\nexport default ReorderGuess\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, useMediaQuery } from \"@mui/material\";\nimport RankingTrait from \"../TraitCards/RankingTrait\";\nimport initialTraits from \"../Selection/initialTraits\";\nimport shuffle from \"../../utils/ShuffleUtil\";\nimport ReorderableColumn from \"./ReorderableColumn\";\nimport ReorderGuess from \"./ReorderGuess\";\nimport {trackGuessed} from \"../../utils/mixpanel\"\n\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\n  let wrongTraits = useRef([]);\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\n  let finalList = useRef([]);\n  const [colors, setColors] = useState([]);\n  const [isDraggable, setIsDraggable] = useState(true);\n\n  const [currentTraits, setCurrentTraits] = useState([]);\n  const [showPicks, setShowPicks] = useState(true);\n  const [showColumn, setShowColumn] = useState(false);\n  const [showTryIt, setShowIt] = useState(false)\n\n  useEffect(() => {\n    while (wrongTraits.current.length < 7) {\n      //get eligible red herrings\n      if (!traitsLeft.current.includes(traitPool[0])) {\n        wrongTraits.current.push(traitPool[0]);\n      }\n      traitPool = traitPool.splice(1, traitPool.length);\n    }\n    loadNextTraits();\n  }, [traitPool]);\n\n  const handlePick = (pick) => {\n    finalList.current.push(pick);\n    if (traitsLeft.current.length === 0) {\n      const newTraits = {\n        ...columnData.columns.guessing,\n        traitIds: finalList.current,\n      };\n      const newColumnData = {\n        ...columnData,\n        columns: {\n          ...columnData.columns,\n          guessing: newTraits,\n        },\n      };\n      setColumnData(newColumnData);\n      trackGuessed(columnData.columns.guessing);\n      setShowColumn(true);\n      setShowPicks(false);\n    }\n    loadNextTraits();\n  };\n  const loadNextTraits = () => {\n    setCurrentTraits(\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\n    );\n    console.log(\"TraitsLeft: \", traitsLeft.current);\n    console.log(\"WrongTaits: \", wrongTraits.current);\n    console.log(finalList.current);\n  };\n  const onDone = () => {\n    console.log(\"done!\");\n    let guessColors = [];\n    const correctTraits = traits.slice(0, 7);\n    const guess = columnData.columns.guessing.traitIds;\n    for (let i = 0; i < correctTraits.length; i++) {\n      if (correctTraits[i] === guess[i]) {\n        guessColors.push(\"success\");\n        console.log(\"correct\", correctTraits[i], guess[i]);\n      } else if (correctTraits.includes(guess[i])) {\n        guessColors.push(\"warning\");\n        console.log(\"in there\", correctTraits[i], guess[i]);\n      } else {\n        guessColors.push(\"default\");\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\n      }\n    }\n    setColors(guessColors);\n    setShowIt(true);\n    setIsDraggable(false);\n  };\n\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\n  return (\n    <div>\n      {showPicks && (\n        <Grid\n          container\n          spacing={isMobile ? 60 : 1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction={isMobile ? \"row\" : \"column\"}\n        >\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(currentTraits[0])}\n              trait={currentTraits[0]}\n            />\n          </Grid>\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(currentTraits[1])}\n              trait={currentTraits[1]}\n            />\n          </Grid>\n        </Grid>\n      )}\n      {showColumn && (\n        <ReorderGuess\n          column={columnData.columns.guessing}\n          onDone={onDone}\n          colors={colors}\n          showTryIt={showTryIt}\n          history={history}\n          isDraggable={isDraggable}\n        />\n      )}\n    </div>\n  );\n};\nexport default GuessPage\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getDBTraits } from \"../../utils/Firebase\";\nimport { Grid, useMediaQuery } from \"@mui/material\";\nimport RankingTrait from \"../TraitCards/RankingTrait\";\nimport SmallTraitList from \"../SmallTraitList\";\nimport GuessPage from \"./GuessPage\";\nimport TryItButton from \"./TryItButton\";\nimport {trackShowTraits, trackGuessTraits} from \"../../utils/mixpanel\"\n\nconst SharedPage = ({ columnData, setColumnData, history }) => {\n  let { id } = useParams();\n  const [storedTraits, setStoredTraits] = useState([]);\n  const [showList, setShowList] = useState(false);\n  const [showGuessing, setShowGuessing] = useState(false);\n  const [showOptions, setShowOptions] = useState(true);\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\n  useEffect(() => {\n    (async () => {\n      await getDBTraits(id).then((result) => {\n        setStoredTraits(result);\n      });\n    })();\n  }, [id]);\n  const showTraits = () => {\n    trackShowTraits();\n    setShowList(true);\n    setShowOptions(false);\n  };\n  const showGuess = () => {\n    trackGuessTraits();\n    setShowGuessing(true);\n    setShowOptions(false);\n  };\n  console.log(\"storedTraits\", storedTraits);\n  return (\n    <Grid\n      container\n      spacing={isMobile ? 60 : 1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      direction={isMobile ? \"row\" : \"column\"}\n    >\n      {showOptions && (\n        <Grid item>\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\n        </Grid>\n      )}\n      {showOptions && (\n        <Grid item>\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\n        </Grid>\n      )}\n      {showList && (\n        <Grid item>\n          <Grid container\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                direction='column'\n          >\n            <Grid item>\n              <SmallTraitList traits={storedTraits} />\n            </Grid>\n            <Grid>\n              <TryItButton history={history} source=\"Guess\"/>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n      {showGuessing && (\n        <Grid item>\n          <GuessPage\n            traits={storedTraits}\n            columnData={columnData}\n            setColumnData={setColumnData}\n            history={history}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n};\nexport default SharedPage\n","// @flow\nimport React, { useEffect, useRef, useState } from \"react\";\nimport initialTraits from \"./Selection/initialTraits\";\nimport ResultsPage from \"./ResultsPage\";\nimport RankingPage from \"./RankingPage\";\nimport NavBar from \"./NavBar/NavBar\";\nimport { HashRouter, Route, useHistory } from \"react-router-dom\";\nimport SelectionPage from \"./Selection/SelectionPage\";\nimport ReactGA from \"react-ga\";\nimport SharedPage from \"./Share/SharedPage\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\nimport { useSwipeable } from \"react-swipeable\";\nimport tweenFunctions from \"tween-functions\";\nimport { makeAndTrackId } from \"../utils/mixpanel\";\n\nconst App = () => {\n  const history = useHistory();\n  const [columnData, setColumnData] = useState(initialTraits);\n  const [topTraits, setTopTraits] = useState([]);\n  const [userId, setUserId] = useState(makeAndTrackId(8));\n  const sensorAPIRef = useRef<?SensorAPI>(null);\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\n  ReactGA.initialize(TRACKING_ID);\n\n  const onDragEnd = ({ destination, source, draggableId }) => {\n    if (!destination) {\n      return;\n    }\n    //make sure the draggable moved\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const start = columnData.columns[source.droppableId];\n    const finish = columnData.columns[destination.droppableId];\n\n    //if moving within the same column\n    if (start === finish) {\n      const newTraitIds = Array.from(start.traitIds);\n      newTraitIds.splice(source.index, 1);\n      newTraitIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        traitIds: newTraitIds,\n      };\n\n      //override existing column\n      const newData = {\n        ...columnData,\n        columns: {\n          ...columnData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n      setColumnData(newData);\n      return;\n    }\n    //cross column moving\n    const startTraitIds = Array.from(start.traitIds);\n    startTraitIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      traitIds: startTraitIds,\n    };\n\n    const finishTraitIds = Array.from(finish.traitIds);\n    finishTraitIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      traitIds: finishTraitIds,\n    };\n\n    const newData = {\n      ...columnData,\n      columns: {\n        ...columnData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    setColumnData(newData);\n  };\n\n  function swipe(direction) {\n    const api: ?SensorAPI = sensorAPIRef.current;\n    if (!api) {\n      console.warn(\"unable to find sensor api\");\n      return null;\n    }\n    let endX;\n    if (direction === \"right\") {\n      endX = 100;\n    } else {\n      endX = -100;\n    }\n    const start = { x: 0, y: 0 };\n    const end = { x: endX, y: 0 };\n\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\n\n    if (!preDrag) {\n      console.log(\"unable to start capturing\");\n      return null;\n    }\n\n    const drag = preDrag.fluidLift(start);\n\n    const points = [];\n\n    for (let i = 0; i < 20; i++) {\n      points.push({\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\n      });\n    }\n    moveStepByStep(drag, points);\n  }\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => {\n      console.log(\"left swiped\");\n      swipe(\"left\");\n    },\n    onSwipedRight: () => {\n      console.log(\"right swiped\");\n      swipe(\"right\");\n    },\n  });\n\n  function moveStepByStep(drag, values) {\n    requestAnimationFrame(() => {\n      const newPosition = values.shift();\n      drag.move(newPosition);\n      if (values.length) {\n        moveStepByStep(drag, values);\n      } else {\n        drag.drop();\n      }\n    });\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"touchmove\", (e) => {\n      e.preventDefault();\n    });\n  }, []);\n\n  return (\n    <div>\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        sensors={[\n          (api) => {\n            sensorAPIRef.current = api;\n          },\n        ]}\n      >\n        <NavBar history={history} />\n        <Route exact path=\"/\">\n          <SelectionPage\n            columnData={columnData}\n            topTraits={topTraits}\n            setTopTraits={setTopTraits}\n            setColumnData={setColumnData}\n            history={history}\n            swipeHandlers={swipeHandlers}\n          />\n        </Route>\n        <Route path=\"/Rank\">\n          <RankingPage\n            topTraits={topTraits}\n            setTopTraits={setTopTraits}\n            history={history}\n          />\n        </Route>\n        <Route path=\"/Results\">\n          <ResultsPage\n            topTraits={topTraits}\n            setTopTraits={setTopTraits}\n            userID={userId}\n          />\n        </Route>\n        <Route\n          path=\"/Share/:id\"\n          children={\n            <SharedPage columnData={columnData} setColumnData={setColumnData} history={history} />\n          }\n        />\n      </DragDropContext>\n    </div>\n  );\n};\n\nconst AppWrapper = () => {\n  return (\n    <HashRouter basename={\"/trait-ranker\"}>\n      <App />\n    </HashRouter>\n  );\n};\n\nexport default AppWrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppWrapper from \"./components/App\";\n\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}