{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/FlipCard.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/RankingTrait.js","utils/FadeTextSeries.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","components/NavBar/HomeButton.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","components/Selection/SelectionPage.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","_jsx","BsQuestionCircle","AiOutlineOrderedList","Artistry","GiPalette","BsMusicNoteBeamed","Leadership","GiFlyingFlag","Excellence","MdLeaderboard","MdPsychology","GiClothes","Independence","GiBreakingChain","Flexibility","GiSplitArrows","MdSocialDistance","Rest","GiNightSleep","Kindness","RiUserHeartFill","Recreation","MdSportsSoccer","Strength","MdFitnessCenter","Wisdom","MdMenuBook","Empathy","MdConnectWithoutContact","Trust","SiHandshake","Spontaneity","BiAlarmOff","Adventure","GiMountainRoad","Integrity","MdOutlineVerifiedUser","Generosity","MdVolunteerActivism","Patience","MdAccessTime","Perseverance","GiMountainClimbing","Mercy","GiGlowingHands","Romance","GiHeartInside","Athleticism","GiMedallist","MdOutlineThumbsUpDown","Productivity","GiGearHammer","Nature","BsFillTreeFill","Peace","BsPeace","Determination","FaFistRaised","Resourcefulness","HiPuzzle","Authority","RiGovernmentLine","Hope","GiHeartKey","Challenge","GiCrossedSwords","Decisiveness","GiChoice","Comfort","GiPillow","Joy","BiHappyBeaming","Fairness","HiOutlineScale","Affection","FaRegKissWinkHeart","Confidence","BsFillShieldLockFill","Respect","FaHandshake","Discipline","BsFillStopwatchFill","Frugality","FaPiggyBank","Suffering","RiEmotionSadLine","FaChild","Optimism","GrLineChart","Ambition","FiTarget","Craftsmanship","FaTools","Vulnerability","BsFillUnlockFill","Family","MdFamilyRestroom","Boldness","GiLion","Caution","RiErrorWarningFill","Confrontation","Charisma","FaGrinStars","Ingenuity","Teachability","FaUserGraduate","Pessimism","FaThumbsDown","Loyality","GiSittingDog","GiMeditation","Creativity","GiPencilBrush","Realism","BiGlasses","Enthusiasm","GiFireworkRocket","MdBathtub","Spirituality","Detachment","GiButterfly","Vision","GiBinoculars","Simplicity","FaShapes","FaDoorOpen","Contentment","FaRegSmileBeam","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","_ref","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","_useState","useState","_useState2","_slicedToArray","showTooltip","setShowTooltip","_useState3","_useState4","showLink","setShowLink","_jsxs","Grid","container","direction","alignItems","justifyContent","spacing","children","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","_x2","_x3","_setDBTraits","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","hash","traitArray","wrap","_context2","prev","next","setDoc","doc","e","stop","getDBTraits","_x4","_getDBTraits","_callee3","docRef","docSnap","_context3","getDoc","sent","exists","data","abrupt","FlipCard","trait","index","value","setValue","flip","setFlip","useEffect","setTimeout","Card","className","concat","style","margin","CardContent","marginTop","IconContext","Provider","size","SmallTraitList","slice","map","ResultsPage","topTraits","userID","steps","trackResultsPage","_callee","_context","height","reverse","sx","padding","RankingTrait","isMobile","useMediaQuery","rippleRef","React","useRef","onMouseDown","current","start","onMouseUp","TouchRipple","ref","center","FadeTextSeries","stringArray","currentText","setCurrentText","checked","setChecked","fadeTime","count","setInterval","Fade","in","timeout","enter","exit","Typography","minHeight","position","width","align","RankingPage","setTopTraits","history","_React$useState","finalList","_React$useState2","displayedPairs","setDisplayedPairs","initialPairs","sortedPairs","sortingPair","joinStack","mergeStack","leftGuess","rightGuess","finishedList","unevenList","pop","push","handlePick","pick","listLen","doJoinRound","doMergeRound","doInitialRound","some","any","buildMerge","shift","clearStacks","splice","list","buildJoinStack","buildMergeStack","leftMergeStack","rightMergeStack","trackRankingPage","HelpDialogBox","setOpen","IconButton","HelpOutlineIcon","Dialog","maxWidth","borderRadius","DialogContentText","paragraph","HomeButton","color","NavBar","Box","flexGrow","AppBar","Toolbar","marginLeft","SelectionTrait","provided","_objectSpread","dragHandleProps","draggable","Container","styled","div","_templateObject","_taggedTemplateLiteral","getStyle","snapshot","transform","axisLockX","split","draggingCustomStyle","isDropAnimating","_snapshot$dropAnimati","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","Draggable","draggableId","draggableProps","innerRef","isDragging","TraitList","_templateObject2","props","isDraggingOver","hoverColor","isStarter","SelectionDroppable","column","_ref$isStarter","_ref$hoverColor","Droppable","droppableId","classname","droppableProps","indexOf","placeholder","SelectionPage","columnData","swipeHandlers","selectionIntro","FreeDragTrait","isDraggable","isBouncing","setIsBouncing","currentColor","setCurrentColor","firstUpdate","isDragDisabled","backgroundColor","DragColumn","ReorderableColumn","colors","marginBottom","TryItButton","source","Source","trackShareConversion","replace","ReorderGuess","onDone","showTryIt","showLockIn","paddingTop","GuessPage","setColumnData","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","_useState5","_useState6","currentTraits","setCurrentTraits","_useState7","_useState8","showPicks","setShowPicks","_useState9","_useState10","showColumn","setShowColumn","_useState11","_useState12","setShowIt","_useState13","_useState14","setShowLockIn","includes","loadNextTraits","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","sensorAPIRef","ReactGA","initialize","swipe","api","warn","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","DragDropContext","onDragEnd","_objectSpread3","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","_defineProperty","newTraitIds","newColumn","sensors","Route","exact","path","AppWrapper","HashRouter","basename","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8aaaa1ad.chunk.js","sourcesContent":["import {\r\n  BiAlarmOff,\r\n  BiHappyBeaming,\r\n  BsFillShieldLockFill,\r\n  BsFillStopwatchFill,\r\n  BsFillTreeFill,\r\n  BsFillUnlockFill,\r\n  BsMusicNoteBeamed,\r\n  BsPeace,\r\n  FaChild,\r\n  FaFistRaised,\r\n  FaHandshake,\r\n  FaPiggyBank,\r\n  FaRegKissWinkHeart,\r\n  FaTools,\r\n  FiTarget,\r\n  GiBreakingChain,\r\n  GiChoice,\r\n  GiClothes,\r\n  GiCrossedSwords,\r\n  GiFlyingFlag,\r\n  GiGearHammer,\r\n  GiGlowingHands,\r\n  GiHeartInside,\r\n  GiHeartKey,\r\n  GiMedallist,\r\n  GiMountainClimbing,\r\n  GiMountainRoad,\r\n  GiNightSleep,\r\n  GiPalette,\r\n  GiPillow,\r\n  GiSplitArrows,\r\n  GrLineChart,\r\n  HiOutlineScale,\r\n  HiPuzzle,\r\n  MdAccessTime,\r\n  MdConnectWithoutContact,\r\n  MdFamilyRestroom,\r\n  MdFitnessCenter,\r\n  MdLeaderboard,\r\n  MdMenuBook,\r\n  MdOutlineThumbsUpDown,\r\n  MdOutlineVerifiedUser,\r\n  MdPsychology,\r\n  MdSocialDistance,\r\n  MdSportsSoccer,\r\n  MdVolunteerActivism,\r\n  RiEmotionSadLine,\r\n  RiGovernmentLine,\r\n  RiUserHeartFill,\r\n  SiHandshake,\r\n  GiLion,\r\n  RiErrorWarningFill,\r\n  FaGrinStars,\r\n  GiTeacher,\r\n  FaThumbsDown,\r\n  GiSittingDog,\r\n  FaUserGraduate,\r\n  GiMeditation,\r\n  FaShapes,\r\n  BiGlasses,\r\n  BsQuestionCircle,\r\n  AiOutlineOrderedList,\r\n  GiFireworkRocket,\r\n  MdBathtub,\r\n  GiFlyingTrout,\r\n  GiBinoculars,\r\n  FaRegSmileBeam,\r\n  FaDoorOpen,\r\n  GiPencilBrush,\r\n  GiButterfly,\r\n} from \"react-icons/all\";\r\n\r\nconst allTraits = [\r\n  \"Adventure\",\r\n  \"Ambition\",\r\n  \"Athleticism\",\r\n  \"Artistry\",\r\n  \"Boldness\",\r\n  \"Caution\",\r\n  \"Charisma\",\r\n  \"Confrontation\",\r\n  \"Contentment\",\r\n  \"Craftsmanship\",\r\n  \"Creativity\",\r\n  \"Decisiveness\",\r\n  \"Detachment\",\r\n  \"Discipline\",\r\n  \"Empathy\",\r\n  \"Enthusiasm\",\r\n  \"Flexibility\",\r\n  \"Frugality\",\r\n  \"Independence\",\r\n  \"Ingenuity\",\r\n  \"Musical Skill\",\r\n  \"Loyality\",\r\n  \"Open-mindedness\",\r\n  \"Optimism\",\r\n  \"Patience\",\r\n  \"Perseverance\",\r\n  \"Personal Space\",\r\n  \"Physical Appearance\",\r\n  \"Realism\",\r\n  \"Romance\",\r\n  \"Self-care\",\r\n  \"Spirituality\",\r\n  \"Simplicity\",\r\n  \"Teachability\",\r\n  \"Vision\",\r\n  \"Vulnerability\",\r\n];\r\n\r\nexport const traitIcons = {\r\n  \"Guess the traits\": <BsQuestionCircle />,\r\n  \"Show the traits\": <AiOutlineOrderedList />,\r\n  Artistry: <GiPalette />,\r\n  \"Musical Skill\": <BsMusicNoteBeamed />,\r\n  Leadership: <GiFlyingFlag />,\r\n  Excellence: <MdLeaderboard />,\r\n  \"Self Control\": <MdPsychology />,\r\n  \"Physical Appearance\": <GiClothes />,\r\n  Independence: <GiBreakingChain />,\r\n  Flexibility: <GiSplitArrows />,\r\n  \"Personal Space\": <MdSocialDistance />,\r\n  Rest: <GiNightSleep />,\r\n  Kindness: <RiUserHeartFill />,\r\n  Recreation: <MdSportsSoccer />,\r\n  Strength: <MdFitnessCenter />,\r\n  Wisdom: <MdMenuBook />,\r\n  Empathy: <MdConnectWithoutContact />,\r\n  Trust: <SiHandshake />,\r\n  Spontaneity: <BiAlarmOff />,\r\n  Adventure: <GiMountainRoad />,\r\n  Integrity: <MdOutlineVerifiedUser />,\r\n  Generosity: <MdVolunteerActivism />,\r\n  Patience: <MdAccessTime />,\r\n  Perseverance: <GiMountainClimbing />,\r\n  Mercy: <GiGlowingHands />,\r\n  Romance: <GiHeartInside />,\r\n  Athleticism: <GiMedallist />,\r\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\r\n  Productivity: <GiGearHammer />,\r\n  Nature: <BsFillTreeFill />,\r\n  Peace: <BsPeace />,\r\n  Determination: <FaFistRaised />,\r\n  Resourcefulness: <HiPuzzle />,\r\n  Authority: <RiGovernmentLine />,\r\n  Hope: <GiHeartKey />,\r\n  Challenge: <GiCrossedSwords />,\r\n  Decisiveness: <GiChoice />,\r\n  Comfort: <GiPillow />,\r\n  Joy: <BiHappyBeaming />,\r\n  Fairness: <HiOutlineScale />,\r\n  Affection: <FaRegKissWinkHeart />,\r\n  Confidence: <BsFillShieldLockFill />,\r\n  Respect: <FaHandshake />,\r\n  Discipline: <BsFillStopwatchFill />,\r\n  Frugality: <FaPiggyBank />,\r\n  Suffering: <RiEmotionSadLine />,\r\n  \"Child-likeness\": <FaChild />,\r\n  Optimism: <GrLineChart />,\r\n  Ambition: <FiTarget />,\r\n  Craftsmanship: <FaTools />,\r\n  Vulnerability: <BsFillUnlockFill />,\r\n  Family: <MdFamilyRestroom />,\r\n  Boldness: <GiLion />,\r\n  Caution: <RiErrorWarningFill />,\r\n  Confrontation: <GiCrossedSwords />,\r\n  Charisma: <FaGrinStars />,\r\n  Ingenuity: <HiPuzzle />,\r\n  Teachability: <FaUserGraduate />,\r\n  Pessimism: <FaThumbsDown />,\r\n  Loyality: <GiSittingDog />,\r\n  \"Self-Improvement\": <GiMeditation />,\r\n  Creativity: <GiPencilBrush />,\r\n  Realism: <BiGlasses />,\r\n  Enthusiasm: <GiFireworkRocket />,\r\n  \"Self-care\": <MdBathtub />,\r\n  Spirituality: <GiMeditation />,\r\n  Detachment: <GiButterfly />,\r\n  Vision: <GiBinoculars />,\r\n  Simplicity: <FaShapes />,\r\n  \"Open-mindedness\": <FaDoorOpen />,\r\n  Contentment: <FaRegSmileBeam />,\r\n};\r\nexport default allTraits;\r\n","export default function shuffle(array) {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex !== 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","import traits from \"../../utils/listOfAllTraits\";\r\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\n\r\nconst initialTraits = {\r\n  traits,\r\n  columns: {\r\n    column1: {\r\n      id: \"column1\",\r\n      title: \"Not Valued\",\r\n      traitIds: [],\r\n    },\r\n    column2: {\r\n      id: \"column2\",\r\n      title: \"Traits\",\r\n      traitIds: shuffle(listOfAllTraits),\r\n    },\r\n    column3: {\r\n      id: \"column3\",\r\n      title: \"Valued\",\r\n      traitIds: [],\r\n    },\r\n    guessing: {\r\n      id: \"guessing\",\r\n      title: \"guessing\",\r\n      traitIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\r\n};\r\nexport default initialTraits;\r\n","export default function makeId(length) {\r\n  let result = \"\";\r\n  const characters = \"0123456789\";\r\n  const charactersLength = characters.length;\r\n  for (let i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n","import mixpanel from \"mixpanel-browser\";\r\nimport LogRocket from \"logrocket\";\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\r\nLogRocket.init(\"zwugvl/trait-ranker\");\r\n\r\nLogRocket.getSessionURL(function (sessionURL) {\r\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\r\n});\r\n\r\nexport function makeAndTrackId(len) {\r\n  let Id = makeId(len);\r\n  mixpanel.track(\"Session Start\", { steps: 1 });\r\n  mixpanel.people.increment(\"sessions\", 1);\r\n  return Id;\r\n}\r\n\r\nexport function trackRankingPage(topTraits) {\r\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\r\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\r\n}\r\nexport function trackResultsPage(topTraits) {\r\n  mixpanel.track(\"Results Step\", { steps: 3 });\r\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\r\n}\r\nexport function trackShare() {\r\n  mixpanel.track(\"Shared\");\r\n}\r\nexport function trackShowTraits() {\r\n  mixpanel.track(\"Show Traits\");\r\n}\r\nexport function trackGuessTraits() {\r\n  mixpanel.track(\"Guess Traits\");\r\n}\r\nexport function trackGuessed(guesses) {\r\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\r\n}\r\nexport function trackShareConversion(source) {\r\n  mixpanel.track(\"Share Conversion\", { Source: source });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\r\nimport {trackShare} from \"../utils/mixpanel\"\r\n\r\nconst CopyableLink = ({ text }) => {\r\n  const [showTooltip, setShowTooltip] = useState(false);\r\n  const [showLink, setShowLink] = useState(false);\r\n  const onCopy = () => {\r\n    trackShare();\r\n    if (navigator.share) {\r\n      navigator\r\n        .share({\r\n          text: \"Take a look at my most valued traits\",\r\n          url: text,\r\n        })\r\n        .then(() => console.log(\"successful share\"))\r\n        .catch((error) => console.log(\"error sharing\", error));\r\n    } else {\r\n      navigator.clipboard\r\n        .writeText(text)\r\n        .then(() => console.log(\"Copied!\"))\r\n        .catch(() => console.log(\"Copy failed\"));\r\n      setShowTooltip(true);\r\n      setShowLink(true);\r\n    }\r\n  };\r\n  const onTipClose = () => {\r\n    setShowTooltip(false);\r\n  };\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      spacing={2}\r\n    >\r\n      <Grid item>\r\n        <Tooltip\r\n          title={\"Copied to clipboard!\"}\r\n          open={showTooltip}\r\n          leaveDelay={1000}\r\n          onClose={onTipClose}\r\n        >\r\n          <Button variant=\"contained\" onClick={onCopy}>\r\n            Share\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      {showLink && (\r\n        <Grid item>\r\n          <InputLabel>{text}</InputLabel>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default CopyableLink;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport makeId from \"./makeIdUtil\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\r\n  authDomain: \"trait-ranker.firebaseapp.com\",\r\n  projectId: \"trait-ranker\",\r\n  storageBucket: \"trait-ranker.appspot.com\",\r\n  messagingSenderId: \"387696334301\",\r\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\r\n  measurementId: \"G-K0FPHGRC6R\",\r\n};\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore(app);\r\n\r\nexport async function getHash(len) {\r\n  let timeout = false;\r\n  while (timeout === false) {\r\n    const hash = makeId(len);\r\n    const docRef = doc(db, hash);\r\n    const docSnap = await getDoc(docRef);\r\n    if (docSnap.exists()) {\r\n      console.log(\"repeat hash\");\r\n    } else {\r\n      console.log(\"hash \" + hash);\r\n      return hash;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function setDBTraits(hash, traitArray) {\r\n  await setDoc(doc(db, \"Traits\", hash), {\r\n    traits: traitArray,\r\n  }).catch((e) => {\r\n    console.log(e);\r\n  });\r\n  console.log(doc(db, \"Traits\", hash),traitArray);\r\n}\r\n\r\nexport async function getDBTraits(hash) {\r\n  const docRef = doc(db, \"Traits\", hash);\r\n  const docSnap = await getDoc(docRef);\r\n  if (docSnap.exists()) {\r\n    const traits = docSnap.data().traits;\r\n    console.log(traits);\r\n    return traits;\r\n  } else {\r\n    console.log(\"no doc\");\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardContent, Grid } from \"@mui/material\";\r\nimport { traitIcons } from \"../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst FlipCard = ({ trait, index }) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [flip, setFlip] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFlip(true);\r\n      setTimeout(() => setValue(trait), 500);\r\n    }, index * 500);\r\n  });\r\n  return (\r\n    <Card className={`wideCard ${flip && \"flip\"}`} style={{ margin: \".5vw\" }}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-start\"\r\n          style={{ marginTop: \"-8vw\" }} //for some reason this is the only thing I could vertically center content with\r\n        >\r\n          <Grid item>\r\n            <IconContext.Provider value={{ size: \"9vw\" }}>\r\n              {traitIcons[value]}\r\n            </IconContext.Provider>\r\n          </Grid>\r\n          <Grid item>\r\n            <h3>{value}</h3>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FlipCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FlipCard from \"./FlipCard\";\r\n\r\nconst SmallTraitList = ({ traits }) => {\r\n  return (\r\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n      {traits.slice(0, 7).map((trait, index) => {\r\n        return (\r\n          <Grid item>\r\n            <FlipCard trait={trait} index={index} />\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SmallTraitList;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport makeId from \"../utils/makeIdUtil\";\r\nimport CopyableLink from \"./CopyableLink\";\r\nimport { setDBTraits } from \"../utils/Firebase\";\r\nimport SmallTraitList from \"./SmallTraitList\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { trackResultsPage } from \"../utils/mixpanel\";\r\n\r\nconst ResultsPage = ({ topTraits, userID }) => {\r\n  useEffect(() => {\r\n    trackResultsPage(topTraits);\r\n    (async () => {\r\n      console.log(\"setting traits\", topTraits);\r\n      await setDBTraits(userID, topTraits);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Grid item>\r\n        <h3>Top Traits</h3>\r\n      </Grid>\r\n      <Grid item>\r\n        <SmallTraitList traits={topTraits.reverse()} />\r\n      </Grid>\r\n      <Grid item sx={{ padding: \"1rem\" }}>\r\n        <CopyableLink\r\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\r\n\r\nconst RankingTrait = ({ trait, onClick }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  const rippleRef = React.useRef(null);\r\n  const onRippleStart = (e) => {\r\n    rippleRef.current.start(e);\r\n  };\r\n  const onRippleStop = (e) => {\r\n    rippleRef.current.stop(e);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card rankCard\"\r\n      onClick={onClick}\r\n      onMouseDown={onRippleStart}\r\n      onMouseUp={onRippleStop}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n      <h1>{trait}</h1>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"20vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n        </Grid>\r\n      </Grid>\r\n      <TouchRipple ref={rippleRef} center={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTrait;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Fade, Typography, useMediaQuery } from \"@mui/material\";\r\n\r\nconst FadeTextSeries = ({ stringArray, variant }) => {\r\n  const [currentText, setCurrentText] = useState(stringArray[0]);\r\n  const [checked, setChecked] = useState(true);\r\n  const fadeTime = 3000;\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    let count = 0;\r\n\r\n    setInterval(() => {\r\n      setChecked((prev) => !prev);\r\n    }, fadeTime);\r\n\r\n    setInterval(() => {\r\n      if (count !== stringArray.length - 1) {\r\n        count++;\r\n        setCurrentText(stringArray[count]);\r\n      } else {\r\n        setCurrentText(\"\");\r\n      }\r\n    }, fadeTime * 2);\r\n  }, []);\r\n\r\n  return (\r\n    <Fade\r\n      in={checked}\r\n      timeout={{\r\n        enter: fadeTime * 1.9,\r\n        exit: fadeTime * 1.9,\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          minHeight: \"1.9rem\",\r\n          marginTop: \"8vh\",\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n        }}\r\n        align=\"center\"\r\n        variant={isMobile ? \"h3\" : \"h5\"}\r\n      >\r\n        {currentText}\r\n      </Typography>\r\n    </Fade>\r\n  );\r\n};\r\nexport default FadeTextSeries;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport RankingTrait from \"./TraitCards/RankingTrait\";\r\nimport { Grid, useMediaQuery, Box } from \"@mui/material\";\r\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\r\nimport { trackRankingPage } from \"../utils/mixpanel\";\r\n\r\nconst RankingPage = ({ topTraits, setTopTraits, history, finalList }) => {\r\n  const [displayedPairs, setDisplayedPairs] = React.useState(\r\n    topTraits.slice(0, 2)\r\n  );\r\n\r\n  let initialPairs = useRef([]);\r\n  let sortedPairs = useRef([]);\r\n  let sortingPair = useRef([]);\r\n\r\n  let joinStack = useRef([]);\r\n  let mergeStack = useRef([]);\r\n\r\n  let leftGuess = useRef(0);\r\n  let rightGuess = useRef(0);\r\n\r\n  let finishedList = useRef([]);\r\n  let unevenList = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let initialTraits = topTraits;\r\n    setDisplayedPairs(initialTraits.slice(0, 2));\r\n\r\n    if (initialTraits.length % 2) {\r\n      //initialize finished list with first element if uneven\r\n      unevenList.current = initialTraits.pop();\r\n    }\r\n    for (let i = 0; i < initialTraits.length; i += 2) {\r\n      //generate pairs for the user to sort\r\n      initialPairs.current.push([initialTraits[i], initialTraits[i + 1]]);\r\n    }\r\n  }, []);\r\n\r\n  const handlePick = (pick) => {\r\n    //looks at which arrays are empty to determine what stage the sort is in\r\n    console.log(\"pick: \" + pick);\r\n    const listLen = finishedList.current.length;\r\n    if (listLen > 6) {\r\n      console.log(\"the list length:\", listLen);\r\n      finishedList.current = finishedList.current.slice(listLen - 7);\r\n    }\r\n\r\n    if (joinStack.current.length !== 0) {\r\n      //checking for 'easy' joins\r\n      doJoinRound(pick);\r\n    } else if (mergeStack.current.length !== 0) {\r\n      doMergeRound(pick);\r\n    }\r\n\r\n    if (initialPairs.current.length !== 0) {\r\n      //sorting pairs\r\n      doInitialRound(pick);\r\n    }\r\n\r\n    let mergeStackHasValues = mergeStack.current.some(function (any) {\r\n      return any.length;\r\n    }); //check if all arrays are empty\r\n    if (!mergeStackHasValues && initialPairs.current.length === 0) {\r\n      if (sortedPairs.current.length === 0) {\r\n        setTopTraits(finishedList.current);\r\n        console.log(\"finished the list\" + finishedList.current);\r\n        history.push(\"/Results\");\r\n      } else {\r\n        buildMerge(sortedPairs.current[0]);\r\n      }\r\n    }\r\n\r\n    console.log(\"initialPairs: \", initialPairs.current);\r\n    console.log(\"sortedPairs: \", sortedPairs.current);\r\n    console.log(\"finished list: \", finishedList.current);\r\n    console.log(\"Join stack: \", joinStack.current);\r\n    console.log(\"mergeStack\", mergeStack.current);\r\n  };\r\n\r\n  const doInitialRound = (pick) => {\r\n    if (pick === initialPairs.current[0][0]) {\r\n      initialPairs.current[0].reverse();\r\n      console.log(\"reversed \", initialPairs.current[0]);\r\n    }\r\n\r\n    sortedPairs.current.push(initialPairs.current.shift());\r\n\r\n    setDisplayedPairs(initialPairs.current[0]);\r\n    if (initialPairs.current.length === 2) {\r\n      //set up the merges one render ahead\r\n      if (unevenList.current !== null) {\r\n        //populate finished list with uneven element\r\n        finishedList.current.push(unevenList.current);\r\n        console.log(\"Prepping for round uneven\");\r\n      } else {\r\n        finishedList.current = sortedPairs.current.shift(); //populate list with first sorted pair\r\n        console.log(\"Prepping for round 2\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const doJoinRound = (pick) => {\r\n    if (joinStack.current.length === 2) {\r\n      //check if left or right join\r\n      if (pick === sortingPair.current[0]) {\r\n        finishedList.current = finishedList.current.concat(sortingPair.current); //a 'successful' join\r\n        clearStacks();\r\n      } else {\r\n        joinStack.current.shift();\r\n        setDisplayedPairs(joinStack.current[0]);\r\n      }\r\n    } else {\r\n      if (pick === sortingPair.current[1]) {\r\n        joinStack.current = [];\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      } else {\r\n        finishedList.current = sortingPair.current.concat(finishedList.current);\r\n        clearStacks();\r\n      }\r\n    }\r\n  };\r\n\r\n  const doMergeRound = (pick) => {\r\n    if (displayedPairs[0] === sortingPair.current[0]) {\r\n      if (pick !== displayedPairs[0]) {\r\n        //found what is liked more and placing it in the sorted list\r\n        finishedList.current.splice(\r\n          leftGuess.current,\r\n          0,\r\n          sortingPair.current[0]\r\n        );\r\n        mergeStack.current[0] = [];\r\n      } else {\r\n        //tries next item in current sorted list\r\n        mergeStack.current[0].shift();\r\n        leftGuess.current++;\r\n        console.log(\"leftGuess \", leftGuess.current);\r\n        //tries to shift back and forth between items to reduce fatigue\r\n        if (mergeStack.current[0].length === 0) {\r\n          finishedList.current.splice(\r\n            leftGuess.current,\r\n            0,\r\n            sortingPair.current[0]\r\n          );\r\n          mergeStack.current[0].shift();\r\n        }\r\n      }\r\n      if (mergeStack.current[1].length !== 0) {\r\n        setDisplayedPairs(mergeStack.current[1][0]);\r\n      } else {\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      }\r\n    } else {\r\n      // higher\r\n      if (pick === displayedPairs[0]) {\r\n        finishedList.current.splice(\r\n          rightGuess.current + 1,\r\n          0,\r\n          sortingPair.current[1]\r\n        );\r\n        mergeStack.current[1] = [];\r\n      } else {\r\n        mergeStack.current[1].shift();\r\n        rightGuess.current--;\r\n        console.log(\"rightGuess \", rightGuess.current);\r\n        if (mergeStack.current[1].length === 0) {\r\n          finishedList.current.splice(\r\n            rightGuess.current + 1,\r\n            0,\r\n            sortingPair.current[1]\r\n          );\r\n          mergeStack.current[1].shift();\r\n        }\r\n      }\r\n      if (mergeStack.current[0].length !== 0) {\r\n        setDisplayedPairs(mergeStack.current[0][0]);\r\n      } else {\r\n        setDisplayedPairs(mergeStack.current[1][0]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const buildMerge = (list) => {\r\n    console.log(\"building round 2\");\r\n    buildJoinStack(list);\r\n    buildMergeStack(list);\r\n    sortingPair.current = sortedPairs.current.shift();\r\n    leftGuess.current = 0;\r\n    rightGuess.current = finishedList.current.length;\r\n  };\r\n\r\n  const buildJoinStack = (list) => {\r\n    joinStack.current.push([\r\n      list[0],\r\n      finishedList.current[finishedList.current.length - 1],\r\n    ]);\r\n    joinStack.current.push([list[1], finishedList.current[0]]);\r\n    setDisplayedPairs(joinStack.current[0]);\r\n    console.log(\"Initial Join stack: \", joinStack.current);\r\n  };\r\n\r\n  const buildMergeStack = (list) => {\r\n    let leftMergeStack = [];\r\n    let rightMergeStack = [];\r\n\r\n    for (let i = 0; i < finishedList.current.length; i++) {\r\n      leftMergeStack.push([list[0], finishedList.current[i]]);\r\n    }\r\n    for (let i = finishedList.current.length - 1; i >= 0; i--) {\r\n      rightMergeStack.push([list[1], finishedList.current[i]]);\r\n    }\r\n    mergeStack.current = [leftMergeStack, rightMergeStack];\r\n    console.log(\"initial mergeStack\", mergeStack.current);\r\n  };\r\n  const clearStacks = () => {\r\n    joinStack.current = [];\r\n    mergeStack.current = [];\r\n    sortingPair.current = [];\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  useEffect(() => {\r\n    trackRankingPage(topTraits);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"rankingFade\">\r\n        <FadeTextSeries\r\n          stringArray={[\r\n            `${isMobile ? \"Click\" : \"Tap\"} on the trait you value more`,\r\n          ]}\r\n        />\r\n      </div>\r\n      <Grid\r\n        container\r\n        spacing={isMobile ? 60 : 3}\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        direction={isMobile ? \"row\" : \"column\"}\r\n      >\r\n        <Grid item>\r\n          <RankingTrait\r\n            onClick={() => handlePick(displayedPairs[0])}\r\n            trait={displayedPairs[0]}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <RankingTrait\r\n            onClick={() => handlePick(displayedPairs[1])}\r\n            trait={displayedPairs[1]}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\n\r\nconst HelpDialogBox = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton size=\"large\" onClick={handleOpen}>\r\n        <HelpOutlineIcon />\r\n      </IconButton>\r\n\r\n      <Dialog\r\n        onClose={handleClose}\r\n        open={open}\r\n        maxWidth={\"xl\"}\r\n        style={{ borderRadius: 0 }}\r\n      >\r\n        <DialogContentText paragraph={false} style={{ margin: \"24px\" }}>\r\n          <br />\r\n          1. Drag traits to the left or right depending on whether you value\r\n          them.\r\n          <br />\r\n          <br />\r\n          2. Click on the traits you value more.\r\n          <br />\r\n          <br />\r\n          3. Click the share buttons to show your friends!\r\n          <br />\r\n        </DialogContentText>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\nexport default HelpDialogBox;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst HomeButton = ({ history }) => {\r\n  const handleHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Button color=\"inherit\" onClick={handleHome}>\r\n      Trait Ranker\r\n    </Button>\r\n  );\r\n};\r\nexport default HomeButton;\r\n\r\n\r\n","import React from \"react\";\r\nimport { AppBar, Box, Toolbar } from \"@mui/material\";\r\n\r\nimport HelpDialogBox from \"./HelpDialogBox\";\r\nimport HomeButton from \"./HomeButton\";\r\n\r\nconst NavBar = ({ history }) => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <HomeButton history={history} />\r\n          <div style={{ marginLeft: \"auto\" }}>\r\n            <HelpDialogBox />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { useMediaQuery, Grid } from \"@mui/material\";\r\n\r\nconst SelectionTrait = ({ trait, provided }) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  return (\r\n    <div\r\n      className=\"card selection\"\r\n      {...provided.dragHandleProps}\r\n      draggable={true}\r\n      id={trait}\r\n    >\r\n      <Grid container\r\n            alignItems='center'\r\n            justifyContent='center'\r\n            direction=\"column\">\r\n        <Grid item>\r\n          <h1>{trait}</h1>\r\n        </Grid>\r\n      <Grid item>\r\n      <IconContext.Provider\r\n        value={isMobile ? { size: \"6vw\" } : { size: \"60vw\" }}\r\n      >\r\n        {traitIcons[trait]}\r\n      </IconContext.Provider>\r\n      </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectionTrait;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport SelectionTrait from \"./SelectionTrait\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\r\n  if (style?.transform) {\r\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\r\n    return {\r\n      ...style,\r\n      transform: axisLockX,\r\n    };\r\n  }\r\n  return style;\r\n};\r\n\r\nfunction getStyle(style, snapshot) {\r\n  style = draggingCustomStyle(style);\r\n  if (!snapshot.isDropAnimating) {\r\n    return style;\r\n  }\r\n  const { moveTo, duration } = snapshot.dropAnimation;\r\n  const draggingOver = snapshot.draggingOver;\r\n  console.log(draggingOver);\r\n  let offset = 0;\r\n  if (draggingOver === \"column1\") {\r\n    offset = -100;\r\n  } else if (draggingOver === \"column3\") {\r\n    offset = 100;\r\n  }\r\n  // move to the right spot\r\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\r\n\r\n  // patching the existing style\r\n  return {\r\n    ...style,\r\n    transform: translate,\r\n    // slowing down the drop\r\n    transition: `all  ${duration + 0.2}s`,\r\n  };\r\n}\r\n\r\nconst TraitDraggable = ({ trait, index }) => {\r\n  return (\r\n    <Draggable draggableId={trait} key={trait} index={index}>\r\n      {(provided, snapshot) => (\r\n        <Container\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n          style={getStyle(provided.draggableProps.style, snapshot)}\r\n        >\r\n          <SelectionTrait trait={trait} provided={provided} />\r\n        </Container>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default TraitDraggable\r\n","import React from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\r\nimport \"../../style/CardStyle.scss\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst TraitList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver ? props.hoverColor : \"white\"};\r\n  display: flex;\r\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\r\n  min-height: 100vh;\r\n  max-width: ${(props) => props.isStarter && \"1px\"};\r\n`;\r\n\r\nconst SelectionDroppable = ({\r\n  column,\r\n  isStarter = false,\r\n  hoverColor = \"lightBlue\",\r\n}) => {\r\n  return (\r\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\r\n      {(provided, snapshot) => (\r\n        <TraitList\r\n          classname=\"cards stack\"\r\n          ref={provided.innerRef}\r\n          isStarter={isStarter}\r\n          hoverColor={hoverColor}\r\n          isDraggingOver={snapshot.isDraggingOver}\r\n          {...provided.droppableProps}\r\n        >\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n          >\r\n            <Grid item margin=\"auto\">\r\n              {isStarter && (\r\n                <TraitDraggable\r\n                  key={column?.traitIds[0]}\r\n                  trait={column?.traitIds[0]}\r\n                  index={column?.traitIds.indexOf(column?.traitIds[0])}\r\n                />\r\n              )}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </Grid>\r\n        </TraitList>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default SelectionDroppable\r\n","// @flow\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport SelectionDroppable from \"./SelectionDroppable\";\r\nimport { Box, Grid, useMediaQuery } from \"@mui/material\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst SelectionPage = ({\r\n  columnData,\r\n  setTopTraits,\r\n  history,\r\n  swipeHandlers,\r\n  topTraits,\r\n}) => {\r\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"currentTraits: \", columnData.columns.column2.traitIds);\r\n    console.log(\"top traits: \", columnData.columns.column3.traitIds);\r\n    if (columnData.columns.column2.traitIds.length === 0 && topTraits) {\r\n      console.log(columnData.columns.column3.traitIds);\r\n      setTopTraits(columnData.columns.column3.traitIds);\r\n      console.log(\"setting traits from selection\");\r\n      history.push(\"/Rank\");\r\n    }\r\n  }, [columnData, history, setTopTraits, topTraits]);\r\n\r\n  const selectionIntro = [\r\n    `${isMobile ? \"Drag\" : \"Swipe \"} right to like, left to pass.`,\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <FadeTextSeries stringArray={selectionIntro} />\r\n      <div {...swipeHandlers}>\r\n        <Grid container spacing={0} wrap=\"nowrap\">\r\n          <SelectionDroppable\r\n            key={columnData.columns.column1.id}\r\n            column={columnData.columns.column1}\r\n            hoverColor={\"LightPink\"}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column2.id}\r\n            column={columnData.columns.column2}\r\n            isStarter={true}\r\n          />\r\n          <SelectionDroppable\r\n            key={columnData.columns.column3.id}\r\n            column={columnData.columns.column3}\r\n            hoverColor={\"LightGreen\"}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default SelectionPage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Card, Grid } from \"@mui/material\";\r\n\r\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\r\n  const [isBouncing, setIsBouncing] = useState(\"\");\r\n  const [currentColor, setCurrentColor] = useState(\"\");\r\n  const firstUpdate = useRef(true);\r\n  useEffect(() => {\r\n    if (firstUpdate.current == true) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setIsBouncing(true);\r\n      setTimeout(() => setCurrentColor(color), 250); //timeout set to half bounce time to time color change to apex\r\n    }, 500 * index); //timeout set to total bounce time to have items bounce one at a time\r\n    setIsBouncing(false);\r\n  }, [color]);\r\n\r\n  return (\r\n    <Draggable draggableId={trait} index={index} isDragDisabled={!isDraggable}>\r\n      {(provided) => (\r\n        <div\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Card\r\n            className={`wideCard ${isBouncing ? \"bounce\" : \"\"}`}\r\n            sx={{ backgroundColor: currentColor }}\r\n          >\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <h3>{trait}</h3>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default FreeDragTrait;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Grid } from \"@mui/material\";\r\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\r\nimport styled from \"styled-components\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst DragColumn = styled.div``;\r\n\r\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\r\n  const tutorialStrings = [\"Rearrange to the guess list order\"];\r\n  return (\r\n    <div>\r\n      <div className=\"rankingFade\" style={{ marginBottom: \"2vh\" }}>\r\n        <FadeTextSeries stringArray={tutorialStrings} />\r\n      </div>\r\n\r\n      <Droppable key={column.id} droppableId={column.id}>\r\n        {(provided, snapshot) => (\r\n          <DragColumn\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            isDraggingOver={snapshot.isDraggingOver}\r\n          >\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {column.traitIds.map((trait, index) => {\r\n                return (\r\n                  <Grid item key={trait}>\r\n                    <FreeDragTrait\r\n                      trait={trait}\r\n                      index={column.traitIds.indexOf(trait)}\r\n                      color={colors[index]}\r\n                      isDraggable={isDraggable}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </Grid>\r\n          </DragColumn>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\nexport default ReorderableColumn;\r\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.replace('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport TryItButton from \"./TryItButton\";\r\n\r\nconst ReorderGuess = ({\r\n  column,\r\n  onDone,\r\n  colors,\r\n  showTryIt,\r\n  history,\r\n  isDraggable,\r\n  showLockIn,\r\n}) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Grid item>\r\n        <ReorderableColumn\r\n          column={column}\r\n          colors={colors}\r\n          isDraggable={isDraggable}\r\n        />\r\n      </Grid>\r\n      <Grid item sx={{ paddingTop: \"4vh\" }}>\r\n        {showLockIn && (\r\n          <Button onClick={onDone} variant=\"contained\">\r\n            Lock in\r\n          </Button>\r\n        )}\r\n        {showTryIt && <TryItButton history={history} />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ReorderGuess;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport initialTraits from \"../Selection/initialTraits\";\r\nimport shuffle from \"../../utils/ShuffleUtil\";\r\nimport ReorderableColumn from \"./ReorderableColumn\";\r\nimport ReorderGuess from \"./ReorderGuess\";\r\nimport { trackGuessed } from \"../../utils/mixpanel\";\r\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\r\n\r\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\r\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\r\n  let wrongTraits = useRef([]);\r\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\r\n  let finalList = useRef([]);\r\n  const [colors, setColors] = useState([]);\r\n  const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n  const [currentTraits, setCurrentTraits] = useState([]);\r\n  const [showPicks, setShowPicks] = useState(true);\r\n  const [showColumn, setShowColumn] = useState(false);\r\n  const [showTryIt, setShowIt] = useState(false);\r\n  const [showLockIn, setShowLockIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    while (wrongTraits.current.length < 7) {\r\n      //get eligible red herrings\r\n      if (!traitsLeft.current.includes(traitPool[0])) {\r\n        wrongTraits.current.push(traitPool[0]);\r\n      }\r\n      traitPool = traitPool.splice(1, traitPool.length);\r\n    }\r\n    loadNextTraits();\r\n  }, [traitPool]);\r\n\r\n  const handlePick = (pick) => {\r\n    finalList.current.push(pick);\r\n    if (traitsLeft.current.length === 0) {\r\n      const newTraits = {\r\n        ...columnData.columns.guessing,\r\n        traitIds: finalList.current,\r\n      };\r\n      const newColumnData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          guessing: newTraits,\r\n        },\r\n      };\r\n      setColumnData(newColumnData);\r\n      trackGuessed(newColumnData.columns.guessing);\r\n      setShowColumn(true);\r\n      setShowPicks(false);\r\n    }\r\n    loadNextTraits();\r\n  };\r\n  const loadNextTraits = () => {\r\n    setCurrentTraits(\r\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\r\n    );\r\n    console.log(\"TraitsLeft: \", traitsLeft.current);\r\n    console.log(\"WrongTaits: \", wrongTraits.current);\r\n    console.log(finalList.current);\r\n  };\r\n  const onDone = () => {\r\n    console.log(\"done!\");\r\n    let guessColors = [];\r\n    const correctTraits = traits.slice(0, 7);\r\n    const guess = columnData.columns.guessing.traitIds;\r\n    for (let i = 0; i < correctTraits.length; i++) {\r\n      if (correctTraits[i] === guess[i]) {\r\n        guessColors.push(\"green\");\r\n        console.log(\"correct\", correctTraits[i], guess[i]);\r\n      } else if (correctTraits.includes(guess[i])) {\r\n        guessColors.push(\"gold\");\r\n        console.log(\"in there\", correctTraits[i], guess[i]);\r\n      } else {\r\n        guessColors.push(\"LightGray\");\r\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\r\n      }\r\n    }\r\n    setColors(guessColors);\r\n    setShowIt(true);\r\n    setShowLockIn(false);\r\n    setIsDraggable(false);\r\n  };\r\n\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n\r\n  const guessTutorial = [\r\n    \"Select the traits actually in the list.\",\r\n    \"Press the ? button at any time to see an example.\",\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"rankingFade\" style={{ marginTop: \"-12vh\" }}>\r\n        <FadeTextSeries stringArray={guessTutorial} />\r\n      </div>\r\n      {showPicks && (\r\n        <Grid\r\n          container\r\n          spacing={isMobile ? 60 : 3}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          direction={isMobile ? \"row\" : \"column\"}\r\n        >\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[0])}\r\n              trait={currentTraits[0]}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <RankingTrait\r\n              onClick={() => handlePick(currentTraits[1])}\r\n              trait={currentTraits[1]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showColumn && (\r\n        <ReorderGuess\r\n          column={columnData.columns.guessing}\r\n          onDone={onDone}\r\n          colors={colors}\r\n          showTryIt={showTryIt}\r\n          showLockIn={showLockIn}\r\n          history={history}\r\n          isDraggable={isDraggable}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GuessPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getDBTraits } from \"../../utils/Firebase\";\r\nimport { Grid, Typography, useMediaQuery } from \"@mui/material\";\r\nimport RankingTrait from \"../TraitCards/RankingTrait\";\r\nimport SmallTraitList from \"../SmallTraitList\";\r\nimport GuessPage from \"./GuessPage\";\r\nimport TryItButton from \"./TryItButton\";\r\nimport { trackShowTraits, trackGuessTraits } from \"../../utils/mixpanel\";\r\n\r\nconst SharedPage = ({ columnData, setColumnData, history }) => {\r\n  let { id } = useParams();\r\n  const [storedTraits, setStoredTraits] = useState([]);\r\n  const [showList, setShowList] = useState(false);\r\n  const [showGuessing, setShowGuessing] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getDBTraits(id).then((result) => {\r\n        setStoredTraits(result);\r\n      });\r\n    })();\r\n  }, [id]);\r\n  const showTraits = () => {\r\n    trackShowTraits();\r\n    setShowList(true);\r\n    setShowOptions(false);\r\n  };\r\n  const showGuess = () => {\r\n    trackGuessTraits();\r\n    setShowGuessing(true);\r\n    setShowOptions(false);\r\n  };\r\n  console.log(\"storedTraits\", storedTraits);\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={isMobile ? 60 : 3}\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      direction={isMobile ? \"row\" : \"column\"}\r\n    >\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\r\n        </Grid>\r\n      )}\r\n      {showOptions && (\r\n        <Grid item>\r\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\r\n        </Grid>\r\n      )}\r\n\r\n      {showList && (\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            direction=\"column\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant={isMobile ? \"h3\" : \"h5\"} color=\"black\">\r\n                Top traits\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <SmallTraitList traits={storedTraits} />\r\n            </Grid>\r\n            <Grid item style={{ marginTop: \"5vw\" }}>\r\n              <TryItButton history={history} source=\"Guess\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {showGuessing && (\r\n        <Grid item>\r\n          <GuessPage\r\n            traits={storedTraits}\r\n            columnData={columnData}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n          />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\nexport default SharedPage;\r\n","// @flow\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport initialTraits from \"./Selection/initialTraits\";\r\nimport ResultsPage from \"./ResultsPage\";\r\nimport RankingPage from \"./RankingPage\";\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport { HashRouter, Route, useHistory } from \"react-router-dom\";\r\nimport SelectionPage from \"./Selection/SelectionPage\";\r\nimport ReactGA from \"react-ga\";\r\nimport SharedPage from \"./Share/SharedPage\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\r\nimport { useSwipeable } from \"react-swipeable\";\r\nimport tweenFunctions from \"tween-functions\";\r\nimport { makeAndTrackId } from \"../utils/mixpanel\";\r\n\r\nconst App = () => {\r\n  const history = useHistory();\r\n  const [columnData, setColumnData] = useState(initialTraits);\r\n  const [topTraits, setTopTraits] = useState([]);\r\n  const [userId, setUserId] = useState(makeAndTrackId(8));\r\n  const sensorAPIRef = useRef<?SensorAPI>(null);\r\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\r\n  ReactGA.initialize(TRACKING_ID);\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    //make sure the draggable moved\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n    const start = columnData.columns[source.droppableId];\r\n    const finish = columnData.columns[destination.droppableId];\r\n\r\n    //if moving within the same column\r\n    if (start === finish) {\r\n      const newTraitIds = Array.from(start.traitIds);\r\n      newTraitIds.splice(source.index, 1);\r\n      newTraitIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        traitIds: newTraitIds,\r\n      };\r\n\r\n      //override existing column\r\n      const newData = {\r\n        ...columnData,\r\n        columns: {\r\n          ...columnData.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setColumnData(newData);\r\n      return;\r\n    }\r\n    //cross column moving\r\n    const startTraitIds = Array.from(start.traitIds);\r\n    startTraitIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      traitIds: startTraitIds,\r\n    };\r\n\r\n    const finishTraitIds = Array.from(finish.traitIds);\r\n    finishTraitIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      traitIds: finishTraitIds,\r\n    };\r\n\r\n    const newData = {\r\n      ...columnData,\r\n      columns: {\r\n        ...columnData.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n    setColumnData(newData);\r\n  };\r\n\r\n  function swipe(direction) {\r\n    const api: ?SensorAPI = sensorAPIRef.current;\r\n    if (!api) {\r\n      console.warn(\"unable to find sensor api\");\r\n      return null;\r\n    }\r\n    let endX;\r\n    if (direction === \"right\") {\r\n      endX = 100;\r\n    } else {\r\n      endX = -100;\r\n    }\r\n    const start = { x: 0, y: 0 };\r\n    const end = { x: endX, y: 0 };\r\n\r\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\r\n\r\n    if (!preDrag) {\r\n      console.warn(\"unable to start capturing\");\r\n      return null;\r\n    }\r\n\r\n    const drag = preDrag.fluidLift(start);\r\n\r\n    const points = [];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      points.push({\r\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\r\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\r\n      });\r\n    }\r\n    moveStepByStep(drag, points);\r\n  }\r\n\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: () => {\r\n      console.log(\"left swiped\");\r\n      swipe(\"left\");\r\n    },\r\n    onSwipedRight: () => {\r\n      console.log(\"right swiped\");\r\n      swipe(\"right\");\r\n    },\r\n  });\r\n\r\n  function moveStepByStep(drag, values) {\r\n    requestAnimationFrame(() => {\r\n      const newPosition = values.shift();\r\n      drag.move(newPosition);\r\n      if (values.length) {\r\n        moveStepByStep(drag, values);\r\n      } else {\r\n        drag.drop();\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"touchmove\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        sensors={[\r\n          (api) => {\r\n            sensorAPIRef.current = api;\r\n          },\r\n        ]}\r\n      >\r\n        <NavBar history={history} />\r\n        <Route exact path=\"/\">\r\n          <SelectionPage\r\n            columnData={columnData}\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            setColumnData={setColumnData}\r\n            history={history}\r\n            swipeHandlers={swipeHandlers}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Rank\">\r\n          <RankingPage\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            history={history}\r\n          />\r\n        </Route>\r\n        <Route path=\"/Results\">\r\n          <ResultsPage\r\n            topTraits={topTraits}\r\n            setTopTraits={setTopTraits}\r\n            userID={userId}\r\n          />\r\n        </Route>\r\n        <Route\r\n          path=\"/Share/:id\"\r\n          children={\r\n            <SharedPage columnData={columnData} setColumnData={setColumnData} history={history} />\r\n          }\r\n        />\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <HashRouter basename={\"/trait-ranker\"}>\r\n      <App />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport AppWrapper from \"./components/App\";\r\n\r\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}