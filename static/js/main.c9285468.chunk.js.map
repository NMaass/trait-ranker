{"version":3,"sources":["utils/listOfAllTraits.js","utils/ShuffleUtil.js","components/Selection/initialTraits.js","utils/makeIdUtil.js","utils/mixpanel.js","components/CopyableLink.js","utils/Firebase.js","components/SmallTraitList.js","components/ResultsPage.js","components/TraitCards/RankingTrait.js","components/RankingPage.js","components/NavBar/HelpDialogBox.js","components/NavBar/HomeButton.js","components/NavBar/NavBar.js","components/TraitCards/SelectionTrait.js","components/TraitCards/TraitDraggable.js","components/Selection/SelectionDroppable.js","components/Selection/SelectionPage.js","components/TraitCards/ReorderTrait.js","components/TraitCards/FreeDragTrait.js","components/Share/ReorderableColumn.js","components/Share/TryItButton.js","components/Share/ReorderGuess.js","components/Share/GuessPage.js","components/Share/SharedPage.js","components/App.js","index.js"],"names":["traitIcons","Artistry","Leadership","Excellence","Independence","Flexibility","Rest","Kindness","Recreation","Strength","Wisdom","Empathy","Trust","Spontaneity","Adventure","Integrity","Generosity","Patience","Perseverance","Mercy","Romance","Athleticism","Productivity","Nature","Peace","Determination","Resourcefulness","Authority","Hope","Challenge","Decisiveness","Comfort","Joy","Fairness","Affection","Confidence","Respect","Discipline","Frugality","Suffering","Optimism","Ambition","Craftsmanship","Vulnerability","Family","Boldness","Caution","Confrontation","Charisma","Ingenuity","Teachability","Pessimism","Loyality","Creativity","Realism","allTraits","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","initialTraits","traits","columns","column1","id","title","traitIds","column2","listOfAllTraits","column3","guessing","columnOrder","makeId","result","characters","charactersLength","i","charAt","mixpanel","init","debug","LogRocket","getSessionURL","sessionURL","track","CopyableLink","text","useState","showTooltip","setShowTooltip","showLink","setShowLink","Grid","container","direction","alignItems","justifyContent","spacing","item","Tooltip","open","leaveDelay","onClose","Button","variant","onClick","navigator","share","url","then","console","log","catch","error","clipboard","writeText","InputLabel","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","setDBTraits","hash","traitArray","setDoc","doc","e","getDBTraits","docRef","getDoc","docSnap","exists","data","SmallTraitList","List","splice","map","trait","ListItem","ListItemAvatar","Provider","value","size","ListItemText","ResultsPage","topTraits","userID","useEffect","steps","trackResultsPage","reverse","RankingTrait","isMobile","useMediaQuery","rippleRef","React","useRef","className","onMouseDown","current","start","onMouseUp","stop","TouchRipple","ref","center","RankingPage","setTopTraits","history","finalList","slice","displayedPairs","setDisplayedPairs","initialPairs","sortedPairs","sortingPair","joinStack","mergeStack","leftGuess","rightGuess","finishedList","isDone","unevenList","pop","push","handlePick","pick","doJoinRound","doMergeRound","doInitialRound","some","any","buildMerge","shift","concat","clearStacks","list","buildJoinStack","buildMergeStack","leftMergeStack","rightMergeStack","trackRankingPage","HelpDialogBox","setOpen","IconButton","Dialog","maxWidth","style","borderRadius","DialogContentText","paragraph","margin","HomeButton","color","NavBar","Box","sx","flexGrow","AppBar","position","Toolbar","marginLeft","SelectionTrait","provided","dragHandleProps","draggable","Container","styled","div","getStyle","snapshot","transform","axisLockX","split","draggingCustomStyle","isDropAnimating","dropAnimation","moveTo","duration","draggingOver","offset","translate","y","transition","TraitDraggable","index","draggableId","draggableProps","innerRef","isDragging","TraitList","props","isDraggingOver","hoverColor","isStarter","SelectionDroppable","column","droppableId","classname","droppableProps","indexOf","placeholder","SelectionPage","columnData","swipeHandlers","wrap","ReorderTrait","Chip","icon","label","minWidth","FreeDragTrait","isDraggable","DragColumn","ReorderableColumn","colors","TryItButton","source","Source","trackShareConversion","ReorderGuess","onDone","showTryIt","padding","GuessPage","setColumnData","traitsLeft","wrongTraits","traitPool","setColors","setIsDraggable","currentTraits","setCurrentTraits","showPicks","setShowPicks","showColumn","setShowColumn","setShowIt","includes","loadNextTraits","newTraits","newColumnData","guesses","guessColors","correctTraits","guess","SharedPage","useParams","storedTraits","setStoredTraits","showList","setShowList","showGuessing","setShowGuessing","showOptions","setShowOptions","App","useHistory","len","Id","people","increment","makeAndTrackId","userId","sensorAPIRef","ReactGA","initialize","swipe","api","warn","x","end","preDrag","tryGetLock","drag","fluidLift","points","tweenFunctions","easeOutCirc","moveStepByStep","useSwipeable","onSwipedLeft","onSwipedRight","values","requestAnimationFrame","newPosition","move","drop","window","addEventListener","preventDefault","onDragEnd","destination","finish","startTraitIds","Array","from","newStart","finishTraitIds","newFinish","newData","newTraitIds","newColumn","sensors","exact","path","children","AppWrapper","basename","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c9285468.chunk.js","sourcesContent":["import {\n  BiAlarmOff,\n  BiHappyBeaming,\n  BsFillShieldLockFill,\n  BsFillStopwatchFill,\n  BsFillTreeFill,\n  BsFillUnlockFill,\n  BsMusicNoteBeamed,\n  BsPeace,\n  FaChild,\n  FaFistRaised,\n  FaHandshake,\n  FaPiggyBank,\n  FaRegKissWinkHeart,\n  FaTools,\n  FiTarget,\n  GiBreakingChain,\n  GiChoice,\n  GiClothes,\n  GiCrossedSwords,\n  GiFlyingFlag,\n  GiGearHammer,\n  GiGlowingHands,\n  GiHeartInside,\n  GiHeartKey,\n  GiMedallist,\n  GiMountainClimbing,\n  GiMountainRoad,\n  GiNightSleep,\n  GiPalette,\n  GiPillow,\n  GiSplitArrows,\n  GrLineChart,\n  HiOutlineScale,\n  HiPuzzle,\n  MdAccessTime,\n  MdConnectWithoutContact,\n  MdFamilyRestroom,\n  MdFitnessCenter,\n  MdLeaderboard,\n  MdMenuBook,\n  MdOutlineThumbsUpDown,\n  MdOutlineVerifiedUser,\n  MdPsychology,\n  MdSocialDistance,\n  MdSportsSoccer,\n  MdVolunteerActivism,\n  RiEmotionSadLine,\n  RiGovernmentLine,\n  RiUserHeartFill,\n  SiHandshake,\n  GiLion,\n  RiErrorWarningFill,\n  FaGrinStars,\n  GiTeacher,\n  FaThumbsDown,\n  GiSittingDog,\n  FaUserGraduate,\n  GiMeditation,\n  FaShapes,\n  BiGlasses,\n} from \"react-icons/all\";\n\nconst allTraits = [\n  'Adventure',\n  'Ambition',\n  'Athleticism',\n  'Boldness',\n  'Caution',\n  'Charisma',\n  'Confrontation',\n  'Craftsmanship',\n  'Creativity',\n  'Decisiveness',\n  'Discipline',\n  'Empathy',\n  'Flexibility',\n  'Frugality',\n  'Independence',\n  'Ingenuity',\n  'Musical Skill',\n    'Loyality',\n  'Optimism',\n  'Patience',\n  'Peace',\n  'Perseverance',\n  'Personal Space',\n  'Realism',\n  'Physical Appearance',\n  'Romance',\n  'Self-Improvement',\n  'Teachability',\n  'Vulnerability',\n];\n\nexport const traitIcons = {\n  Artistry: <GiPalette />,\n  \"Musical Skill\": <BsMusicNoteBeamed />,\n  Leadership: <GiFlyingFlag />,\n  Excellence: <MdLeaderboard />,\n  \"Self Control\": <MdPsychology />,\n  \"Physical Appearance\": <GiClothes />,\n  Independence: <GiBreakingChain />,\n  Flexibility: <GiSplitArrows />,\n  \"Personal Space\": <MdSocialDistance />,\n  Rest: <GiNightSleep />,\n  Kindness: <RiUserHeartFill />,\n  Recreation: <MdSportsSoccer />,\n  Strength: <MdFitnessCenter />,\n  Wisdom: <MdMenuBook />,\n  Empathy: <MdConnectWithoutContact />,\n  Trust: <SiHandshake />,\n  Spontaneity: <BiAlarmOff />,\n  Adventure: <GiMountainRoad />,\n  Integrity: <MdOutlineVerifiedUser />,\n  Generosity: <MdVolunteerActivism />,\n  Patience: <MdAccessTime />,\n  Perseverance: <GiMountainClimbing />,\n  Mercy: <GiGlowingHands />,\n  Romance: <GiHeartInside />,\n  Athleticism: <GiMedallist />,\n  \"Constructive Criticism\": <MdOutlineThumbsUpDown />,\n  Productivity: <GiGearHammer />,\n  Nature: <BsFillTreeFill />,\n  Peace: <BsPeace />,\n  Determination: <FaFistRaised />,\n  Resourcefulness: <HiPuzzle />,\n  Authority: <RiGovernmentLine />,\n  Hope: <GiHeartKey />,\n  Challenge: <GiCrossedSwords />,\n  Decisiveness: <GiChoice />,\n  Comfort: <GiPillow />,\n  Joy: <BiHappyBeaming />,\n  Fairness: <HiOutlineScale />,\n  Affection: <FaRegKissWinkHeart />,\n  Confidence: <BsFillShieldLockFill />,\n  Respect: <FaHandshake />,\n  Discipline: <BsFillStopwatchFill />,\n  Frugality: <FaPiggyBank />,\n  Suffering: <RiEmotionSadLine />,\n  \"Child-likeness\": <FaChild />,\n  Optimism: <GrLineChart />,\n  Ambition: <FiTarget />,\n  Craftsmanship: <FaTools />,\n  Vulnerability: <BsFillUnlockFill />,\n  Family: <MdFamilyRestroom />,\n  Boldness: <GiLion/>,\n  Caution: <RiErrorWarningFill/>,\n  Confrontation: <GiCrossedSwords/>,\n  Charisma: <FaGrinStars/>,\n  Ingenuity: <HiPuzzle/>,\n  Teachability: <FaUserGraduate/>,\n  Pessimism: <FaThumbsDown/>,\n  Loyality: <GiSittingDog/>,\n  'Self-Improvement': <GiMeditation/>,\n  Creativity: <FaShapes/>,\n  Realism: <BiGlasses/>,\n};\nexport default allTraits;\n","export default function shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n","import traits from \"../../utils/listOfAllTraits\";\nimport listOfAllTraits from \"../../utils/listOfAllTraits\";\nimport shuffle from \"../../utils/ShuffleUtil\";\n\nconst initialTraits = {\n  traits,\n  columns: {\n    column1: {\n      id: \"column1\",\n      title: \"Not Valued\",\n      traitIds: [],\n    },\n    column2: {\n      id: \"column2\",\n      title: \"Traits\",\n      traitIds: shuffle(listOfAllTraits),\n    },\n    column3: {\n      id: \"column3\",\n      title: \"Valued\",\n      traitIds: [],\n    },\n    guessing: {\n      id: \"guessing\",\n      title: \"guessing\",\n      traitIds: [],\n    },\n  },\n  columnOrder: [\"column1\", \"column2\", \"column3\"],\n};\nexport default initialTraits;\n","export default function makeId(length) {\n  let result = \"\";\n  const characters = \"0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","import mixpanel from \"mixpanel-browser\";\nimport LogRocket from \"logrocket\";\nimport makeId from \"./makeIdUtil\";\n\nmixpanel.init(\"e338ea1bac5ef125937525a304521900\", { debug: false });\nLogRocket.init(\"zwugvl/trait-ranker\");\n\nLogRocket.getSessionURL(function (sessionURL) {\n  mixpanel.track(\"LogRocket\", { sessionURL: sessionURL });\n});\n\nexport function makeAndTrackId(len) {\n  let Id = makeId(len);\n  mixpanel.track(\"Session Start\", { steps: 1 });\n  mixpanel.people.increment(\"sessions\", 1);\n  return Id;\n}\n\nexport function trackRankingPage(topTraits) {\n  mixpanel.track(\"Ranking Step\", { steps: 2 });\n  mixpanel.track(\"Selected Traits\", { \"chosen traits\": topTraits });\n}\nexport function trackResultsPage(topTraits) {\n  mixpanel.track(\"Results Step\", { steps: 3 });\n  mixpanel.track(\"Ranked Traits\", { \"top traits\": topTraits });\n}\nexport function trackShare() {\n  mixpanel.track(\"Shared\");\n}\nexport function trackShowTraits() {\n  mixpanel.track(\"Show Traits\");\n}\nexport function trackGuessTraits() {\n  mixpanel.track(\"Guess Traits\");\n}\nexport function trackGuessed(guesses) {\n  mixpanel.track(\"Guessed\", { \"Guessed traits\": guesses });\n}\nexport function trackShareConversion(source) {\n  mixpanel.track(\"Share Conversion\", { Source: source });\n}\n","import React, { useState } from \"react\";\nimport { Button, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport {trackShare} from \"../utils/mixpanel\"\n\nconst CopyableLink = ({ text }) => {\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [showLink, setShowLink] = useState(false);\n  const onCopy = () => {\n    trackShare();\n    if (navigator.share) {\n      navigator\n        .share({\n          text: \"Take a look at my most valued traits\",\n          url: text,\n        })\n        .then(() => console.log(\"successful share\"))\n        .catch((error) => console.log(\"error sharing\", error));\n    } else {\n      navigator.clipboard\n        .writeText(text)\n        .then(() => console.log(\"Copied!\"))\n        .catch(() => console.log(\"Copy failed\"));\n      setShowTooltip(true);\n      setShowLink(true);\n    }\n  };\n  const onTipClose = () => {\n    setShowTooltip(false);\n  };\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={2}\n    >\n      <Grid item>\n        <Tooltip\n          title={\"Copied to clipboard!\"}\n          open={showTooltip}\n          leaveDelay={1000}\n          onClose={onTipClose}\n        >\n          <Button variant=\"contained\" onClick={onCopy}>\n            Share\n          </Button>\n        </Tooltip>\n      </Grid>\n      {showLink && (\n        <Grid item>\n          <InputLabel>{text}</InputLabel>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\nexport default CopyableLink;\n","import { initializeApp } from \"firebase/app\";\nimport { doc, getDoc, setDoc, getFirestore } from \"firebase/firestore\";\n\nimport makeId from \"./makeIdUtil\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBGLwRSqZ-ZO8O7t2Jx0J0ZNq9P5MgzkJ0\",\n  authDomain: \"trait-ranker.firebaseapp.com\",\n  projectId: \"trait-ranker\",\n  storageBucket: \"trait-ranker.appspot.com\",\n  messagingSenderId: \"387696334301\",\n  appId: \"1:387696334301:web:e7d512845f69e5a2e25234\",\n  measurementId: \"G-K0FPHGRC6R\",\n};\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore(app);\n\nexport async function getHash(len) {\n  let timeout = false;\n  while (timeout === false) {\n    const hash = makeId(len);\n    const docRef = doc(db, hash);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      console.log(\"repeat hash\");\n    } else {\n      console.log(\"hash \" + hash);\n      return hash;\n    }\n  }\n}\n\nexport async function setDBTraits(hash, traitArray) {\n  await setDoc(doc(db, \"Traits\", hash), {\n    traits: traitArray,\n  }).catch((e) => {\n    console.log(e);\n  });\n  console.log(doc(db, \"Traits\", hash));\n}\n\nexport async function getDBTraits(hash) {\n  const docRef = doc(db, \"Traits\", hash);\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n    const traits = docSnap.data().traits;\n    console.log(traits);\n    return traits;\n  } else {\n    console.log(\"no doc\");\n  }\n}\n","import React from \"react\";\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\nimport { IconContext } from \"react-icons\";\nimport { traitIcons } from \"../utils/listOfAllTraits\";\n\nconst SmallTraitList = ({ traits }) => {\n  return (\n    <List>\n      {traits.splice(0, 7).map((trait) => {\n        return (\n          <ListItem key={trait}>\n            <ListItemAvatar>\n              <IconContext.Provider value={{ size: \"5vh\" }}>\n                {traitIcons[trait]}\n              </IconContext.Provider>\n            </ListItemAvatar>\n            <ListItemText>{trait}</ListItemText>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\nexport default SmallTraitList;\n","import React, { useEffect, useRef } from \"react\";\nimport makeId from \"../utils/makeIdUtil\";\nimport CopyableLink from \"./CopyableLink\";\nimport { setDBTraits } from \"../utils/Firebase\";\nimport SmallTraitList from \"./SmallTraitList\";\nimport { Grid } from \"@mui/material\";\nimport {trackResultsPage} from \"../utils/mixpanel\"\n\nconst ResultsPage = ({ topTraits, userID }) => {\n  useEffect(() => {\n    trackResultsPage(topTraits);\n    (async () => {\n      console.log(\"setting traits\", topTraits);\n      await setDBTraits(userID, topTraits);\n    })();\n  }, [topTraits]);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Grid item>\n        <h3>Top Traits</h3>\n      </Grid>\n      <Grid item>\n        <SmallTraitList traits={topTraits.reverse()} />\n      </Grid>\n      <Grid item>\n        <CopyableLink\n          text={\"https://nmaass.github.io/trait-ranker/#/Share/\" + userID}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ResultsPage;\n","import React from \"react\";\nimport \"../../style/CardStyle.scss\";\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\nimport { IconContext } from \"react-icons\";\nimport { useMediaQuery, Grid } from \"@mui/material\";\nimport TouchRipple from \"@mui/material/ButtonBase/TouchRipple\";\n\nconst RankingTrait = ({ trait, onClick }) => {\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\n\n  const rippleRef = React.useRef(null);\n  const onRippleStart = (e) => {\n    rippleRef.current.start(e);\n  };\n  const onRippleStop = (e) => {\n    rippleRef.current.stop(e);\n  };\n\n  return (\n    <div\n      className=\"card rankCard\"\n      onClick={onClick}\n      onMouseDown={onRippleStart}\n      onMouseUp={onRippleStop}\n    >\n      <Grid container\n            alignItems='center'\n            justifyContent='center'\n            direction=\"column\">\n        <Grid item>\n      <h1>{trait}</h1>\n        </Grid>\n        <Grid item>\n\n\n      <IconContext.Provider\n        value={isMobile ? { size: \"6vw\" } : { size: \"20vw\" }}\n      >\n        {traitIcons[trait]}\n      </IconContext.Provider>\n        </Grid>\n      </Grid>\n      <TouchRipple ref={rippleRef} center={false} />\n    </div>\n  );\n};\n\nexport default RankingTrait;\n","import React, { useEffect, useRef } from \"react\";\nimport RankingTrait from \"./TraitCards/RankingTrait\";\nimport { Grid, useMediaQuery, Box } from \"@mui/material\";\nimport FadeTextSeries from \"../utils/FadeTextSeries\";\nimport {trackRankingPage} from \"../utils/mixpanel\"\n\nconst RankingPage = ({ topTraits, setTopTraits, history, finalList }) => {\n  const [displayedPairs, setDisplayedPairs] = React.useState(\n    topTraits.slice(0, 2)\n  );\n\n  let initialPairs = useRef([]);\n  let sortedPairs = useRef([]);\n  let sortingPair = useRef([]);\n\n  let joinStack = useRef([]);\n  let mergeStack = useRef([]);\n\n  let leftGuess = useRef(0);\n  let rightGuess = useRef(0);\n\n  let finishedList = useRef([]);\n  let isDone = useRef(false)\n  let unevenList = useRef(null);\n\n  useEffect(() => {\n    if(isDone.current){\n      console.log(\"isDone is preventing useEffect from running\")\n    }\n    else{\n      let initialTraits = topTraits;\n      setDisplayedPairs(initialTraits.slice(0, 2));\n\n      if (initialTraits.length % 2) {\n        //initialize finished list with first element if uneven\n        unevenList.current = initialTraits.pop();\n      }\n      for (let i = 0; i < initialTraits.length; i += 2) {\n        //generate pairs for the user to sort\n        initialPairs.current.push([initialTraits[i], initialTraits[i + 1]]);\n      }\n    }\n  }, []);\n\n  const handlePick = (pick) => {\n    //looks at which arrays are empty to determine what stage the sort is in\n    console.log(\"pick: \" + pick);\n    if(isDone.current) {console.log(\"is done is preventing handle pick from firing. Finished list:\", finishedList)}\n    else {\n      if (joinStack.current.length !== 0) {\n        //checking for 'easy' joins\n        doJoinRound(pick);\n      } else if (mergeStack.current.length !== 0) {\n        doMergeRound(pick);\n      }\n\n      if (initialPairs.current.length !== 0) {\n        //sorting pairs\n        doInitialRound(pick);\n      }\n\n      let mergeStackHasValues = mergeStack.current.some(function (any) {\n        return any.length;\n      }); //check if all arrays are empty\n      if (!mergeStackHasValues && initialPairs.current.length === 0) {\n        if (sortedPairs.current.length === 0) {\n          setTopTraits(finishedList.current);\n          console.log(\"finished the list\" + finishedList.current)\n          history.push(\"/Results\");\n        }\n        else {\n          buildMerge(sortedPairs.current[0]);\n        }\n      }\n    }\n\n    console.log(\"initialPairs: \", initialPairs.current);\n    console.log(\"sortedPairs: \", sortedPairs.current);\n    console.log(\"finished list: \", finishedList.current);\n    console.log(\"Join stack: \", joinStack.current);\n    console.log(\"mergeStack\", mergeStack.current);\n  };\n\n  const doInitialRound = (pick) => {\n    if(isDone.current) {console.log('isDone is preventing inital round from firing')}\n    else{\n      if (pick === initialPairs.current[0][0]) {\n        initialPairs.current[0].reverse();\n        console.log(\"reversed \", initialPairs.current[0]);\n      }\n\n      sortedPairs.current.push(initialPairs.current.shift());\n\n      setDisplayedPairs(initialPairs.current[0]);\n      if (initialPairs.current.length === 1) {\n        //set up the merges one render ahead\n        if (unevenList.current !== null) {\n          //populate finished list with uneven element\n          finishedList.current.push(unevenList.current);\n          console.log(\"Prepping for round uneven\");\n        } else {\n          finishedList.current = sortedPairs.current.shift(); //populate list with first sorted pair\n          console.log(\"Prepping for round 2\");\n        }\n      }\n    }\n  };\n\n  const doJoinRound = (pick) => {\n    if(isDone.current){console.log(\"isDone is blocking doJoinRound\")}\n    else {\n      if (joinStack.current.length === 2) {\n        //check if left or right join\n        if (pick === sortingPair.current[0]) {\n          finishedList.current = finishedList.current.concat(sortingPair.current); //a 'successful' join\n          clearStacks();\n        } else {\n          joinStack.current.shift();\n          setDisplayedPairs(joinStack.current[0]);\n        }\n      } else {\n        if (pick === sortingPair.current[1]) {\n          joinStack.current = [];\n          setDisplayedPairs(mergeStack.current[0][0]);\n        } else {\n          finishedList.current = sortingPair.current.concat(finishedList.current);\n          clearStacks();\n        }\n      }\n    }\n  };\n\n  const doMergeRound = (pick) => {\n    //tries to shift back and forth between items to reduce fatiguef\n    if(isDone.current) {\n      console.log(\"isDone is preventing domergeRound\")\n    }\n    else {\n      if (displayedPairs[0] === sortingPair.current[0]) {\n        //lower\n        if (pick !== displayedPairs[0]) {\n          //found what is liked more\n          finishedList.current.splice(\n              leftGuess.current,\n              0,\n              sortingPair.current[0]\n          );\n          mergeStack.current[0] = [];\n        } else {\n          //keeps going\n          mergeStack.current[0].shift();\n          leftGuess.current++;\n          console.log(\"leftGuess \", leftGuess.current);\n          if (mergeStack.current[0].length === 0) {\n            finishedList.current.splice(\n                leftGuess.current,\n                0,\n                sortingPair.current[0]\n            );\n            mergeStack.current[0].shift();\n          }\n        }\n        if (mergeStack.current[1].length !== 0) {\n          setDisplayedPairs(mergeStack.current[1][0]);\n        } else {\n          setDisplayedPairs(mergeStack.current[0][0]);\n        }\n      } else {\n        // higher\n        if (pick === displayedPairs[0]) {\n          finishedList.current.splice(\n              rightGuess.current + 1,\n              0,\n              sortingPair.current[1]\n          );\n          mergeStack.current[1] = [];\n        } else {\n          mergeStack.current[1].shift();\n          rightGuess.current--;\n          console.log(\"rightGuess \", rightGuess.current);\n          if (mergeStack.current[1].length === 0) {\n            finishedList.current.splice(\n                rightGuess.current + 1,\n                0,\n                sortingPair.current[1]\n            );\n            mergeStack.current[1].shift();\n          }\n        }\n        if (mergeStack.current[0].length !== 0) {\n          setDisplayedPairs(mergeStack.current[0][0]);\n        } else {\n          setDisplayedPairs(mergeStack.current[1][0]);\n        }\n      }\n    }\n  };\n\n  const buildMerge = (list) => {\n    console.log(\"building round 2\");\n    if(isDone.current){\n      console.log(\"isDone is preventing buildMerge\")\n    }\n    else {\n      let listLen = finishedList.current.length;\n      if (listLen > 6 && isDone.current === false) {\n       // finishedList.current = finishedList.current.slice(listLen - 7, listLen);\n      }\n      buildJoinStack(list);\n      buildMergeStack(list);\n      sortingPair.current = sortedPairs.current.shift();\n      leftGuess.current = 0;\n      rightGuess.current = finishedList.current.length;\n    }\n  };\n\n  const buildJoinStack = (list) => {\n    if(isDone.current){\n      console.log(\"isDone is blocking build joinStack\")\n    }\n    else {\n      joinStack.current.push([\n        list[0],\n        finishedList.current[finishedList.current.length - 1],\n      ]);\n      joinStack.current.push([list[1], finishedList.current[0]]);\n      setDisplayedPairs(joinStack.current[0]);\n      console.log(\"Initial Join stack: \", joinStack.current);\n    }\n  };\n\n  const buildMergeStack = (list) => {\n    if(isDone.current){\n      console.log(\"isDone is blocking build mergeStack\")\n    }\n    else {\n      let leftMergeStack = [];\n      let rightMergeStack = [];\n\n      for (let i = 0; i < finishedList.current.length; i++) {\n        leftMergeStack.push([list[0], finishedList.current[i]]);\n      }\n      for (let i = finishedList.current.length - 1; i >= 0; i--) {\n        rightMergeStack.push([list[1], finishedList.current[i]]);\n      }\n      mergeStack.current = [leftMergeStack, rightMergeStack];\n      console.log(\"initial mergeStack\", mergeStack.current);\n    }\n  };\n  const clearStacks = () => {\n    joinStack.current = [];\n    mergeStack.current = [];\n    sortingPair.current = [];\n  };\n\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\n\n  useEffect(()=>{\n    trackRankingPage(topTraits)\n  },[])\n\n  return (\n      <div>\n      <Grid\n          container\n          spacing={isMobile ? 60 : 1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction={isMobile ? \"row\" : \"column\"}\n        >\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(displayedPairs[0])}\n              trait={displayedPairs[0]}\n            />\n          </Grid>\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(displayedPairs[1])}\n              trait={displayedPairs[1]}\n            />\n          </Grid>\n        </Grid>\n      </div>\n  );\n};\n\nexport default RankingPage;\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n} from \"@mui/material\";\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\n\nconst HelpDialogBox = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <IconButton size=\"large\" onClick={handleOpen}>\n        <HelpOutlineIcon />\n      </IconButton>\n\n      <Dialog\n        onClose={handleClose}\n        open={open}\n        maxWidth={\"xl\"}\n        style={{ borderRadius: 0 }}\n      >\n        <DialogContentText paragraph={false} style={{ margin: \"24px\" }}>\n          <br />\n          1. Drag traits to the left or right depending on whether you value\n          them.\n          <br />\n          <br />\n          2. Click on the traits you value more.\n          <br />\n          <br />\n          3. Click the share buttons to show your friends!\n          <br />\n        </DialogContentText>\n      </Dialog>\n    </div>\n  );\n};\nexport default HelpDialogBox;\n","import React from \"react\";\nimport { Button } from \"@mui/material\";\n\nconst HomeButton = ({ history }) => {\n  const handleHome = () => {\n    history.push(\"/\");\n  };\n  return (\n    <Button color=\"inherit\" onClick={handleHome}>\n      Trait Ranker\n    </Button>\n  );\n};\nexport default HomeButton;\n\n\n","import React from \"react\";\nimport { AppBar, Box, Toolbar } from \"@mui/material\";\n\nimport HelpDialogBox from \"./HelpDialogBox\";\nimport HomeButton from \"./HomeButton\";\n\nconst NavBar = ({ history }) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <HomeButton history={history} />\n          <div style={{ marginLeft: \"auto\" }}>\n            <HelpDialogBox />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\nexport default NavBar;\n","import React from \"react\";\nimport \"../../style/CardStyle.scss\";\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\nimport { IconContext } from \"react-icons\";\nimport { useMediaQuery, Grid } from \"@mui/material\";\n\nconst SelectionTrait = ({ trait, provided }) => {\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\n\n  return (\n    <div\n      className=\"card selection\"\n      {...provided.dragHandleProps}\n      draggable={true}\n      id={trait}\n    >\n      <Grid container\n            alignItems='center'\n            justifyContent='center'\n            direction=\"column\">\n        <Grid item>\n          <h1>{trait}</h1>\n        </Grid>\n      <Grid item>\n      <IconContext.Provider\n        value={isMobile ? { size: \"6vw\" } : { size: \"60vw\" }}\n      >\n        {traitIcons[trait]}\n      </IconContext.Provider>\n      </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default SelectionTrait;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport SelectionTrait from \"./SelectionTrait\";\n\nconst Container = styled.div``;\n\nconst draggingCustomStyle = (style: React.CSSProperties | undefined) => {\n  if (style?.transform) {\n    const axisLockX = `${style.transform.split(\",\").shift()}, 0px)`;\n    return {\n      ...style,\n      transform: axisLockX,\n    };\n  }\n  return style;\n};\n\nfunction getStyle(style, snapshot) {\n  style = draggingCustomStyle(style);\n  if (!snapshot.isDropAnimating) {\n    return style;\n  }\n  const { moveTo, duration } = snapshot.dropAnimation;\n  const draggingOver = snapshot.draggingOver;\n  console.log(draggingOver);\n  let offset = 0;\n  if (draggingOver === \"column1\") {\n    offset = -100;\n  } else if (draggingOver === \"column3\") {\n    offset = 100;\n  }\n  // move to the right spot\n  const translate = `translate(${offset}vw, ${moveTo.y}px)`;\n\n  // patching the existing style\n  return {\n    ...style,\n    transform: translate,\n    // slowing down the drop\n    transition: `all  ${duration + 0.2}s`,\n  };\n}\n\nconst TraitDraggable = ({ trait, index }) => {\n  return (\n    <Draggable draggableId={trait} key={trait} index={index}>\n      {(provided, snapshot) => (\n        <Container\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n          style={getStyle(provided.draggableProps.style, snapshot)}\n        >\n          <SelectionTrait trait={trait} provided={provided} />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\nexport default TraitDraggable\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport TraitDraggable from \"../TraitCards/TraitDraggable\";\nimport \"../../style/CardStyle.scss\";\nimport { Grid } from \"@mui/material\";\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst TraitList = styled.div`\n  transition: background-color 0.2s ease;\n  background-color: ${(props) =>\n    props.isDraggingOver ? props.hoverColor : \"white\"};\n  display: flex;\n  min-width: ${(props) => (props.isStarter ? \"1px\" : \"49.9vw\")};\n  min-height: 100vh;\n  max-width: ${(props) => props.isStarter && \"1px\"};\n`;\n\nconst SelectionDroppable = ({\n  column,\n  isStarter = false,\n  hoverColor = \"lightBlue\",\n}) => {\n  return (\n    <Droppable key={column.id} droppableId={column.id} direction=\"horizontal\">\n      {(provided, snapshot) => (\n        <TraitList\n          classname=\"cards stack\"\n          ref={provided.innerRef}\n          isStarter={isStarter}\n          hoverColor={hoverColor}\n          isDraggingOver={snapshot.isDraggingOver}\n          {...provided.droppableProps}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Grid item margin=\"auto\">\n              {isStarter && (\n                <TraitDraggable\n                  key={column?.traitIds[0]}\n                  trait={column?.traitIds[0]}\n                  index={column?.traitIds.indexOf(column?.traitIds[0])}\n                />\n              )}\n              {provided.placeholder}\n            </Grid>\n          </Grid>\n        </TraitList>\n      )}\n    </Droppable>\n  );\n};\n\nexport default SelectionDroppable\n","// @flow\nimport React, {useEffect, useRef, useState} from \"react\";\nimport SelectionDroppable from \"./SelectionDroppable\";\nimport {Box, Grid} from \"@mui/material\";\nimport {useSwipeable} from \"react-swipeable\";\nimport type {PreDragActions, SensorAPI, SnapDragActions} from \"react-beautiful-dnd/src/types\";\nimport FadeTextSeries from \"../../utils/FadeTextSeries\";\n\n\nfunction noop() {\n}\n\n\nconst SelectionPage = ({columnData, setTopTraits, history, swipeHandlers}) => {\n\n    useEffect(() => {\n        console.log(\"currentTraits: \", columnData.columns.column2.traitIds)\n        console.log(\"top traits: \", columnData.columns.column3.traitIds)\n        if (columnData.columns.column2.traitIds.length === 0) {\n            console.log(columnData.columns.column3.traitIds)\n            setTopTraits(columnData.columns.column3.traitIds);\n            console.log(\"setting traits from selection\")\n            history.push(\"/Rank\");\n        }\n\n    }, [columnData, history, setTopTraits])\n\n    return (\n        <Box>\n            <div {...swipeHandlers} >\n                <Grid container\n                      spacing={0}\n                      wrap=\"nowrap\">\n                    <SelectionDroppable key={columnData.columns.column1.id} column={columnData.columns.column1}\n                                        hoverColor={'LightPink'}/>\n                    <SelectionDroppable key={columnData.columns.column2.id} column={columnData.columns.column2}\n                                        isStarter={true}/>\n                    <SelectionDroppable key={columnData.columns.column3.id} column={columnData.columns.column3}\n                                        hoverColor={'LightGreen'}/>\n                </Grid>\n            </div>\n        </Box>\n    )\n};\nexport default SelectionPage;\n","import React from \"react\";\nimport \"../../style/CardStyle.scss\";\nimport { traitIcons } from \"../../utils/listOfAllTraits\";\nimport { Chip, useMediaQuery } from \"@mui/material\";\n\nconst ReorderTrait = ({ trait, provided, color, }) => {\n  const isMobile = useMediaQuery(\"(min-width:1024px\");\n\n  return (\n    <Chip\n      icon={traitIcons[trait]}\n      label={trait}\n      {...provided.dragHandleProps}\n      draggable={true}\n      id={trait}\n      color={color}\n      sx={isMobile ? { minWidth: \"300px\" } : { minWidth: \"80vw\" }}\n    />\n  );\n};\nexport default ReorderTrait;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport ReorderTrait from \"./ReorderTrait\";\nimport styled from \"styled-components\";\n\nconst FreeDragTrait = ({ trait, index, color, isDraggable }) => {\n  const Container = styled.div``;\n  return (\n    <Draggable draggableId={trait} index={index}>\n      {(provided) => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <ReorderTrait trait={trait} provided={provided} color={color} />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\nexport default FreeDragTrait;\n","import React, { useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Grid } from \"@mui/material\";\nimport FreeDragTrait from \"../TraitCards/FreeDragTrait\";\nimport styled from \"styled-components\";\n\nconst DragColumn = styled.div``;\n\nconst ReorderableColumn = ({ column, colors, isDraggable }) => {\n  return (\n    <div>\n      <Droppable key={column.id} droppableId={column.id}>\n        {(provided, snapshot) => (\n          <DragColumn\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            <Grid\n              container\n              direction=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              {column.traitIds.map((trait, index) => {\n                return (\n                  <Grid item key={trait}>\n                    <FreeDragTrait\n                      trait={trait}\n                      index={column.traitIds.indexOf(trait)}\n                      color={colors[index]}\n                    />\n                  </Grid>\n                );\n              })}\n            </Grid>\n            {provided.placeholder}\n          </DragColumn>\n        )}\n      </Droppable>\n    </div>\n  );\n};\nexport default ReorderableColumn\n","import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\nimport {trackShareConversion} from \"../../utils/mixpanel\"\r\n\r\nconst TryItButton = ({history, source}) =>{\r\n    const tryIt = () =>{\r\n        trackShareConversion(source);\r\n        history.push('/');\r\n    }\r\n    return(\r\n        <Button onClick={tryIt}\r\n                variant='contained'\r\n            >\r\n            Try it!\r\n        </Button>\r\n    )\r\n}\r\nexport default TryItButton;\r\n","import React from \"react\";\nimport ReorderableColumn from \"./ReorderableColumn\";\nimport { Button, Grid } from \"@mui/material\";\nimport TryItButton from \"./TryItButton\";\n\nconst ReorderGuess = ({ column, onDone, colors, showTryIt, history, isDraggable }) => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Grid item sx={{ padding: \"5vh\" }}>\n      </Grid>\n      <Grid item>\n        <ReorderableColumn column={column} colors={colors}  />\n      </Grid>\n      <Grid item sx={{ padding: \"5vh\" }}>\n        <Button\n          onClick={onDone}\n          variant=\"contained\"\n        >\n          Lock in\n        </Button>\n      </Grid>\n       <Grid item>\n         { showTryIt && <TryItButton history={history}/>}\n       </Grid>\n    </Grid>\n  );\n};\nexport default ReorderGuess\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Grid, useMediaQuery } from \"@mui/material\";\nimport RankingTrait from \"../TraitCards/RankingTrait\";\nimport initialTraits from \"../Selection/initialTraits\";\nimport shuffle from \"../../utils/ShuffleUtil\";\nimport ReorderableColumn from \"./ReorderableColumn\";\nimport ReorderGuess from \"./ReorderGuess\";\nimport {trackGuessed} from \"../../utils/mixpanel\"\n\nconst GuessPage = ({ traits, columnData, setColumnData, history }) => {\n  let traitsLeft = useRef(shuffle(traits.slice(0, 7)));\n  let wrongTraits = useRef([]);\n  let traitPool = initialTraits.columns.column2.traitIds; //already randomized on each load\n  let finalList = useRef([]);\n  const [colors, setColors] = useState([]);\n  const [isDraggable, setIsDraggable] = useState(true);\n\n  const [currentTraits, setCurrentTraits] = useState([]);\n  const [showPicks, setShowPicks] = useState(true);\n  const [showColumn, setShowColumn] = useState(false);\n  const [showTryIt, setShowIt] = useState(false)\n\n  useEffect(() => {\n    while (wrongTraits.current.length < 7) {\n      //get eligible red herrings\n      if (!traitsLeft.current.includes(traitPool[0])) {\n        wrongTraits.current.push(traitPool[0]);\n      }\n      traitPool = traitPool.splice(1, traitPool.length);\n    }\n    loadNextTraits();\n  }, [traitPool]);\n\n  const handlePick = (pick) => {\n    finalList.current.push(pick);\n    if (traitsLeft.current.length === 0) {\n      const newTraits = {\n        ...columnData.columns.guessing,\n        traitIds: finalList.current,\n      };\n      const newColumnData = {\n        ...columnData,\n        columns: {\n          ...columnData.columns,\n          guessing: newTraits,\n        },\n      };\n      setColumnData(newColumnData);\n      trackGuessed(newColumnData.columns.guessing);\n      setShowColumn(true);\n      setShowPicks(false);\n    }\n    loadNextTraits();\n  };\n  const loadNextTraits = () => {\n    setCurrentTraits(\n      shuffle([traitsLeft.current.pop(), wrongTraits.current.pop()])\n    );\n    console.log(\"TraitsLeft: \", traitsLeft.current);\n    console.log(\"WrongTaits: \", wrongTraits.current);\n    console.log(finalList.current);\n  };\n  const onDone = () => {\n    console.log(\"done!\");\n    let guessColors = [];\n    const correctTraits = traits.slice(0, 7);\n    const guess = columnData.columns.guessing.traitIds;\n    for (let i = 0; i < correctTraits.length; i++) {\n      if (correctTraits[i] === guess[i]) {\n        guessColors.push(\"success\");\n        console.log(\"correct\", correctTraits[i], guess[i]);\n      } else if (correctTraits.includes(guess[i])) {\n        guessColors.push(\"warning\");\n        console.log(\"in there\", correctTraits[i], guess[i]);\n      } else {\n        guessColors.push(\"default\");\n        console.log(\"incorrect\", correctTraits[i], guess[i]);\n      }\n    }\n    setColors(guessColors);\n    setShowIt(true);\n    setIsDraggable(false);\n  };\n\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\n  return (\n    <div>\n      {showPicks && (\n        <Grid\n          container\n          spacing={isMobile ? 60 : 1}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          direction={isMobile ? \"row\" : \"column\"}\n        >\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(currentTraits[0])}\n              trait={currentTraits[0]}\n            />\n          </Grid>\n          <Grid item>\n            <RankingTrait\n              onClick={() => handlePick(currentTraits[1])}\n              trait={currentTraits[1]}\n            />\n          </Grid>\n        </Grid>\n      )}\n      {showColumn && (\n        <ReorderGuess\n          column={columnData.columns.guessing}\n          onDone={onDone}\n          colors={colors}\n          showTryIt={showTryIt}\n          history={history}\n          isDraggable={isDraggable}\n        />\n      )}\n    </div>\n  );\n};\nexport default GuessPage\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getDBTraits } from \"../../utils/Firebase\";\nimport { Grid, useMediaQuery } from \"@mui/material\";\nimport RankingTrait from \"../TraitCards/RankingTrait\";\nimport SmallTraitList from \"../SmallTraitList\";\nimport GuessPage from \"./GuessPage\";\nimport TryItButton from \"./TryItButton\";\nimport {trackShowTraits, trackGuessTraits} from \"../../utils/mixpanel\"\n\nconst SharedPage = ({ columnData, setColumnData, history }) => {\n  let { id } = useParams();\n  const [storedTraits, setStoredTraits] = useState([]);\n  const [showList, setShowList] = useState(false);\n  const [showGuessing, setShowGuessing] = useState(false);\n  const [showOptions, setShowOptions] = useState(true);\n  const isMobile = useMediaQuery(\"(min-width:1024px)\");\n  useEffect(() => {\n    (async () => {\n      await getDBTraits(id).then((result) => {\n        setStoredTraits(result);\n      });\n    })();\n  }, [id]);\n  const showTraits = () => {\n    trackShowTraits();\n    setShowList(true);\n    setShowOptions(false);\n  };\n  const showGuess = () => {\n    trackGuessTraits();\n    setShowGuessing(true);\n    setShowOptions(false);\n  };\n  console.log(\"storedTraits\", storedTraits);\n  return (\n    <Grid\n      container\n      spacing={isMobile ? 60 : 1}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      direction={isMobile ? \"row\" : \"column\"}\n    >\n      {showOptions && (\n        <Grid item>\n          <RankingTrait onClick={showTraits} trait=\"Show the traits\" />\n        </Grid>\n      )}\n      {showOptions && (\n        <Grid item>\n          <RankingTrait onClick={showGuess} trait=\"Guess the traits\" />\n        </Grid>\n      )}\n      {showList && (\n        <Grid item>\n          <Grid container\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                direction='column'\n          >\n            <Grid item>\n              <SmallTraitList traits={storedTraits} />\n            </Grid>\n            <Grid>\n              <TryItButton history={history} source=\"Guess\"/>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n      {showGuessing && (\n        <Grid item>\n          <GuessPage\n            traits={storedTraits}\n            columnData={columnData}\n            setColumnData={setColumnData}\n            history={history}\n          />\n        </Grid>\n      )}\n    </Grid>\n  );\n};\nexport default SharedPage\n","// @flow\nimport React, { useEffect, useRef, useState } from \"react\";\nimport initialTraits from \"./Selection/initialTraits\";\nimport ResultsPage from \"./ResultsPage\";\nimport RankingPage from \"./RankingPage\";\nimport NavBar from \"./NavBar/NavBar\";\nimport { HashRouter, Route, useHistory } from \"react-router-dom\";\nimport SelectionPage from \"./Selection/SelectionPage\";\nimport ReactGA from \"react-ga\";\nimport SharedPage from \"./Share/SharedPage\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport type { SensorAPI } from \"react-beautiful-dnd/src/types\";\nimport { useSwipeable } from \"react-swipeable\";\nimport tweenFunctions from \"tween-functions\";\nimport { makeAndTrackId } from \"../utils/mixpanel\";\n\nconst App = () => {\n  const history = useHistory();\n  const [columnData, setColumnData] = useState(initialTraits);\n  const [topTraits, setTopTraits] = useState([]);\n  const [userId, setUserId] = useState(makeAndTrackId(8));\n  const sensorAPIRef = useRef<?SensorAPI>(null);\n  const TRACKING_ID = \"G-4RLGL8ENZC\";\n  ReactGA.initialize(TRACKING_ID);\n\n  const onDragEnd = ({ destination, source, draggableId }) => {\n    if (!destination) {\n      return;\n    }\n    //make sure the draggable moved\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const start = columnData.columns[source.droppableId];\n    const finish = columnData.columns[destination.droppableId];\n\n    //if moving within the same column\n    if (start === finish) {\n      const newTraitIds = Array.from(start.traitIds);\n      newTraitIds.splice(source.index, 1);\n      newTraitIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        traitIds: newTraitIds,\n      };\n\n      //override existing column\n      const newData = {\n        ...columnData,\n        columns: {\n          ...columnData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n      setColumnData(newData);\n      return;\n    }\n    //cross column moving\n    const startTraitIds = Array.from(start.traitIds);\n    startTraitIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      traitIds: startTraitIds,\n    };\n\n    const finishTraitIds = Array.from(finish.traitIds);\n    finishTraitIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      traitIds: finishTraitIds,\n    };\n\n    const newData = {\n      ...columnData,\n      columns: {\n        ...columnData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    setColumnData(newData);\n  };\n\n  function swipe(direction) {\n    const api: ?SensorAPI = sensorAPIRef.current;\n    if (!api) {\n      console.warn(\"unable to find sensor api\");\n      return null;\n    }\n    let endX;\n    if (direction === \"right\") {\n      endX = 100;\n    } else {\n      endX = -100;\n    }\n    const start = { x: 0, y: 0 };\n    const end = { x: endX, y: 0 };\n\n    const preDrag = api.tryGetLock(columnData.columns.column2.traitIds[0]);\n\n    if (!preDrag) {\n      console.log(\"unable to start capturing\");\n      return null;\n    }\n\n    const drag = preDrag.fluidLift(start);\n\n    const points = [];\n\n    for (let i = 0; i < 20; i++) {\n      points.push({\n        x: tweenFunctions.easeOutCirc(i, start.x, end.x, 20),\n        y: tweenFunctions.easeOutCirc(i, start.y, end.y, 20),\n      });\n    }\n    moveStepByStep(drag, points);\n  }\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => {\n      console.log(\"left swiped\");\n      swipe(\"left\");\n    },\n    onSwipedRight: () => {\n      console.log(\"right swiped\");\n      swipe(\"right\");\n    },\n  });\n\n  function moveStepByStep(drag, values) {\n    requestAnimationFrame(() => {\n      const newPosition = values.shift();\n      drag.move(newPosition);\n      if (values.length) {\n        moveStepByStep(drag, values);\n      } else {\n        drag.drop();\n      }\n    });\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"touchmove\", (e) => {\n      e.preventDefault();\n    });\n  }, []);\n\n  return (\n    <div>\n      <DragDropContext\n        onDragEnd={onDragEnd}\n        sensors={[\n          (api) => {\n            sensorAPIRef.current = api;\n          },\n        ]}\n      >\n        <NavBar history={history} />\n        <Route exact path=\"/\">\n          <SelectionPage\n            columnData={columnData}\n            topTraits={topTraits}\n            setTopTraits={setTopTraits}\n            setColumnData={setColumnData}\n            history={history}\n            swipeHandlers={swipeHandlers}\n          />\n        </Route>\n        <Route path=\"/Rank\">\n          <RankingPage\n            topTraits={topTraits}\n            setTopTraits={setTopTraits}\n            history={history}\n          />\n        </Route>\n        <Route path=\"/Results\">\n          <ResultsPage\n            topTraits={topTraits}\n            setTopTraits={setTopTraits}\n            userID={userId}\n          />\n        </Route>\n        <Route\n          path=\"/Share/:id\"\n          children={\n            <SharedPage columnData={columnData} setColumnData={setColumnData} history={history} />\n          }\n        />\n      </DragDropContext>\n    </div>\n  );\n};\n\nconst AppWrapper = () => {\n  return (\n    <HashRouter basename={\"/trait-ranker\"}>\n      <App />\n    </HashRouter>\n  );\n};\n\nexport default AppWrapper;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppWrapper from \"./components/App\";\n\nReactDOM.render(<AppWrapper />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}